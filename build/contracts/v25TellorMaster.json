{
  "contractName": "v25TellorMaster",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tellorContract",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_newTellor",
          "type": "address"
        }
      ],
      "name": "NewTellorAddress",
      "type": "event"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "allowedToTrade",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_blockNumber",
          "type": "uint256"
        }
      ],
      "name": "balanceOfAt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_challenge",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_miner",
          "type": "address"
        }
      ],
      "name": "didMine",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_disputeId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "didVote",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_data",
          "type": "bytes32"
        }
      ],
      "name": "getAddressVars",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_disputeId",
          "type": "uint256"
        }
      ],
      "name": "getAllDisputeVars",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[9]",
          "name": "",
          "type": "uint256[9]"
        },
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCurrentVariables",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        }
      ],
      "name": "getDisputeIdByDisputeHash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_disputeId",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_data",
          "type": "bytes32"
        }
      ],
      "name": "getDisputeUintVars",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getLastNewValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_requestId",
          "type": "uint256"
        }
      ],
      "name": "getLastNewValueById",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getMinedBlockNum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getMinersByRequestIdAndTimestamp",
      "outputs": [
        {
          "internalType": "address[5]",
          "name": "",
          "type": "address[5]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_requestId",
          "type": "uint256"
        }
      ],
      "name": "getNewValueCountbyRequestId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_request",
          "type": "bytes32"
        }
      ],
      "name": "getRequestIdByQueryHash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getRequestIdByRequestQIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getRequestIdByTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getRequestQ",
      "outputs": [
        {
          "internalType": "uint256[51]",
          "name": "",
          "type": "uint256[51]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_data",
          "type": "bytes32"
        }
      ],
      "name": "getRequestUintVars",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_requestId",
          "type": "uint256"
        }
      ],
      "name": "getRequestVars",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_staker",
          "type": "address"
        }
      ],
      "name": "getStakerInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getSubmissionsByTimestamp",
      "outputs": [
        {
          "internalType": "uint256[5]",
          "name": "",
          "type": "uint256[5]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_requestID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getTimestampbyRequestIDandIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_data",
          "type": "bytes32"
        }
      ],
      "name": "getUintVar",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getVariablesOnDeck",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "isInDispute",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "retrieveData",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_newDeity",
          "type": "address"
        }
      ],
      "name": "changeDeity",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_tellorContract",
          "type": "address"
        }
      ],
      "name": "changeTellorContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tellorContract\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_newTellor\",\"type\":\"address\"}],\"name\":\"NewTellorAddress\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"allowedToTrade\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"balanceOfAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newDeity\",\"type\":\"address\"}],\"name\":\"changeDeity\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tellorContract\",\"type\":\"address\"}],\"name\":\"changeTellorContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_challenge\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_miner\",\"type\":\"address\"}],\"name\":\"didMine\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"didVote\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_data\",\"type\":\"bytes32\"}],\"name\":\"getAddressVars\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeId\",\"type\":\"uint256\"}],\"name\":\"getAllDisputeVars\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[9]\",\"name\":\"\",\"type\":\"uint256[9]\"},{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCurrentVariables\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"}],\"name\":\"getDisputeIdByDisputeHash\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_data\",\"type\":\"bytes32\"}],\"name\":\"getDisputeUintVars\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLastNewValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"}],\"name\":\"getLastNewValueById\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getMinedBlockNum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getMinersByRequestIdAndTimestamp\",\"outputs\":[{\"internalType\":\"address[5]\",\"name\":\"\",\"type\":\"address[5]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"}],\"name\":\"getNewValueCountbyRequestId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_request\",\"type\":\"bytes32\"}],\"name\":\"getRequestIdByQueryHash\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getRequestIdByRequestQIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getRequestIdByTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRequestQ\",\"outputs\":[{\"internalType\":\"uint256[51]\",\"name\":\"\",\"type\":\"uint256[51]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_data\",\"type\":\"bytes32\"}],\"name\":\"getRequestUintVars\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"}],\"name\":\"getRequestVars\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"getStakerInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getSubmissionsByTimestamp\",\"outputs\":[{\"internalType\":\"uint256[5]\",\"name\":\"\",\"type\":\"uint256[5]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getTimestampbyRequestIDandIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_data\",\"type\":\"bytes32\"}],\"name\":\"getUintVar\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getVariablesOnDeck\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"isInDispute\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"retrieveData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the Master contract with all tellor getter functions and delegate call to v25Tellor. The logic for the functions on this contract is saved on the v25TellorGettersLibrary, v25TellorTransfer, v25TellorGettersLibrary, and v25TellorStake\",\"methods\":{\"allowance(address,address)\":{\"params\":{\"_spender\":\"address\",\"_user\":\"address\"},\"return\":\"Returns the remaining allowance of tokens granted to the _spender from the _user\"},\"allowedToTrade(address,uint256)\":{\"details\":\"This function returns whether or not a given user is allowed to trade a given amount\",\"params\":{\"_amount\":\"uint of amount\",\"_user\":\"address\"},\"return\":\"true if the user is alloed to trade the amount specified\"},\"balanceOf(address)\":{\"details\":\"Gets balance of owner specified\",\"params\":{\"_user\":\"is the owner address used to look up the balance\"},\"return\":\"Returns the balance associated with the passed in _user\"},\"balanceOfAt(address,uint256)\":{\"details\":\"Queries the balance of _user at a specific _blockNumber\",\"params\":{\"_blockNumber\":\"The block number when the balance is queried\",\"_user\":\"The address from which the balance will be retrieved\"},\"return\":\"The balance at _blockNumber\"},\"changeDeity(address)\":{\"details\":\"Gets the 5 miners who mined the value for the specified requestId/_timestampOnly needs to be in library\",\"params\":{\"_newDeity\":\"the new Deity in the contract\"}},\"changeTellorContract(address)\":{\"details\":\"allows for the deity to make fast upgrades.  Deity should be 0 address if decentralized\",\"params\":{\"_tellorContract\":\"the address of the new v25Tellor Contract\"}},\"constructor\":{\"details\":\"The constructor sets the original `tellorStorageOwner` of the contract to the sender account, the tellor contract to the v25Tellor master address and owner to the v25Tellor master owner address\",\"params\":{\"_tellorContract\":\"is the address for the tellor contract\"}},\"didMine(bytes32,address)\":{\"details\":\"This function tells you if a given challenge has been completed by a given miner\",\"params\":{\"_challenge\":\"the challenge to search for\",\"_miner\":\"address that you want to know if they solved the challenge\"},\"return\":\"true if the _miner address provided solved the\"},\"didVote(uint256,address)\":{\"details\":\"Checks if an address voted in a given dispute\",\"params\":{\"_address\":\"to look up\",\"_disputeId\":\"to look up\"},\"return\":\"bool of whether or not party voted\"},\"getAddressVars(bytes32)\":{\"details\":\"allows v25Tellor to read data from the addressVars mapping\",\"params\":{\"_data\":\"is the keccak256(\\\"variable_name\\\") of the variable that is being accessed. These are examples of how the variables are saved within other functions: addressVars[keccak256(\\\"_owner\\\")] addressVars[keccak256(\\\"tellorContract\\\")]\"},\"return\":\"address of the requested variable \"},\"getAllDisputeVars(uint256)\":{\"details\":\"Gets all dispute variables\",\"params\":{\"_disputeId\":\"to look up\"},\"return\":\"bytes32 hash of disputebool executed where true if it has been voted onbool disputeVotePassedbool isPropFork true if the dispute is a proposed forkaddress of reportedMineraddress of reportingPartyaddress of proposedForkAddressuint of requestIduint of timestampuint of valueuint of minExecutionDateuint of numberOfVotesuint of blocknumberuint of minerSlotuint of quorumuint of feeint count of the current tally\"},\"getCurrentVariables()\":{\"details\":\"Getter function for variables for the requestId being currently mined(currentRequestId)\",\"return\":\"current challenge, curretnRequestId, level of difficulty, api/query string, and granularity(number of decimals requested), total tip for the request\"},\"getDisputeIdByDisputeHash(bytes32)\":{\"details\":\"Checks if a given hash of miner,requestId has been disputed\",\"params\":{\"_hash\":\"is the sha256(abi.encodePacked(_miners[2],_requestId));\"},\"return\":\"uint disputeId\"},\"getDisputeUintVars(uint256,bytes32)\":{\"details\":\"Checks for uint variables in the disputeUintVars mapping based on the disuputeId\",\"params\":{\"_data\":\"the variable to pull from the mapping. _data = keccak256(\\\"variable_name\\\") where variable_name is the variables/strings used to save the data in the mapping. The variables names are commented out under the disputeUintVars under the Dispute struct\",\"_disputeId\":\"is the dispute id;\"},\"return\":\"uint value for the bytes32 data submitted\"},\"getLastNewValue()\":{\"details\":\"Gets the a value for the latest timestamp available\",\"return\":\"value for timestamp of last proof of work submitedtrue if the is a timestamp for the lastNewValue\"},\"getLastNewValueById(uint256)\":{\"details\":\"Gets the a value for the latest timestamp available\",\"params\":{\"_requestId\":\"being requested\"},\"return\":\"value for timestamp of last proof of work submited and if true if it exist or 0 and false if it doesn't\"},\"getMinedBlockNum(uint256,uint256)\":{\"details\":\"Gets blocknumber for mined timestamp\",\"params\":{\"_requestId\":\"to look up\",\"_timestamp\":\"is the timestamp to look up blocknumber\"},\"return\":\"uint of the blocknumber which the dispute was mined\"},\"getMinersByRequestIdAndTimestamp(uint256,uint256)\":{\"details\":\"Gets the 5 miners who mined the value for the specified requestId/_timestamp\",\"params\":{\"_requestId\":\"to look up\",\"_timestamp\":\"is the timestamp to look up miners for\"},\"return\":\"the 5 miners' addresses\"},\"getNewValueCountbyRequestId(uint256)\":{\"details\":\"Counts the number of values that have been submited for the request if called for the currentRequest being mined it can tell you how many miners have submitted a value for that request so far\",\"params\":{\"_requestId\":\"the requestId to look up\"},\"return\":\"uint count of the number of values received for the requestId\"},\"getRequestIdByQueryHash(bytes32)\":{\"details\":\"Getter function for requestId based on the queryHash\",\"params\":{\"_request\":\"is the hash(of string api and granularity) to check if a request already exists\"},\"return\":\"uint requestId\"},\"getRequestIdByRequestQIndex(uint256)\":{\"details\":\"Getter function for the specified requestQ index\",\"params\":{\"_index\":\"to look up in the requestQ array\"},\"return\":\"uint of reqeuestId\"},\"getRequestIdByTimestamp(uint256)\":{\"details\":\"Getter function for requestId based on timestamp\",\"params\":{\"_timestamp\":\"to check requestId\"},\"return\":\"uint of reqeuestId\"},\"getRequestQ()\":{\"details\":\"Getter function for the requestQ array\",\"return\":\"the requestQ arrray\"},\"getRequestUintVars(uint256,bytes32)\":{\"details\":\"Allowes access to the uint variables saved in the apiUintVars under the requestDetails struct for the requestId specified\",\"params\":{\"_data\":\"the variable to pull from the mapping. _data = keccak256(\\\"variable_name\\\") where variable_name is the variables/strings used to save the data in the mapping. The variables names are commented out under the apiUintVars under the requestDetails struct\",\"_requestId\":\"to look up\"},\"return\":\"uint value of the apiUintVars specified in _data for the requestId specified\"},\"getRequestVars(uint256)\":{\"details\":\"Gets the API struct variables that are not mappings\",\"params\":{\"_requestId\":\"to look up\"},\"return\":\"string of api to querystring of symbol of api to querybytes32 hash of stringbytes32 of the granularity(decimal places) requesteduint of index in requestQ arrayuint of current payout/tip for this requestId\"},\"getStakerInfo(address)\":{\"details\":\"This function allows users to retireve all information about a staker\",\"params\":{\"_staker\":\"address of staker inquiring about\"},\"return\":\"uint current state of stakeruint startDate of staking\"},\"getSubmissionsByTimestamp(uint256,uint256)\":{\"details\":\"Gets the 5 miners who mined the value for the specified requestId/_timestamp\",\"params\":{\"_requestId\":\"to look up\",\"_timestamp\":\"is the timestampt to look up miners for\"},\"return\":\"address[5] array of 5 addresses ofminers that mined the requestId\"},\"getTimestampbyRequestIDandIndex(uint256,uint256)\":{\"details\":\"Gets the timestamp for the value based on their index\",\"params\":{\"_index\":\"is the value index to look up\",\"_requestID\":\"is the requestId to look up\"},\"return\":\"uint timestamp\"},\"getUintVar(bytes32)\":{\"details\":\"Getter for the variables saved under the TellorStorageStruct uintVars variable\",\"params\":{\"_data\":\"the variable to pull from the mapping. _data = keccak256(\\\"variable_name\\\") where variable_name is the variables/strings used to save the data in the mapping. The variables names are commented out under the uintVars under the TellorStorageStruct struct This is an example of how data is saved into the mapping within other functions: self.uintVars[keccak256(\\\"stakerCount\\\")]\"},\"return\":\"uint of specified variable\"},\"getVariablesOnDeck()\":{\"details\":\"Getter function for next requestId on queue/request with highest payout at time the function is called\",\"return\":\"onDeck/info on request with highest payout-- RequestId, Totaltips, and API query string\"},\"isInDispute(uint256,uint256)\":{\"details\":\"Gets the 5 miners who mined the value for the specified requestId/_timestamp\",\"params\":{\"_requestId\":\"to look up\",\"_timestamp\":\"is the timestamp to look up miners for\"},\"return\":\"bool true if requestId/timestamp is under dispute\"},\"retrieveData(uint256,uint256)\":{\"details\":\"Retreive value from oracle based on timestamp\",\"params\":{\"_requestId\":\"being requested\",\"_timestamp\":\"to retreive data/value from\"},\"return\":\"value for timestamp submitted\"},\"totalSupply()\":{\"details\":\"Getter for the total_supply of oracle tokens\",\"return\":\"uint total supply\"}},\"title\":\"v25Tellor Master\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/jgcarv/Dev/Tellor/TellorLegacy/contracts/V25/v25TellorMaster.sol\":\"v25TellorMaster\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/jgcarv/Dev/Tellor/TellorLegacy/contracts/V25/libraries/v25SafeMath.sol\":{\"keccak256\":\"0xbba00e22d6a418dba210edbe5f20186690f32d32de14a43cf246a077766d1f01\",\"urls\":[\"bzz-raw://04f0608558e799ee3696dcc0b6ecf4d5b73dd567d6a5e244e036f3f0ece7c75f\",\"dweb:/ipfs/QmThcGx4XThRFqBF2gH1eEbebqgFhLghG77Qr7b93SuUx9\"]},\"/home/jgcarv/Dev/Tellor/TellorLegacy/contracts/V25/libraries/v25TellorDispute.sol\":{\"keccak256\":\"0xa9cfa785b2d34a7cb425da0a21a70da0e1d93ba52d5865147cf18db87c42ec72\",\"urls\":[\"bzz-raw://149525c2f72b79740b4bbae689987b2ecda05fa8e157f43decc63722b3e45e32\",\"dweb:/ipfs/QmfYRcE6eSqmz4GJ3HjaMhcpF1xshhZ9CqFUBj7StTv8y8\"]},\"/home/jgcarv/Dev/Tellor/TellorLegacy/contracts/V25/libraries/v25TellorGettersLibrary.sol\":{\"keccak256\":\"0x55ba28ce159456a10d0d093dec2fd6d1f23e14886155d04d085cee554d2904f9\",\"urls\":[\"bzz-raw://5e203e425839ccff7e3903eeeae8417a3b816830d6c1983449b0b2350712e0e1\",\"dweb:/ipfs/QmNtuVT7sXmY5b1HSSu3Kf545hVWnsQxARpEjAU2fKzE4u\"]},\"/home/jgcarv/Dev/Tellor/TellorLegacy/contracts/V25/libraries/v25TellorStake.sol\":{\"keccak256\":\"0x18831014ec8f445442d67c38dd71f43156963e07153b5946fdc7690f8cce9459\",\"urls\":[\"bzz-raw://7b889c9d9b2e92fd3ea006f4f271ba176cdd90320f9c34b1b9801819508743f6\",\"dweb:/ipfs/QmbBzntAVt49poomJThBmphxrH93xkmKtSF8USChPVaoxY\"]},\"/home/jgcarv/Dev/Tellor/TellorLegacy/contracts/V25/libraries/v25TellorStorage.sol\":{\"keccak256\":\"0x67cd5888b11e787cc7e3bc8e887b6b1ab29a12268ba767c4b8229af1e01b58c7\",\"urls\":[\"bzz-raw://c121d7899832a7742b883356338885414860ec0b002ca8b72bfaea3e3054e29a\",\"dweb:/ipfs/QmNTU7WfUfRiQ8C7Lrmo7H2ck6rD8FuV9UCDzDp3U86h3W\"]},\"/home/jgcarv/Dev/Tellor/TellorLegacy/contracts/V25/libraries/v25TellorTransfer.sol\":{\"keccak256\":\"0x493def4e6b8b9d7fc36615f6ea69b1b5f5b67fb1c9d049b32cfc70ff907e7ebe\",\"urls\":[\"bzz-raw://7338e793c6dc418d0d1f9626144f0d7e5bdc2ab663f736252f136f798c8472f4\",\"dweb:/ipfs/Qmeiz8q91FQLz9zE41YRLmKdU1ob8wf9Kfxf6joPkrgP7v\"]},\"/home/jgcarv/Dev/Tellor/TellorLegacy/contracts/V25/libraries/v25Utilities.sol\":{\"keccak256\":\"0x47166e87ee6b7b8393a7294b2625753e0bff21fe70fca9d58d2a370017ddc725\",\"urls\":[\"bzz-raw://683b244427afd8145d4df84c531163d7aaeb80be42df6aff87fc5f299d87307d\",\"dweb:/ipfs/QmQr4Y6scm2ncLTiCxRUzW7SPCuwicUmaW56Mefbvvydh6\"]},\"/home/jgcarv/Dev/Tellor/TellorLegacy/contracts/V25/v25TellorGetters.sol\":{\"keccak256\":\"0x7c42b5c6e6969880144e1760ff2fd8996d0d7e76d04b4edbc7dcd9e778d565ea\",\"urls\":[\"bzz-raw://94a3600d7a7833b9bda149c0f8bad955a2355d84862b6b5e8620b2481013108d\",\"dweb:/ipfs/QmcncrV9M4nCoK9JiMAUjTEMcJGTRbN2AXJvabsLeSxLty\"]},\"/home/jgcarv/Dev/Tellor/TellorLegacy/contracts/V25/v25TellorMaster.sol\":{\"keccak256\":\"0x67493a386f7916eb089da6c9575e34a5589301ae88876f650abd16d0b8d4df05\",\"urls\":[\"bzz-raw://2b00e8a2862f812d7c1f11129a16f4f8531ffa2c31d3e9116ff76718222d75a7\",\"dweb:/ipfs/QmPAYVh1okwkuRSPLThwGKJyqVuW8GNdKpwBS5UspTTRw2\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516131353803806131358339818101604052602081101561003357600080fd5b8101908080519060200190929190505050336000603f01600060405180807f5f6f776e6572000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550336000603f01600060405180807f5f6465697479000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806000603f01600060405180807f74656c6c6f72436f6e7472616374000000000000000000000000000000000000815250600e0190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fc2d1449eb0b6547aa426e09d9942a77fa4fc8cd3296305b3163e22452e0bcb8d81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150612ee0806102556000396000f3fe6080604052600436106101e35760003560e01c8063733bdef011610102578063af0b132711610095578063dd62ed3e11610064578063dd62ed3e14610e7f578063e0ae93c114610f04578063e1eee6d614610f5d578063fc7cf0a014611099576101e3565b8063af0b132714610c45578063b541302914610d84578063c775b54214610dd7578063da37994114610e30576101e3565b8063999cf26c116100d1578063999cf26c14610a5b578063a22e407a14610ace578063a7c438bc14610b81578063ae0a827914610bf4576101e3565b8063733bdef0146108e457806377fbb663146109505780637f6fd5d9146109a957806393fa491514610a02576101e3565b806346eee1c41161017a5780636173c0b8116101495780636173c0b81461073c57806363bb82ad1461078b57806369026d63146107fe57806370a082311461087f576101e3565b806346eee1c4146105de57806347abd7f11461062d5780634ee2cd7e1461067e578063612c8f7f146106ed576101e3565b806319e8e03b116101b657806319e8e03b1461043a5780631db842f0146104d85780633180f8df146105275780633df0777b14610581576101e3565b80630f0b424d146102c457806311c9851214610313578063133bee5e1461039457806318160ddd1461040f575b600080603f01600060405180807f74656c6c6f72436f6e7472616374000000000000000000000000000000000000815250600e0190506040518091039020815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060606000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050905060008082516020840185600019f43d604051816000823e82600081146102c0578282f35b8282fd5b3480156102d057600080fd5b506102fd600480360360208110156102e757600080fd5b81019080803590602001909291905050506110cf565b6040518082815260200191505060405180910390f35b34801561031f57600080fd5b506103566004803603604081101561033657600080fd5b8101908080359060200190929190803590602001909291905050506110ec565b6040518082600560200280838360005b83811015610381578082015181840152602081019050610366565b5050505090500191505060405180910390f35b3480156103a057600080fd5b506103cd600480360360208110156103b757600080fd5b8101908080359060200190929190505050611112565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561041b57600080fd5b5061042461112f565b6040518082815260200191505060405180910390f35b34801561044657600080fd5b5061044f611140565b6040518084815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561049b578082015181840152602081019050610480565b50505050905090810190601f1680156104c85780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b3480156104e457600080fd5b50610511600480360360208110156104fb57600080fd5b810190808035906020019092919050505061115a565b6040518082815260200191505060405180910390f35b34801561053357600080fd5b506105606004803603602081101561054a57600080fd5b8101908080359060200190929190505050611177565b60405180838152602001821515151581526020019250505060405180910390f35b34801561058d57600080fd5b506105c4600480360360408110156105a457600080fd5b810190808035906020019092919080359060200190929190505050611197565b604051808215151515815260200191505060405180910390f35b3480156105ea57600080fd5b506106176004803603602081101561060157600080fd5b81019080803590602001909291905050506111b7565b6040518082815260200191505060405180910390f35b34801561063957600080fd5b5061067c6004803603602081101561065057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111d4565b005b34801561068a57600080fd5b506106d7600480360360408110156106a157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506111eb565b6040518082815260200191505060405180910390f35b3480156106f957600080fd5b506107266004803603602081101561071057600080fd5b81019080803590602001909291905050506112bd565b6040518082815260200191505060405180910390f35b34801561074857600080fd5b506107756004803603602081101561075f57600080fd5b81019080803590602001909291905050506112da565b6040518082815260200191505060405180910390f35b34801561079757600080fd5b506107e4600480360360408110156107ae57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112f7565b604051808215151515815260200191505060405180910390f35b34801561080a57600080fd5b506108416004803603604081101561082157600080fd5b8101908080359060200190929190803590602001909291905050506113c9565b6040518082600560200280838360005b8381101561086c578082015181840152602081019050610851565b5050505090500191505060405180910390f35b34801561088b57600080fd5b506108ce600480360360208110156108a257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113ef565b6040518082815260200191505060405180910390f35b3480156108f057600080fd5b506109336004803603602081101561090757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114b8565b604051808381526020018281526020019250505060405180910390f35b34801561095c57600080fd5b506109936004803603604081101561097357600080fd5b8101908080359060200190929190803590602001909291905050506114d8565b6040518082815260200191505060405180910390f35b3480156109b557600080fd5b506109ec600480360360408110156109cc57600080fd5b8101908080359060200190929190803590602001909291905050506114f8565b6040518082815260200191505060405180910390f35b348015610a0e57600080fd5b50610a4560048036036040811015610a2557600080fd5b810190808035906020019092919080359060200190929190505050611518565b6040518082815260200191505060405180910390f35b348015610a6757600080fd5b50610ab460048036036040811015610a7e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611538565b604051808215151515815260200191505060405180910390f35b348015610ada57600080fd5b50610ae361160a565b6040518087815260200186815260200185815260200180602001848152602001838152602001828103825285818151815260200191508051906020019080838360005b83811015610b41578082015181840152602081019050610b26565b50505050905090810190601f168015610b6e5780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b348015610b8d57600080fd5b50610bda60048036036040811015610ba457600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611632565b604051808215151515815260200191505060405180910390f35b348015610c0057600080fd5b50610c4360048036036020811015610c1757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611652565b005b348015610c5157600080fd5b50610c7e60048036036020811015610c6857600080fd5b8101908080359060200190929190505050611669565b604051808a81526020018915151515815260200188151515158152602001871515151581526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183600960200280838360005b83811015610d63578082015181840152602081019050610d48565b50505050905001828152602001995050505050505050505060405180910390f35b348015610d9057600080fd5b50610d996116b1565b6040518082603360200280838360005b83811015610dc4578082015181840152602081019050610da9565b5050505090500191505060405180910390f35b348015610de357600080fd5b50610e1a60048036036040811015610dfa57600080fd5b8101908080359060200190929190803590602001909291905050506116c8565b6040518082815260200191505060405180910390f35b348015610e3c57600080fd5b50610e6960048036036020811015610e5357600080fd5b81019080803590602001909291905050506116e8565b6040518082815260200191505060405180910390f35b348015610e8b57600080fd5b50610eee60048036036040811015610ea257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611705565b6040518082815260200191505060405180910390f35b348015610f1057600080fd5b50610f4760048036036040811015610f2757600080fd5b810190808035906020019092919080359060200190929190505050611803565b6040518082815260200191505060405180910390f35b348015610f6957600080fd5b50610f9660048036036020811015610f8057600080fd5b8101908080359060200190929190505050611823565b604051808060200180602001878152602001868152602001858152602001848152602001838103835289818151815260200191508051906020019080838360005b83811015610ff2578082015181840152602081019050610fd7565b50505050905090810190601f16801561101f5780820380516001836020036101000a031916815260200191505b50838103825288818151815260200191508051906020019080838360005b8381101561105857808201518184015260208101905061103d565b50505050905090810190601f1680156110855780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b3480156110a557600080fd5b506110ae611855565b60405180838152602001821515151581526020019250505060405180910390f35b60006110e582600061186a90919063ffffffff16565b9050919050565b6110f4612e21565b61110a8383600061188a9092919063ffffffff16565b905092915050565b600061112882600061190090919063ffffffff16565b9050919050565b600061113b6000611940565b905090565b600080606061114f6000611994565b925092509250909192565b6000611170826000611ac890919063ffffffff16565b9050919050565b60008061118e836000611ae890919063ffffffff16565b91509150915091565b60006111af83836000611b609092919063ffffffff16565b905092915050565b60006111cd826000611ba290919063ffffffff16565b9050919050565b6111e8816000611bc890919063ffffffff16565b50565b60008073__v25TellorTransfer_____________________63e22676ce909185856040518463ffffffff1660e01b8152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060206040518083038186803b15801561127a57600080fd5b505af415801561128e573d6000803e3d6000fd5b505050506040513d60208110156112a457600080fd5b8101908080519060200190929190505050905092915050565b60006112d3826000611d6090919063ffffffff16565b9050919050565b60006112f0826000611d8090919063ffffffff16565b9050919050565b60008073__v25TellorGettersLibrary_______________6383b9425a909185856040518463ffffffff1660e01b8152600401808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060206040518083038186803b15801561138657600080fd5b505af415801561139a573d6000803e3d6000fd5b505050506040513d60208110156113b057600080fd5b8101908080519060200190929190505050905092915050565b6113d1612e43565b6113e783836000611e179092919063ffffffff16565b905092915050565b60008073__v25TellorTransfer_____________________63e7f2cdae9091846040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b15801561147657600080fd5b505af415801561148a573d6000803e3d6000fd5b505050506040513d60208110156114a057600080fd5b81019080805190602001909291905050509050919050565b6000806114cf836000611ec390919063ffffffff16565b91509150915091565b60006114f083836000611f5b9092919063ffffffff16565b905092915050565b600061151083836000611f949092919063ffffffff16565b905092915050565b600061153083836000611fc99092919063ffffffff16565b905092915050565b60008073__v25TellorTransfer_____________________63ff6dae7e909185856040518463ffffffff1660e01b8152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060206040518083038186803b1580156115c757600080fd5b505af41580156115db573d6000803e3d6000fd5b505050506040513d60208110156115f157600080fd5b8101908080519060200190929190505050905092915050565b6000806000606060008061161e6000611ffe565b955095509550955095509550909192939495565b600061164a838360006123089092919063ffffffff16565b905092915050565b61166681600061237690919063ffffffff16565b50565b600080600080600080600061167c612e65565b60006116928a600061257190919063ffffffff16565b9850985098509850985098509850985098509193959799909294969850565b6116b9612e88565b6116c36000612947565b905090565b60006116e0838360006129969092919063ffffffff16565b905092915050565b60006116fe8260006129cb90919063ffffffff16565b9050919050565b60008073__v25TellorTransfer_____________________634001c0fc909185856040518463ffffffff1660e01b8152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060206040518083038186803b1580156117c057600080fd5b505af41580156117d4573d6000803e3d6000fd5b505050506040513d60208110156117ea57600080fd5b8101908080519060200190929190505050905092915050565b600061181b838360006129eb9092919063ffffffff16565b905092915050565b606080600080600080611840876000612a2090919063ffffffff16565b95509550955095509550955091939550919395565b6000806118626000612c7f565b915091509091565b600082604201600083815260200190815260200160002054905092915050565b611892612e21565b83604801600084815260200190815260200160002060090160008381526020019081526020016000206005806020026040519081016040528092919082600580156118f2576020028201915b8154815260200190600101908083116118de575b505050505090509392505050565b600082603f01600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b600081604001600060405180807f746f74616c5f737570706c790000000000000000000000000000000000000000815250600c01905060405180910390208152602001908152602001600020549050919050565b600080606060006119a485612d41565b905080856048016000838152602001908152602001600020600401600060405180807f746f74616c54697000000000000000000000000000000000000000000000000081525060080190506040518091039020815260200190815260200160002054866048016000848152602001908152602001600020600001808054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611ab35780601f10611a8857610100808354040283529160200191611ab3565b820191906000526020600020905b815481529060010190602001808311611a9657829003601f168201915b50505050509050935093509350509193909250565b600082604901600083815260200190815260200160002054905092915050565b600080600084604801600085815260200190815260200160002090506000816003018054905014611b4d57611b41858583600301600185600301805490500381548110611b3157fe5b9060005260206000200154611fc9565b60019250925050611b59565b60008081915092509250505b9250929050565b6000836048016000848152602001908152602001600020600701600083815260200190815260200160002060009054906101000a900460ff1690509392505050565b600082604801600083815260200190815260200160002060030180549050905092915050565b3373ffffffffffffffffffffffffffffffffffffffff1682603f01600060405180807f5f6465697479000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611cd3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f53656e646572206973206e6f742064656974790000000000000000000000000081525060200191505060405180910390fd5b8082603f01600060405180807f5f6465697479000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600082604001600083815260200190815260200160002054905092915050565b60006032821115611df9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f526571756573745120696e6465782069732061626f766520353000000000000081525060200191505060405180910390fd5b82604301600083815260200190815260200160002054905092915050565b611e1f612e43565b8360480160008481526020019081526020016000206008016000838152602001908152602001600020600580602002604051908101604052809291908260058015611eb5576020028201915b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611e6b575b505050505090509392505050565b6000808360470160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001548460470160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154915091509250929050565b60008360480160008481526020019081526020016000206003018281548110611f8057fe5b906000526020600020015490509392505050565b600083604401600084815260200190815260200160002060050160008381526020019081526020016000205490509392505050565b600083604801600084815260200190815260200160002060060160008381526020019081526020016000205490509392505050565b60008060006060600080866000015487604001600060405180807f63757272656e74526571756573744964000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000205488604001600060405180807f646966666963756c747900000000000000000000000000000000000000000000815250600a01905060405180910390208152602001908152602001600020548960480160008b604001600060405180807f63757272656e74526571756573744964000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000205481526020019081526020016000206000018a60480160008c604001600060405180807f63757272656e7452657175657374496400000000000000000000000000000000815250601001905060405180910390208152602001908152602001600020548152602001908152602001600020600401600060405180807f6772616e756c6172697479000000000000000000000000000000000000000000815250600b01905060405180910390208152602001908152602001600020548b60480160008d604001600060405180807f63757272656e7452657175657374496400000000000000000000000000000000815250601001905060405180910390208152602001908152602001600020548152602001908152602001600020600401600060405180807f746f74616c54697000000000000000000000000000000000000000000000000081525060080190506040518091039020815260200190815260200160002054828054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156122ec5780601f106122c1576101008083540402835291602001916122ec565b820191906000526020600020905b8154815290600101906020018083116122cf57829003601f168201915b5050505050925095509550955095509550955091939550919395565b600083604401600084815260200190815260200160002060060160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1690509392505050565b3373ffffffffffffffffffffffffffffffffffffffff1682603f01600060405180807f5f6465697479000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612481576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f53656e646572206973206e6f742064656974790000000000000000000000000081525060200191505060405180910390fd5b8082603f01600060405180807f74656c6c6f72436f6e7472616374000000000000000000000000000000000000815250600e0190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fc2d1449eb0b6547aa426e09d9942a77fa4fc8cd3296305b3163e22452e0bcb8d81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15050565b6000806000806000806000612584612e65565b6000808b60440160008c8152602001908152602001600020905080600001548160020160009054906101000a900460ff168260020160019054906101000a900460ff168360020160029054906101000a900460ff168460020160039054906101000a900473ffffffffffffffffffffffffffffffffffffffff168560030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168660040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660405180610120016040528089600501600060405180807f726571756573744964000000000000000000000000000000000000000000000081525060090190506040518091039020815260200190815260200160002054815260200189600501600060405180807f74696d657374616d70000000000000000000000000000000000000000000000081525060090190506040518091039020815260200190815260200160002054815260200189600501600060405180807f76616c756500000000000000000000000000000000000000000000000000000081525060050190506040518091039020815260200190815260200160002054815260200189600501600060405180807f6d696e457865637574696f6e446174650000000000000000000000000000000081525060100190506040518091039020815260200190815260200160002054815260200189600501600060405180807f6e756d6265724f66566f74657300000000000000000000000000000000000000815250600d0190506040518091039020815260200190815260200160002054815260200189600501600060405180807f626c6f636b4e756d626572000000000000000000000000000000000000000000815250600b0190506040518091039020815260200190815260200160002054815260200189600501600060405180807f6d696e6572536c6f74000000000000000000000000000000000000000000000081525060090190506040518091039020815260200190815260200160002054815260200189600501600060405180807f71756f72756d000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002054815260200189600501600060405180807f6665650000000000000000000000000000000000000000000000000000000000815250600301905060405180910390208152602001908152602001600020548152508860010154995099509950995099509950995099509950509295985092959850929598565b61294f612e88565b8160010160338060200260405190810160405280929190826033801561298a576020028201915b815481526020019060010190808311612976575b50505050509050919050565b600083604801600084815260200190815260200160002060050160008381526020019081526020016000205490509392505050565b600082604a01600083815260200190815260200160002054905092915050565b600083604801600084815260200190815260200160002060040160008381526020019081526020016000205490509392505050565b606080600080600080600088604801600089815260200190815260200160002090508060000181600101826002015483600401600060405180807f6772616e756c6172697479000000000000000000000000000000000000000000815250600b019050604051809103902081526020019081526020016000205484600401600060405180807f7265717565737451506f736974696f6e000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000205485600401600060405180807f746f74616c54697000000000000000000000000000000000000000000000000081525060080190506040518091039020815260200190815260200160002054858054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612bc55780601f10612b9a57610100808354040283529160200191612bc5565b820191906000526020600020905b815481529060010190602001808311612ba857829003601f168201915b50505050509550848054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612c615780601f10612c3657610100808354040283529160200191612c61565b820191906000526020600020905b815481529060010190602001808311612c4457829003601f168201915b50505050509450965096509650965096509650509295509295509295565b600080612d368384604201600086604001600060405180807f74696d654f664c6173744e657756616c756500000000000000000000000000008152506012019050604051809103902081526020019081526020016000205481526020019081526020016000205485604001600060405180807f74696d654f664c6173744e657756616c7565000000000000000000000000000081525060120190506040518091039020815260200190815260200160002054611fc9565b600191509150915091565b6000806000612d8e84600101603380602002604051908101604052809291908260338015612d84576020028201915b815481526020019060010190808311612d70575b5050505050612db5565b80925081935050508360430160008281526020019081526020016000205492505050919050565b60008060019050828160338110612dc857fe5b602002015191506000600290505b6033811015612e1b5782848260338110612dec57fe5b60200201511115612e0e57838160338110612e0357fe5b602002015192508091505b8080600101915050612dd6565b50915091565b6040518060a00160405280600590602082028038833980820191505090505090565b6040518060a00160405280600590602082028038833980820191505090505090565b604051806101200160405280600990602082028038833980820191505090505090565b60405180610660016040528060339060208202803883398082019150509050509056fea265627a7a72315820400a2257588e941edbe85ae927db73dbd755de73a968beb0b1c03be7400cf19a64736f6c63430005100032",
  "deployedBytecode": "0x6080604052600436106101e35760003560e01c8063733bdef011610102578063af0b132711610095578063dd62ed3e11610064578063dd62ed3e14610e7f578063e0ae93c114610f04578063e1eee6d614610f5d578063fc7cf0a014611099576101e3565b8063af0b132714610c45578063b541302914610d84578063c775b54214610dd7578063da37994114610e30576101e3565b8063999cf26c116100d1578063999cf26c14610a5b578063a22e407a14610ace578063a7c438bc14610b81578063ae0a827914610bf4576101e3565b8063733bdef0146108e457806377fbb663146109505780637f6fd5d9146109a957806393fa491514610a02576101e3565b806346eee1c41161017a5780636173c0b8116101495780636173c0b81461073c57806363bb82ad1461078b57806369026d63146107fe57806370a082311461087f576101e3565b806346eee1c4146105de57806347abd7f11461062d5780634ee2cd7e1461067e578063612c8f7f146106ed576101e3565b806319e8e03b116101b657806319e8e03b1461043a5780631db842f0146104d85780633180f8df146105275780633df0777b14610581576101e3565b80630f0b424d146102c457806311c9851214610313578063133bee5e1461039457806318160ddd1461040f575b600080603f01600060405180807f74656c6c6f72436f6e7472616374000000000000000000000000000000000000815250600e0190506040518091039020815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060606000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050905060008082516020840185600019f43d604051816000823e82600081146102c0578282f35b8282fd5b3480156102d057600080fd5b506102fd600480360360208110156102e757600080fd5b81019080803590602001909291905050506110cf565b6040518082815260200191505060405180910390f35b34801561031f57600080fd5b506103566004803603604081101561033657600080fd5b8101908080359060200190929190803590602001909291905050506110ec565b6040518082600560200280838360005b83811015610381578082015181840152602081019050610366565b5050505090500191505060405180910390f35b3480156103a057600080fd5b506103cd600480360360208110156103b757600080fd5b8101908080359060200190929190505050611112565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561041b57600080fd5b5061042461112f565b6040518082815260200191505060405180910390f35b34801561044657600080fd5b5061044f611140565b6040518084815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561049b578082015181840152602081019050610480565b50505050905090810190601f1680156104c85780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b3480156104e457600080fd5b50610511600480360360208110156104fb57600080fd5b810190808035906020019092919050505061115a565b6040518082815260200191505060405180910390f35b34801561053357600080fd5b506105606004803603602081101561054a57600080fd5b8101908080359060200190929190505050611177565b60405180838152602001821515151581526020019250505060405180910390f35b34801561058d57600080fd5b506105c4600480360360408110156105a457600080fd5b810190808035906020019092919080359060200190929190505050611197565b604051808215151515815260200191505060405180910390f35b3480156105ea57600080fd5b506106176004803603602081101561060157600080fd5b81019080803590602001909291905050506111b7565b6040518082815260200191505060405180910390f35b34801561063957600080fd5b5061067c6004803603602081101561065057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111d4565b005b34801561068a57600080fd5b506106d7600480360360408110156106a157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506111eb565b6040518082815260200191505060405180910390f35b3480156106f957600080fd5b506107266004803603602081101561071057600080fd5b81019080803590602001909291905050506112bd565b6040518082815260200191505060405180910390f35b34801561074857600080fd5b506107756004803603602081101561075f57600080fd5b81019080803590602001909291905050506112da565b6040518082815260200191505060405180910390f35b34801561079757600080fd5b506107e4600480360360408110156107ae57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112f7565b604051808215151515815260200191505060405180910390f35b34801561080a57600080fd5b506108416004803603604081101561082157600080fd5b8101908080359060200190929190803590602001909291905050506113c9565b6040518082600560200280838360005b8381101561086c578082015181840152602081019050610851565b5050505090500191505060405180910390f35b34801561088b57600080fd5b506108ce600480360360208110156108a257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113ef565b6040518082815260200191505060405180910390f35b3480156108f057600080fd5b506109336004803603602081101561090757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114b8565b604051808381526020018281526020019250505060405180910390f35b34801561095c57600080fd5b506109936004803603604081101561097357600080fd5b8101908080359060200190929190803590602001909291905050506114d8565b6040518082815260200191505060405180910390f35b3480156109b557600080fd5b506109ec600480360360408110156109cc57600080fd5b8101908080359060200190929190803590602001909291905050506114f8565b6040518082815260200191505060405180910390f35b348015610a0e57600080fd5b50610a4560048036036040811015610a2557600080fd5b810190808035906020019092919080359060200190929190505050611518565b6040518082815260200191505060405180910390f35b348015610a6757600080fd5b50610ab460048036036040811015610a7e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611538565b604051808215151515815260200191505060405180910390f35b348015610ada57600080fd5b50610ae361160a565b6040518087815260200186815260200185815260200180602001848152602001838152602001828103825285818151815260200191508051906020019080838360005b83811015610b41578082015181840152602081019050610b26565b50505050905090810190601f168015610b6e5780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b348015610b8d57600080fd5b50610bda60048036036040811015610ba457600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611632565b604051808215151515815260200191505060405180910390f35b348015610c0057600080fd5b50610c4360048036036020811015610c1757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611652565b005b348015610c5157600080fd5b50610c7e60048036036020811015610c6857600080fd5b8101908080359060200190929190505050611669565b604051808a81526020018915151515815260200188151515158152602001871515151581526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183600960200280838360005b83811015610d63578082015181840152602081019050610d48565b50505050905001828152602001995050505050505050505060405180910390f35b348015610d9057600080fd5b50610d996116b1565b6040518082603360200280838360005b83811015610dc4578082015181840152602081019050610da9565b5050505090500191505060405180910390f35b348015610de357600080fd5b50610e1a60048036036040811015610dfa57600080fd5b8101908080359060200190929190803590602001909291905050506116c8565b6040518082815260200191505060405180910390f35b348015610e3c57600080fd5b50610e6960048036036020811015610e5357600080fd5b81019080803590602001909291905050506116e8565b6040518082815260200191505060405180910390f35b348015610e8b57600080fd5b50610eee60048036036040811015610ea257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611705565b6040518082815260200191505060405180910390f35b348015610f1057600080fd5b50610f4760048036036040811015610f2757600080fd5b810190808035906020019092919080359060200190929190505050611803565b6040518082815260200191505060405180910390f35b348015610f6957600080fd5b50610f9660048036036020811015610f8057600080fd5b8101908080359060200190929190505050611823565b604051808060200180602001878152602001868152602001858152602001848152602001838103835289818151815260200191508051906020019080838360005b83811015610ff2578082015181840152602081019050610fd7565b50505050905090810190601f16801561101f5780820380516001836020036101000a031916815260200191505b50838103825288818151815260200191508051906020019080838360005b8381101561105857808201518184015260208101905061103d565b50505050905090810190601f1680156110855780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b3480156110a557600080fd5b506110ae611855565b60405180838152602001821515151581526020019250505060405180910390f35b60006110e582600061186a90919063ffffffff16565b9050919050565b6110f4612e21565b61110a8383600061188a9092919063ffffffff16565b905092915050565b600061112882600061190090919063ffffffff16565b9050919050565b600061113b6000611940565b905090565b600080606061114f6000611994565b925092509250909192565b6000611170826000611ac890919063ffffffff16565b9050919050565b60008061118e836000611ae890919063ffffffff16565b91509150915091565b60006111af83836000611b609092919063ffffffff16565b905092915050565b60006111cd826000611ba290919063ffffffff16565b9050919050565b6111e8816000611bc890919063ffffffff16565b50565b60008073__v25TellorTransfer_____________________63e22676ce909185856040518463ffffffff1660e01b8152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060206040518083038186803b15801561127a57600080fd5b505af415801561128e573d6000803e3d6000fd5b505050506040513d60208110156112a457600080fd5b8101908080519060200190929190505050905092915050565b60006112d3826000611d6090919063ffffffff16565b9050919050565b60006112f0826000611d8090919063ffffffff16565b9050919050565b60008073__v25TellorGettersLibrary_______________6383b9425a909185856040518463ffffffff1660e01b8152600401808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060206040518083038186803b15801561138657600080fd5b505af415801561139a573d6000803e3d6000fd5b505050506040513d60208110156113b057600080fd5b8101908080519060200190929190505050905092915050565b6113d1612e43565b6113e783836000611e179092919063ffffffff16565b905092915050565b60008073__v25TellorTransfer_____________________63e7f2cdae9091846040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b15801561147657600080fd5b505af415801561148a573d6000803e3d6000fd5b505050506040513d60208110156114a057600080fd5b81019080805190602001909291905050509050919050565b6000806114cf836000611ec390919063ffffffff16565b91509150915091565b60006114f083836000611f5b9092919063ffffffff16565b905092915050565b600061151083836000611f949092919063ffffffff16565b905092915050565b600061153083836000611fc99092919063ffffffff16565b905092915050565b60008073__v25TellorTransfer_____________________63ff6dae7e909185856040518463ffffffff1660e01b8152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060206040518083038186803b1580156115c757600080fd5b505af41580156115db573d6000803e3d6000fd5b505050506040513d60208110156115f157600080fd5b8101908080519060200190929190505050905092915050565b6000806000606060008061161e6000611ffe565b955095509550955095509550909192939495565b600061164a838360006123089092919063ffffffff16565b905092915050565b61166681600061237690919063ffffffff16565b50565b600080600080600080600061167c612e65565b60006116928a600061257190919063ffffffff16565b9850985098509850985098509850985098509193959799909294969850565b6116b9612e88565b6116c36000612947565b905090565b60006116e0838360006129969092919063ffffffff16565b905092915050565b60006116fe8260006129cb90919063ffffffff16565b9050919050565b60008073__v25TellorTransfer_____________________634001c0fc909185856040518463ffffffff1660e01b8152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060206040518083038186803b1580156117c057600080fd5b505af41580156117d4573d6000803e3d6000fd5b505050506040513d60208110156117ea57600080fd5b8101908080519060200190929190505050905092915050565b600061181b838360006129eb9092919063ffffffff16565b905092915050565b606080600080600080611840876000612a2090919063ffffffff16565b95509550955095509550955091939550919395565b6000806118626000612c7f565b915091509091565b600082604201600083815260200190815260200160002054905092915050565b611892612e21565b83604801600084815260200190815260200160002060090160008381526020019081526020016000206005806020026040519081016040528092919082600580156118f2576020028201915b8154815260200190600101908083116118de575b505050505090509392505050565b600082603f01600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b600081604001600060405180807f746f74616c5f737570706c790000000000000000000000000000000000000000815250600c01905060405180910390208152602001908152602001600020549050919050565b600080606060006119a485612d41565b905080856048016000838152602001908152602001600020600401600060405180807f746f74616c54697000000000000000000000000000000000000000000000000081525060080190506040518091039020815260200190815260200160002054866048016000848152602001908152602001600020600001808054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611ab35780601f10611a8857610100808354040283529160200191611ab3565b820191906000526020600020905b815481529060010190602001808311611a9657829003601f168201915b50505050509050935093509350509193909250565b600082604901600083815260200190815260200160002054905092915050565b600080600084604801600085815260200190815260200160002090506000816003018054905014611b4d57611b41858583600301600185600301805490500381548110611b3157fe5b9060005260206000200154611fc9565b60019250925050611b59565b60008081915092509250505b9250929050565b6000836048016000848152602001908152602001600020600701600083815260200190815260200160002060009054906101000a900460ff1690509392505050565b600082604801600083815260200190815260200160002060030180549050905092915050565b3373ffffffffffffffffffffffffffffffffffffffff1682603f01600060405180807f5f6465697479000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611cd3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f53656e646572206973206e6f742064656974790000000000000000000000000081525060200191505060405180910390fd5b8082603f01600060405180807f5f6465697479000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600082604001600083815260200190815260200160002054905092915050565b60006032821115611df9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f526571756573745120696e6465782069732061626f766520353000000000000081525060200191505060405180910390fd5b82604301600083815260200190815260200160002054905092915050565b611e1f612e43565b8360480160008481526020019081526020016000206008016000838152602001908152602001600020600580602002604051908101604052809291908260058015611eb5576020028201915b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611e6b575b505050505090509392505050565b6000808360470160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001548460470160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154915091509250929050565b60008360480160008481526020019081526020016000206003018281548110611f8057fe5b906000526020600020015490509392505050565b600083604401600084815260200190815260200160002060050160008381526020019081526020016000205490509392505050565b600083604801600084815260200190815260200160002060060160008381526020019081526020016000205490509392505050565b60008060006060600080866000015487604001600060405180807f63757272656e74526571756573744964000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000205488604001600060405180807f646966666963756c747900000000000000000000000000000000000000000000815250600a01905060405180910390208152602001908152602001600020548960480160008b604001600060405180807f63757272656e74526571756573744964000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000205481526020019081526020016000206000018a60480160008c604001600060405180807f63757272656e7452657175657374496400000000000000000000000000000000815250601001905060405180910390208152602001908152602001600020548152602001908152602001600020600401600060405180807f6772616e756c6172697479000000000000000000000000000000000000000000815250600b01905060405180910390208152602001908152602001600020548b60480160008d604001600060405180807f63757272656e7452657175657374496400000000000000000000000000000000815250601001905060405180910390208152602001908152602001600020548152602001908152602001600020600401600060405180807f746f74616c54697000000000000000000000000000000000000000000000000081525060080190506040518091039020815260200190815260200160002054828054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156122ec5780601f106122c1576101008083540402835291602001916122ec565b820191906000526020600020905b8154815290600101906020018083116122cf57829003601f168201915b5050505050925095509550955095509550955091939550919395565b600083604401600084815260200190815260200160002060060160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1690509392505050565b3373ffffffffffffffffffffffffffffffffffffffff1682603f01600060405180807f5f6465697479000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612481576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f53656e646572206973206e6f742064656974790000000000000000000000000081525060200191505060405180910390fd5b8082603f01600060405180807f74656c6c6f72436f6e7472616374000000000000000000000000000000000000815250600e0190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fc2d1449eb0b6547aa426e09d9942a77fa4fc8cd3296305b3163e22452e0bcb8d81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15050565b6000806000806000806000612584612e65565b6000808b60440160008c8152602001908152602001600020905080600001548160020160009054906101000a900460ff168260020160019054906101000a900460ff168360020160029054906101000a900460ff168460020160039054906101000a900473ffffffffffffffffffffffffffffffffffffffff168560030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168660040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660405180610120016040528089600501600060405180807f726571756573744964000000000000000000000000000000000000000000000081525060090190506040518091039020815260200190815260200160002054815260200189600501600060405180807f74696d657374616d70000000000000000000000000000000000000000000000081525060090190506040518091039020815260200190815260200160002054815260200189600501600060405180807f76616c756500000000000000000000000000000000000000000000000000000081525060050190506040518091039020815260200190815260200160002054815260200189600501600060405180807f6d696e457865637574696f6e446174650000000000000000000000000000000081525060100190506040518091039020815260200190815260200160002054815260200189600501600060405180807f6e756d6265724f66566f74657300000000000000000000000000000000000000815250600d0190506040518091039020815260200190815260200160002054815260200189600501600060405180807f626c6f636b4e756d626572000000000000000000000000000000000000000000815250600b0190506040518091039020815260200190815260200160002054815260200189600501600060405180807f6d696e6572536c6f74000000000000000000000000000000000000000000000081525060090190506040518091039020815260200190815260200160002054815260200189600501600060405180807f71756f72756d000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002054815260200189600501600060405180807f6665650000000000000000000000000000000000000000000000000000000000815250600301905060405180910390208152602001908152602001600020548152508860010154995099509950995099509950995099509950509295985092959850929598565b61294f612e88565b8160010160338060200260405190810160405280929190826033801561298a576020028201915b815481526020019060010190808311612976575b50505050509050919050565b600083604801600084815260200190815260200160002060050160008381526020019081526020016000205490509392505050565b600082604a01600083815260200190815260200160002054905092915050565b600083604801600084815260200190815260200160002060040160008381526020019081526020016000205490509392505050565b606080600080600080600088604801600089815260200190815260200160002090508060000181600101826002015483600401600060405180807f6772616e756c6172697479000000000000000000000000000000000000000000815250600b019050604051809103902081526020019081526020016000205484600401600060405180807f7265717565737451506f736974696f6e000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000205485600401600060405180807f746f74616c54697000000000000000000000000000000000000000000000000081525060080190506040518091039020815260200190815260200160002054858054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612bc55780601f10612b9a57610100808354040283529160200191612bc5565b820191906000526020600020905b815481529060010190602001808311612ba857829003601f168201915b50505050509550848054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612c615780601f10612c3657610100808354040283529160200191612c61565b820191906000526020600020905b815481529060010190602001808311612c4457829003601f168201915b50505050509450965096509650965096509650509295509295509295565b600080612d368384604201600086604001600060405180807f74696d654f664c6173744e657756616c756500000000000000000000000000008152506012019050604051809103902081526020019081526020016000205481526020019081526020016000205485604001600060405180807f74696d654f664c6173744e657756616c7565000000000000000000000000000081525060120190506040518091039020815260200190815260200160002054611fc9565b600191509150915091565b6000806000612d8e84600101603380602002604051908101604052809291908260338015612d84576020028201915b815481526020019060010190808311612d70575b5050505050612db5565b80925081935050508360430160008281526020019081526020016000205492505050919050565b60008060019050828160338110612dc857fe5b602002015191506000600290505b6033811015612e1b5782848260338110612dec57fe5b60200201511115612e0e57838160338110612e0357fe5b602002015192508091505b8080600101915050612dd6565b50915091565b6040518060a00160405280600590602082028038833980820191505090505090565b6040518060a00160405280600590602082028038833980820191505090505090565b604051806101200160405280600990602082028038833980820191505090505090565b60405180610660016040528060339060208202803883398082019150509050509056fea265627a7a72315820400a2257588e941edbe85ae927db73dbd755de73a968beb0b1c03be7400cf19a64736f6c63430005100032",
  "sourceMap": "345:2223:11:-;;;739:324;8:9:-1;5:2;;;30:1;27;20:12;5:2;739:324:11;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;739:324:11;;;;;;;;;;;;;;;;861:10;819:6;:18;;:39;838:19;;;;;;;;;;;;;;;;;;;819:39;;;;;;;;;;;;:52;;;;;;;;;;;;;;;;;;923:10;881:6;:18;;:39;900:19;;;;;;;;;;;;;;;;;;;881:39;;;;;;;;;;;;:52;;;;;;;;;;;;;;;;;;993:15;943:6;:18;;:47;962:27;;;;;;;;;;;;;;;;;;;943:47;;;;;;;;;;;;:65;;;;;;;;;;;;;;;;;;1023:33;1040:15;1023:33;;;;;;;;;;;;;;;;;;;;;;739:324;345:2223;;;;;;",
  "deployedSourceMap": "345:2223:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1849:12;1864:6;:18;;:47;1883:27;;;;;;;;;;;;;;;;;;;1864:47;;;;;;;;;;;;;;;;;;;;;1849:62;;1921:22;1946:8;;1921:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1921:33:11;;;;;;;;2071:1;2068;2056:9;2050:16;2043:4;2032:9;2028:20;2022:4;2018:1;2014:6;2001:72;2098:14;2142:4;2136:11;2183:4;2180:1;2175:3;2160:28;2381:6;2409:1;2404:64;;;;2527:4;2522:3;2515:17;2404:64;2445:4;2440:3;2433:17;8574:151:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8574:151:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8574:151:10;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;11295:197;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11295:197:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11295:197:10;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11295:197:10;;;;;;;;;;;;;;;;3445:123;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3445:123:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3445:123:10;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;13866:99;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13866:99:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;12818:137;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12818:137:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12818:137:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8941:147;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8941:147:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8941:147:10;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6571:149;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6571:149:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6571:149:10;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13226:156;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13226:156:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13226:156:10;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7940:159;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7940:159:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7940:159:10;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1265:95:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1265:95:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1265:95:11;;;;;;;;;;;;;;;;;;;:::i;:::-;;2109:153:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2109:153:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2109:153:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;12468:113;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12468:113:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12468:113:10;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8266:151;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8266:151:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8266:151:10;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2567:140;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2567:140:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2567:140:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7368:211;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7368:211:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7368:211:10;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;7368:211:10;;;;;;;;;;;;;;;;1723:113;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1723:113:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1723:113:10;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10873:134;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10873:134:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10873:134:10;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;11710:191;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11710:191:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11710:191:10;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5842:163;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5842:163:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5842:163:10;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;13596:161;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13596:161:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13596:161:10;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1375:146;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1375:146:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1375:146:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4846:166;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4846:166:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4846:166:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2902:144;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2902:144:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2902:144:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1552:125:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1552:125:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1552:125:11;;;;;;;;;;;;;;;;;;;:::i;:::-;;4326:237:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4326:237:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4326:237:10;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4326:237:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9193:108;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9193:108:10;;;:::i;:::-;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;9193:108:10;;;;;;;;;;;;;;;;6954:169;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6954:169:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6954:169:10;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5208:145;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5208:145:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5208:145:10;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;983:141;;8:9:-1;5:2;;;30:1;27;20:12;5:2;983:141:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;983:141:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9867:163;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9867:163:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9867:163:10;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10443:190;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10443:190:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10443:190:10;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10443:190:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10443:190:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6216:113;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6216:113:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8574:151;8650:7;8676:42;8707:10;8676:6;:30;;:42;;;;:::i;:::-;8669:49;;8574:151;;;:::o;11295:197::-;11393:17;;:::i;:::-;11429:56;11462:10;11474;11429:6;:32;;:56;;;;;:::i;:::-;11422:63;;11295:197;;;;:::o;3445:123::-;3507:7;3533:28;3555:5;3533:6;:21;;:28;;;;:::i;:::-;3526:35;;3445:123;;;:::o;13866:99::-;13912:7;13938:20;:6;:18;:20::i;:::-;13931:27;;13866:99;:::o;12818:137::-;12871:7;12880;12889:13;12921:27;:6;:25;:27::i;:::-;12914:34;;;;;;12818:137;;;:::o;8941:147::-;9015:7;9041:40;9072:8;9041:6;:30;;:40;;;;:::i;:::-;9034:47;;8941:147;;;:::o;6571:149::-;6643:7;6652:4;6675:38;6702:10;6675:6;:26;;:38;;;;:::i;:::-;6668:45;;;;6571:149;;;:::o;13226:156::-;13310:4;13333:42;13352:10;13364;13333:6;:18;;:42;;;;;:::i;:::-;13326:49;;13226:156;;;;:::o;7940:159::-;8020:7;8046:46;8081:10;8046:6;:34;;:46;;;;:::i;:::-;8039:53;;7940:159;;;:::o;1265:95:11:-;1324:29;1343:9;1324:6;:18;;:29;;;;:::i;:::-;1265:95;:::o;2109:153:10:-;2190:7;2216:6;:18;;;;2235:5;2242:12;2216:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2216:39:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2216:39:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2216:39:10;;;;;;;;;;;;;;;;2209:46;;2109:153;;;;:::o;12468:113::-;12524:7;12550:24;12568:5;12550:6;:17;;:24;;;;:::i;:::-;12543:31;;12468:113;;;:::o;8266:151::-;8342:7;8368:42;8403:6;8368;:34;;:42;;;;:::i;:::-;8361:49;;8266:151;;;:::o;2567:140::-;2643:4;2666:6;:14;;;;2681:10;2693:6;2666:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2666:34:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2666:34:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2666:34:10;;;;;;;;;;;;;;;;2659:41;;2567:140;;;;:::o;7368:211::-;7473:17;;:::i;:::-;7509:63;7549:10;7561;7509:6;:39;;:63;;;;;:::i;:::-;7502:70;;7368:211;;;;:::o;1723:113::-;1780:7;1806:6;:16;;;;1823:5;1806:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1806:23:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1806:23:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1806:23:10;;;;;;;;;;;;;;;;1799:30;;1723:113;;;:::o;10873:134::-;10936:7;10945;10971:29;10992:7;10971:6;:20;;:29;;;;:::i;:::-;10964:36;;;;10873:134;;;:::o;11710:191::-;11810:7;11836:58;11875:10;11887:6;11836;:38;;:58;;;;;:::i;:::-;11829:65;;11710:191;;;;:::o;5842:163::-;5928:7;5954:44;5980:10;5992:5;5954:6;:25;;:44;;;;;:::i;:::-;5947:51;;5842:163;;;;:::o;13596:161::-;13681:7;13707:43;13727:10;13739;13707:6;:19;;:43;;;;;:::i;:::-;13700:50;;13596:161;;;;:::o;1375:146::-;1454:4;1477:6;:21;;;;1499:5;1506:7;1477:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1477:37:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1477:37:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1477:37:10;;;;;;;;;;;;;;;;1470:44;;1375:146;;;;:::o;4846:166::-;4900:7;4909;4918;4927:13;4942:7;4951;4977:28;:6;:26;:28::i;:::-;4970:35;;;;;;;;;;;;4846:166;;;;;;:::o;2902:144::-;2980:4;3003:36;3018:10;3030:8;3003:6;:14;;:36;;;;;:::i;:::-;2996:43;;2902:144;;;;:::o;1552:125:11:-;1626:44;1654:15;1626:6;:27;;:44;;;;:::i;:::-;1552:125;:::o;4326:237:10:-;4418:7;4427:4;4433;4439;4445:7;4454;4463;4472:17;;:::i;:::-;4491:6;4520:36;4545:10;4520:6;:24;;:36;;;;:::i;:::-;4513:43;;;;;;;;;;;;;;;;;;4326:237;;;;;;;;;;;:::o;9193:108::-;9237:18;;:::i;:::-;9274:20;:6;:18;:20::i;:::-;9267:27;;9193:108;:::o;6954:169::-;7043:7;7069:47;7093:10;7105;7069:6;:23;;:47;;;;;:::i;:::-;7062:54;;6954:169;;;;:::o;5208:145::-;5281:7;5307:39;5340:5;5307:6;:32;;:39;;;;:::i;:::-;5300:46;;5208:145;;;:::o;983:141::-;1058:7;1084:6;:16;;;;1101:5;1108:8;1084:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1084:33:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1084:33:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1084:33:10;;;;;;;;;;;;;;;;1077:40;;983:141;;;;:::o;9867:163::-;9953:7;9979:44;10005:10;10017:5;9979:6;:25;;:44;;;;;:::i;:::-;9972:51;;9867:163;;;;:::o;10443:190::-;10510:13;10525;10540:7;10549;10558;10567;10593:33;10615:10;10593:6;:21;;:33;;;;:::i;:::-;10586:40;;;;;;;;;;;;10443:190;;;;;;;:::o;6216:113::-;6266:7;6275:4;6298:24;:6;:22;:24::i;:::-;6291:31;;;;6216:113;;:::o;10634:197:3:-;10761:7;10787:4;:25;;:37;10813:10;10787:37;;;;;;;;;;;;10780:44;;10634:197;;;;:::o;14102:281::-;14275:17;;:::i;:::-;14315:4;:19;;:31;14335:10;14315:31;;;;;;;;;;;:49;;:61;14365:10;14315:61;;;;;;;;;;;14308:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14102:281;;;;;:::o;2947:169::-;3060:7;3086:4;:16;;:23;3103:5;3086:23;;;;;;;;;;;;;;;;;;;;;3079:30;;2947:169;;;;:::o;17849:168::-;17944:7;17970:4;:13;;:40;17984:25;;;;;;;;;;;;;;;;;;;17970:40;;;;;;;;;;;;17963:47;;17849:168;;;:::o;15835:390::-;15937:7;15946;15955:13;15980:20;16003:21;16019:4;16003:15;:21::i;:::-;15980:44;;16055:12;16081:4;:19;;:33;16101:12;16081:33;;;;;;;;;;;:45;;:68;16127:21;;;;;;;;;;;;;;;;;;;16081:68;;;;;;;;;;;;16163:4;:19;;:33;16183:12;16163:33;;;;;;;;;;;:45;;16034:184;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15835:390;;;;;:::o;11043:197::-;11170:7;11196:4;:25;;:37;11222:10;11196:37;;;;;;;;;;;;11189:44;;11043:197;;;;:::o;7982:468::-;8105:7;8114:4;8130:41;8174:4;:19;;:31;8194:10;8174:31;;;;;;;;;;;8130:75;;8256:1;8219:8;:26;;:33;;;;:38;8215:229;;8281:97;8294:4;8300:10;8312:8;:26;;8375:1;8339:8;:26;;:33;;;;:37;8312:65;;;;;;;;;;;;;;;;8281:12;:97::i;:::-;8380:4;8273:112;;;;;;;8215:229;8424:1;8427:5;8416:17;;;;;;;;7982:468;;;;;;:::o;17031:218::-;17166:4;17189;:19;;:31;17209:10;17189:31;;;;;;;;;;;:41;;:53;17231:10;17189:53;;;;;;;;;;;;;;;;;;;;;17182:60;;17031:218;;;;;:::o;9832:220::-;9963:7;9989:4;:19;;:31;10009:10;9989:31;;;;;;;;;;;:49;;:56;;;;9982:63;;9832:220;;;;:::o;831:259::-;990:10;949:51;;:4;:16;;:37;966:19;;;;;;;;;;;;;;;;;;;949:37;;;;;;;;;;;;;;;;;;;;;:51;;;941:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1074:9;1034:4;:16;;:37;1051:19;;;;;;;;;;;;;;;;;;;1034:37;;;;;;;;;;;;:49;;;;;;;;;;;;;;;;;;831:259;;:::o;15436:162::-;15545:7;15571:4;:13;;:20;15585:5;15571:20;;;;;;;;;;;;15564:27;;15436:162;;;;:::o;10219:258::-;10346:7;10383:2;10373:6;:12;;10365:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10433:4;:29;;:37;10463:6;10433:37;;;;;;;;;;;;10426:44;;10219:258;;;;:::o;9187:284::-;9367:17;;:::i;:::-;9407:4;:19;;:31;9427:10;9407:31;;;;;;;;;;;:45;;:57;9453:10;9407:57;;;;;;;;;;;9400:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9187:284;;;;;:::o;13576:238::-;13690:7;13699;13726:4;:18;;:27;13745:7;13726:27;;;;;;;;;;;;;;;:41;;;13769:4;:18;;:27;13788:7;13769:27;;;;;;;;;;;;;;;:37;;;13718:89;;;;13576:238;;;;;:::o;14600:269::-;14775:7;14805:4;:19;;:31;14825:10;14805:31;;;;;;;;;;;:49;;14855:6;14805:57;;;;;;;;;;;;;;;;14798:64;;14600:269;;;;;:::o;6896:250::-;7057:7;7087:4;:17;;:29;7105:10;7087:29;;;;;;;;;;;:45;;:52;7133:5;7087:52;;;;;;;;;;;;7080:59;;6896:250;;;;;:::o;17488:252::-;17648:7;17678:4;:19;;:31;17698:10;17678:31;;;;;;;;;;;:43;;:55;17722:10;17678:55;;;;;;;;;;;;17671:62;;17488:252;;;;;:::o;5328:692::-;5455:7;5464;5473;5482:13;5497:7;5506;5550:4;:21;;;5585:4;:13;;:44;5599:29;;;;;;;;;;;;;;;;;;;5585:44;;;;;;;;;;;;5643:4;:13;;:38;5657:23;;;;;;;;;;;;;;;;;;;5643:38;;;;;;;;;;;;5695:4;:19;;:65;5715:4;:13;;:44;5729:29;;;;;;;;;;;;;;;;;;;5715:44;;;;;;;;;;;;5695:65;;;;;;;;;;;:77;;5786:4;:19;;:65;5806:4;:13;;:44;5820:29;;;;;;;;;;;;;;;;;;;5806:44;;;;;;;;;;;;5786:65;;;;;;;;;;;:77;;:103;5864:24;;;;;;;;;;;;;;;;;;;5786:103;;;;;;;;;;;;5903:4;:19;;:65;5923:4;:13;;:44;5937:29;;;;;;;;;;;;;;;;;;;5923:44;;;;;;;;;;;;5903:65;;;;;;;;;;;:77;;:100;5981:21;;;;;;;;;;;;;;;;;;;5903:100;;;;;;;;;;;;5529:484;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5328:692;;;;;;;:::o;2361:204::-;2490:4;2513;:17;;:29;2531:10;2513:29;;;;;;;;;;;:35;;:45;2549:8;2513:45;;;;;;;;;;;;;;;;;;;;;;;;;2506:52;;2361:204;;;;;:::o;1291:336::-;1465:10;1424:51;;:4;:16;;:37;1441:19;;;;;;;;;;;;;;;;;;;1424:37;;;;;;;;;;;;;;;;;;;;;:51;;;1416:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1557:15;1509:4;:16;;:45;1526:27;;;;;;;;;;;;;;;;;;;1509:45;;;;;;;;;;;;:63;;;;;;;;;;;;;;;;;;1587:33;1604:15;1587:33;;;;;;;;;;;;;;;;;;;;;;1291:336;;:::o;3874:1171::-;4019:7;4028:4;4034;4040;4046:7;4055;4064;4073:17;;:::i;:::-;4092:6;4114:37;4154:4;:17;;:29;4172:10;4154:29;;;;;;;;;;;4114:69;;4214:4;:9;;;4237:4;:13;;;;;;;;;;;;4264:4;:22;;;;;;;;;;;;4300:4;:15;;;;;;;;;;;;4329:4;:18;;;;;;;;;;;;4361:4;:19;;;;;;;;;;;;4394:4;:24;;;;;;;;;;;;4193:845;;;;;;;;4450:4;:20;;:44;4471:22;;;;;;;;;;;;;;;;;;;4450:44;;;;;;;;;;;;4193:845;;;;4512:4;:20;;:44;4533:22;;;;;;;;;;;;;;;;;;;4512:44;;;;;;;;;;;;4193:845;;;;4574:4;:20;;:40;4595:18;;;;;;;;;;;;;;;;;;;4574:40;;;;;;;;;;;;4193:845;;;;4632:4;:20;;:51;4653:29;;;;;;;;;;;;;;;;;;;4632:51;;;;;;;;;;;;4193:845;;;;4701:4;:20;;:48;4722:26;;;;;;;;;;;;;;;;;;;4701:48;;;;;;;;;;;;4193:845;;;;4767:4;:20;;:46;4788:24;;;;;;;;;;;;;;;;;;;4767:46;;;;;;;;;;;;4193:845;;;;4831:4;:20;;:44;4852:22;;;;;;;;;;;;;;;;;;;4831:44;;;;;;;;;;;;4193:845;;;;4893:4;:20;;:41;4914:19;;;;;;;;;;;;;;;;;;;4893:41;;;;;;;;;;;;4193:845;;;;4952:4;:20;;:38;4973:16;;;;;;;;;;;;;;;;;;;4952:38;;;;;;;;;;;;4193:845;;;5018:4;:10;;;4193:845;;;;;;;;;;;;;;;;;;;3874:1171;;;;;;;;;;;:::o;11345:152::-;11440:18;;:::i;:::-;11477:4;:13;;11470:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11345:152;;;:::o;8684:258::-;8848:7;8878:4;:19;;:31;8898:10;8878:31;;;;;;;;;;;:45;;:57;8924:10;8878:57;;;;;;;;;;;;8871:64;;8684:258;;;;;:::o;6216:191::-;6340:7;6366:4;:27;;:34;6394:5;6366:34;;;;;;;;;;;;6359:41;;6216:191;;;;:::o;12063:248::-;12224:7;12254:4;:19;;:31;12274:10;12254:31;;;;;;;;;;;:43;;:50;12298:5;12254:50;;;;;;;;;;;;12247:57;;12063:248;;;;;:::o;12724:612::-;12866:13;12881;12896:7;12905;12914;12923;12946:41;12990:4;:19;;:31;13010:10;12990:31;;;;;;;;;;;12946:75;;13052:8;:20;;13086:8;:19;;13119:8;:18;;;13151:8;:20;;:46;13172:24;;;;;;;;;;;;;;;;;;;13151:46;;;;;;;;;;;;13211:8;:20;;:51;13232:29;;;;;;;;;;;;;;;;;;;13211:51;;;;;;;;;;;;13276:8;:20;;:43;13297:21;;;;;;;;;;;;;;;;;;;13276:43;;;;;;;;;;;;13031:298;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12724:612;;;;;;;;:::o;7357:383::-;7456:7;7465:4;7502:203;7532:4;7554;:25;;:73;7580:4;:13;;:46;7594:31;;;;;;;;;;;;;;;;;;;7580:46;;;;;;;;;;;;7554:73;;;;;;;;;;;;7645:4;:13;;:46;7659:31;;;;;;;;;;;;;;;;;;;7645:46;;;;;;;;;;;;7502:12;:203::i;:::-;7719:4;7481:252;;;;7357:383;;;:::o;16467:293::-;16566:18;16596:12;16618:14;16659:34;16679:4;:13;;16659:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:19;:34::i;:::-;16642:51;;;;;;;;16716:4;:29;;:37;16746:6;16716:37;;;;;;;;;;;;16703:50;;16467:293;;;;;:::o;864:324:8:-;928:11;941:16;980:1;969:12;;997:4;1002:8;997:14;;;;;;;;;;;991:20;;1026:9;1038:1;1026:13;;1021:161;1045:11;1041:1;:15;1021:161;;;1091:3;1081:4;1086:1;1081:7;;;;;;;;;;;:13;1077:95;;;1120:4;1125:1;1120:7;;;;;;;;;;;1114:13;;1156:1;1145:12;;1077:95;1058:3;;;;;;;1021:161;;;;864:324;;;:::o;345:2223:11:-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;345:2223:11;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;345:2223:11;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;345:2223:11;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;345:2223:11;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./v25TellorGetters.sol\";\n\n/**\n* @title v25Tellor Master\n* @dev This is the Master contract with all tellor getter functions and delegate call to v25Tellor.\n* The logic for the functions on this contract is saved on the v25TellorGettersLibrary, v25TellorTransfer,\n* v25TellorGettersLibrary, and v25TellorStake\n*/\ncontract v25TellorMaster is v25TellorGetters {\n    event NewTellorAddress(address _newTellor);\n\n    /**\n    * @dev The constructor sets the original `tellorStorageOwner` of the contract to the sender\n    * account, the tellor contract to the v25Tellor master address and owner to the v25Tellor master owner address\n    * @param _tellorContract is the address for the tellor contract\n    */\n    constructor(address _tellorContract) public {\n        // tellor.init();\n        tellor.addressVars[keccak256(\"_owner\")] = msg.sender;\n        tellor.addressVars[keccak256(\"_deity\")] = msg.sender;\n        tellor.addressVars[keccak256(\"tellorContract\")] = _tellorContract;\n        emit NewTellorAddress(_tellorContract);\n    }\n\n    /**\n    * @dev Gets the 5 miners who mined the value for the specified requestId/_timestamp\n    * @dev Only needs to be in library\n    * @param _newDeity the new Deity in the contract\n    */\n\n    function changeDeity(address _newDeity) external {\n        tellor.changeDeity(_newDeity);\n    }\n\n    /**\n    * @dev  allows for the deity to make fast upgrades.  Deity should be 0 address if decentralized\n    * @param _tellorContract the address of the new v25Tellor Contract\n    */\n    function changeTellorContract(address _tellorContract) external {\n        tellor.changeTellorContract(_tellorContract);\n    }\n\n    /**\n    * @dev This is the fallback function that allows contracts to call the tellor contract at the address stored\n    */\n    function() external payable {\n        address addr = tellor.addressVars[keccak256(\"tellorContract\")];\n        bytes memory _calldata = msg.data;\n        assembly {\n            let result := delegatecall(not(0), addr, add(_calldata, 0x20), mload(_calldata), 0, 0)\n            let size := returndatasize\n            let ptr := mload(0x40)\n            returndatacopy(ptr, 0, size)\n            // revert instead of invalid() bc if the underlying call failed with invalid() it already wasted gas.\n            // if the call returned error data, forward it\n            switch result\n                case 0 {\n                    revert(ptr, size)\n                }\n                default {\n                    return(ptr, size)\n                }\n        }\n    }\n}\n",
  "sourcePath": "/home/jgcarv/Dev/Tellor/TellorLegacy/contracts/V25/v25TellorMaster.sol",
  "ast": {
    "absolutePath": "/home/jgcarv/Dev/Tellor/TellorLegacy/contracts/V25/v25TellorMaster.sol",
    "exportedSymbols": {
      "v25TellorMaster": [
        6380
      ]
    },
    "id": 6381,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6287,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:11"
      },
      {
        "absolutePath": "/home/jgcarv/Dev/Tellor/TellorLegacy/contracts/V25/v25TellorGetters.sol",
        "file": "./v25TellorGetters.sol",
        "id": 6288,
        "nodeType": "ImportDirective",
        "scope": 6381,
        "sourceUnit": 6286,
        "src": "25:32:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6289,
              "name": "v25TellorGetters",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6285,
              "src": "373:16:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_v25TellorGetters_$6285",
                "typeString": "contract v25TellorGetters"
              }
            },
            "id": 6290,
            "nodeType": "InheritanceSpecifier",
            "src": "373:16:11"
          }
        ],
        "contractDependencies": [
          6285
        ],
        "contractKind": "contract",
        "documentation": "@title v25Tellor Master\n@dev This is the Master contract with all tellor getter functions and delegate call to v25Tellor.\nThe logic for the functions on this contract is saved on the v25TellorGettersLibrary, v25TellorTransfer,\nv25TellorGettersLibrary, and v25TellorStake",
        "fullyImplemented": true,
        "id": 6380,
        "linearizedBaseContracts": [
          6380,
          6285
        ],
        "name": "v25TellorMaster",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 6294,
            "name": "NewTellorAddress",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6293,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6292,
                  "indexed": false,
                  "name": "_newTellor",
                  "nodeType": "VariableDeclaration",
                  "scope": 6294,
                  "src": "419:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6291,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "419:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "418:20:11"
            },
            "src": "396:43:11"
          },
          {
            "body": {
              "id": 6335,
              "nodeType": "Block",
              "src": "783:280:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 6299,
                          "name": "tellor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5816,
                          "src": "819:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TellorStorageStruct_$4718_storage",
                            "typeString": "struct v25TellorStorage.TellorStorageStruct storage ref"
                          }
                        },
                        "id": 6304,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addressVars",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4668,
                        "src": "819:18:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 6305,
                      "indexExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "5f6f776e6572",
                            "id": 6302,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "848:8:11",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9dbc393ddc18fd27b1d9b1b129059925688d2f2d5818a5ec3ebb750b7c286ea6",
                              "typeString": "literal_string \"_owner\""
                            },
                            "value": "_owner"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9dbc393ddc18fd27b1d9b1b129059925688d2f2d5818a5ec3ebb750b7c286ea6",
                              "typeString": "literal_string \"_owner\""
                            }
                          ],
                          "id": 6301,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19629,
                          "src": "838:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 6303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "838:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "819:39:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 6306,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19635,
                        "src": "861:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 6307,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "861:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "819:52:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6309,
                  "nodeType": "ExpressionStatement",
                  "src": "819:52:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 6310,
                          "name": "tellor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5816,
                          "src": "881:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TellorStorageStruct_$4718_storage",
                            "typeString": "struct v25TellorStorage.TellorStorageStruct storage ref"
                          }
                        },
                        "id": 6315,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addressVars",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4668,
                        "src": "881:18:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 6316,
                      "indexExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "5f6465697479",
                            "id": 6313,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "910:8:11",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c72fb71df90ec89e61e8dea6fee5142880a8a329caaae9ff4931955d88f59990",
                              "typeString": "literal_string \"_deity\""
                            },
                            "value": "_deity"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c72fb71df90ec89e61e8dea6fee5142880a8a329caaae9ff4931955d88f59990",
                              "typeString": "literal_string \"_deity\""
                            }
                          ],
                          "id": 6312,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19629,
                          "src": "900:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 6314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "900:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "881:39:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 6317,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19635,
                        "src": "923:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 6318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "923:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "881:52:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6320,
                  "nodeType": "ExpressionStatement",
                  "src": "881:52:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 6321,
                          "name": "tellor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5816,
                          "src": "943:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TellorStorageStruct_$4718_storage",
                            "typeString": "struct v25TellorStorage.TellorStorageStruct storage ref"
                          }
                        },
                        "id": 6326,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addressVars",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4668,
                        "src": "943:18:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 6327,
                      "indexExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "74656c6c6f72436f6e7472616374",
                            "id": 6324,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "972:16:11",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_d48fd09afdab521f4f69bd2af8177f60fb0709ce0f1b3d5b8a2e233a20453848",
                              "typeString": "literal_string \"tellorContract\""
                            },
                            "value": "tellorContract"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_d48fd09afdab521f4f69bd2af8177f60fb0709ce0f1b3d5b8a2e233a20453848",
                              "typeString": "literal_string \"tellorContract\""
                            }
                          ],
                          "id": 6323,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19629,
                          "src": "962:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 6325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "962:27:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "943:47:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 6328,
                      "name": "_tellorContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6296,
                      "src": "993:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "943:65:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6330,
                  "nodeType": "ExpressionStatement",
                  "src": "943:65:11"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6332,
                        "name": "_tellorContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6296,
                        "src": "1040:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6331,
                      "name": "NewTellorAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6294,
                      "src": "1023:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 6333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1023:33:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6334,
                  "nodeType": "EmitStatement",
                  "src": "1018:38:11"
                }
              ]
            },
            "documentation": "@dev The constructor sets the original `tellorStorageOwner` of the contract to the sender\naccount, the tellor contract to the v25Tellor master address and owner to the v25Tellor master owner address\n@param _tellorContract is the address for the tellor contract",
            "id": 6336,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6297,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6296,
                  "name": "_tellorContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 6336,
                  "src": "751:23:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6295,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "751:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "750:25:11"
            },
            "returnParameters": {
              "id": 6298,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "783:0:11"
            },
            "scope": 6380,
            "src": "739:324:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6347,
              "nodeType": "Block",
              "src": "1314:46:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6344,
                        "name": "_newDeity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6338,
                        "src": "1343:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 6341,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5816,
                        "src": "1324:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$4718_storage",
                          "typeString": "struct v25TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 6343,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "changeDeity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1859,
                      "src": "1324:18:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TellorStorageStruct_$4718_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$4718_storage_ptr_$",
                        "typeString": "function (struct v25TellorStorage.TellorStorageStruct storage pointer,address)"
                      }
                    },
                    "id": 6345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1324:29:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6346,
                  "nodeType": "ExpressionStatement",
                  "src": "1324:29:11"
                }
              ]
            },
            "documentation": "@dev Gets the 5 miners who mined the value for the specified requestId/_timestamp\n@dev Only needs to be in library\n@param _newDeity the new Deity in the contract",
            "id": 6348,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "changeDeity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6338,
                  "name": "_newDeity",
                  "nodeType": "VariableDeclaration",
                  "scope": 6348,
                  "src": "1286:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6337,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1286:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1285:19:11"
            },
            "returnParameters": {
              "id": 6340,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1314:0:11"
            },
            "scope": 6380,
            "src": "1265:95:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6359,
              "nodeType": "Block",
              "src": "1616:61:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6356,
                        "name": "_tellorContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6350,
                        "src": "1654:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 6353,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5816,
                        "src": "1626:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$4718_storage",
                          "typeString": "struct v25TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 6355,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "changeTellorContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1894,
                      "src": "1626:27:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TellorStorageStruct_$4718_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$4718_storage_ptr_$",
                        "typeString": "function (struct v25TellorStorage.TellorStorageStruct storage pointer,address)"
                      }
                    },
                    "id": 6357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1626:44:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6358,
                  "nodeType": "ExpressionStatement",
                  "src": "1626:44:11"
                }
              ]
            },
            "documentation": "@dev  allows for the deity to make fast upgrades.  Deity should be 0 address if decentralized\n@param _tellorContract the address of the new v25Tellor Contract",
            "id": 6360,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "changeTellorContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6351,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6350,
                  "name": "_tellorContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 6360,
                  "src": "1582:23:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6349,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1582:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1581:25:11"
            },
            "returnParameters": {
              "id": 6352,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1616:0:11"
            },
            "scope": 6380,
            "src": "1552:125:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6378,
              "nodeType": "Block",
              "src": "1839:727:11",
              "statements": [
                {
                  "assignments": [
                    6364
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6364,
                      "name": "addr",
                      "nodeType": "VariableDeclaration",
                      "scope": 6378,
                      "src": "1849:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 6363,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1849:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6371,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 6365,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5816,
                        "src": "1864:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$4718_storage",
                          "typeString": "struct v25TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 6366,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addressVars",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4668,
                      "src": "1864:18:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                        "typeString": "mapping(bytes32 => address)"
                      }
                    },
                    "id": 6370,
                    "indexExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "74656c6c6f72436f6e7472616374",
                          "id": 6368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1893:16:11",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_d48fd09afdab521f4f69bd2af8177f60fb0709ce0f1b3d5b8a2e233a20453848",
                            "typeString": "literal_string \"tellorContract\""
                          },
                          "value": "tellorContract"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_d48fd09afdab521f4f69bd2af8177f60fb0709ce0f1b3d5b8a2e233a20453848",
                            "typeString": "literal_string \"tellorContract\""
                          }
                        ],
                        "id": 6367,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19629,
                        "src": "1883:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 6369,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1883:27:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1864:47:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1849:62:11"
                },
                {
                  "assignments": [
                    6373
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6373,
                      "name": "_calldata",
                      "nodeType": "VariableDeclaration",
                      "scope": 6378,
                      "src": "1921:22:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 6372,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1921:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6376,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 6374,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19635,
                      "src": "1946:3:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 6375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "data",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1946:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1921:33:11"
                },
                {
                  "externalReferences": [
                    {
                      "_calldata": {
                        "declaration": 6373,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2056:9:11",
                        "valueSize": 1
                      }
                    },
                    {
                      "_calldata": {
                        "declaration": 6373,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2032:9:11",
                        "valueSize": 1
                      }
                    },
                    {
                      "addr": {
                        "declaration": 6364,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2022:4:11",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 6377,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let result := delegatecall(not(0), addr, add(_calldata, 0x20), mload(_calldata), 0, 0)\n    let size := returndatasize()\n    let ptr := mload(0x40)\n    returndatacopy(ptr, 0, size)\n    switch result\n    case 0 { revert(ptr, size) }\n    default { return(ptr, size) }\n}",
                  "src": "1964:596:11"
                }
              ]
            },
            "documentation": "@dev This is the fallback function that allows contracts to call the tellor contract at the address stored",
            "id": 6379,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6361,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1819:2:11"
            },
            "returnParameters": {
              "id": 6362,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1839:0:11"
            },
            "scope": 6380,
            "src": "1811:755:11",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 6381,
        "src": "345:2223:11"
      }
    ],
    "src": "0:2569:11"
  },
  "legacyAST": {
    "absolutePath": "/home/jgcarv/Dev/Tellor/TellorLegacy/contracts/V25/v25TellorMaster.sol",
    "exportedSymbols": {
      "v25TellorMaster": [
        6380
      ]
    },
    "id": 6381,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6287,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:11"
      },
      {
        "absolutePath": "/home/jgcarv/Dev/Tellor/TellorLegacy/contracts/V25/v25TellorGetters.sol",
        "file": "./v25TellorGetters.sol",
        "id": 6288,
        "nodeType": "ImportDirective",
        "scope": 6381,
        "sourceUnit": 6286,
        "src": "25:32:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6289,
              "name": "v25TellorGetters",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6285,
              "src": "373:16:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_v25TellorGetters_$6285",
                "typeString": "contract v25TellorGetters"
              }
            },
            "id": 6290,
            "nodeType": "InheritanceSpecifier",
            "src": "373:16:11"
          }
        ],
        "contractDependencies": [
          6285
        ],
        "contractKind": "contract",
        "documentation": "@title v25Tellor Master\n@dev This is the Master contract with all tellor getter functions and delegate call to v25Tellor.\nThe logic for the functions on this contract is saved on the v25TellorGettersLibrary, v25TellorTransfer,\nv25TellorGettersLibrary, and v25TellorStake",
        "fullyImplemented": true,
        "id": 6380,
        "linearizedBaseContracts": [
          6380,
          6285
        ],
        "name": "v25TellorMaster",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 6294,
            "name": "NewTellorAddress",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6293,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6292,
                  "indexed": false,
                  "name": "_newTellor",
                  "nodeType": "VariableDeclaration",
                  "scope": 6294,
                  "src": "419:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6291,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "419:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "418:20:11"
            },
            "src": "396:43:11"
          },
          {
            "body": {
              "id": 6335,
              "nodeType": "Block",
              "src": "783:280:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 6299,
                          "name": "tellor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5816,
                          "src": "819:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TellorStorageStruct_$4718_storage",
                            "typeString": "struct v25TellorStorage.TellorStorageStruct storage ref"
                          }
                        },
                        "id": 6304,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addressVars",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4668,
                        "src": "819:18:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 6305,
                      "indexExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "5f6f776e6572",
                            "id": 6302,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "848:8:11",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9dbc393ddc18fd27b1d9b1b129059925688d2f2d5818a5ec3ebb750b7c286ea6",
                              "typeString": "literal_string \"_owner\""
                            },
                            "value": "_owner"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9dbc393ddc18fd27b1d9b1b129059925688d2f2d5818a5ec3ebb750b7c286ea6",
                              "typeString": "literal_string \"_owner\""
                            }
                          ],
                          "id": 6301,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19629,
                          "src": "838:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 6303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "838:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "819:39:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 6306,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19635,
                        "src": "861:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 6307,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "861:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "819:52:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6309,
                  "nodeType": "ExpressionStatement",
                  "src": "819:52:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 6310,
                          "name": "tellor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5816,
                          "src": "881:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TellorStorageStruct_$4718_storage",
                            "typeString": "struct v25TellorStorage.TellorStorageStruct storage ref"
                          }
                        },
                        "id": 6315,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addressVars",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4668,
                        "src": "881:18:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 6316,
                      "indexExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "5f6465697479",
                            "id": 6313,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "910:8:11",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c72fb71df90ec89e61e8dea6fee5142880a8a329caaae9ff4931955d88f59990",
                              "typeString": "literal_string \"_deity\""
                            },
                            "value": "_deity"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c72fb71df90ec89e61e8dea6fee5142880a8a329caaae9ff4931955d88f59990",
                              "typeString": "literal_string \"_deity\""
                            }
                          ],
                          "id": 6312,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19629,
                          "src": "900:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 6314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "900:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "881:39:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 6317,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19635,
                        "src": "923:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 6318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "923:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "881:52:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6320,
                  "nodeType": "ExpressionStatement",
                  "src": "881:52:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 6321,
                          "name": "tellor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5816,
                          "src": "943:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TellorStorageStruct_$4718_storage",
                            "typeString": "struct v25TellorStorage.TellorStorageStruct storage ref"
                          }
                        },
                        "id": 6326,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addressVars",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4668,
                        "src": "943:18:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 6327,
                      "indexExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "74656c6c6f72436f6e7472616374",
                            "id": 6324,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "972:16:11",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_d48fd09afdab521f4f69bd2af8177f60fb0709ce0f1b3d5b8a2e233a20453848",
                              "typeString": "literal_string \"tellorContract\""
                            },
                            "value": "tellorContract"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_d48fd09afdab521f4f69bd2af8177f60fb0709ce0f1b3d5b8a2e233a20453848",
                              "typeString": "literal_string \"tellorContract\""
                            }
                          ],
                          "id": 6323,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19629,
                          "src": "962:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 6325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "962:27:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "943:47:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 6328,
                      "name": "_tellorContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6296,
                      "src": "993:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "943:65:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6330,
                  "nodeType": "ExpressionStatement",
                  "src": "943:65:11"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6332,
                        "name": "_tellorContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6296,
                        "src": "1040:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6331,
                      "name": "NewTellorAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6294,
                      "src": "1023:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 6333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1023:33:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6334,
                  "nodeType": "EmitStatement",
                  "src": "1018:38:11"
                }
              ]
            },
            "documentation": "@dev The constructor sets the original `tellorStorageOwner` of the contract to the sender\naccount, the tellor contract to the v25Tellor master address and owner to the v25Tellor master owner address\n@param _tellorContract is the address for the tellor contract",
            "id": 6336,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6297,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6296,
                  "name": "_tellorContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 6336,
                  "src": "751:23:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6295,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "751:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "750:25:11"
            },
            "returnParameters": {
              "id": 6298,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "783:0:11"
            },
            "scope": 6380,
            "src": "739:324:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6347,
              "nodeType": "Block",
              "src": "1314:46:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6344,
                        "name": "_newDeity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6338,
                        "src": "1343:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 6341,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5816,
                        "src": "1324:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$4718_storage",
                          "typeString": "struct v25TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 6343,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "changeDeity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1859,
                      "src": "1324:18:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TellorStorageStruct_$4718_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$4718_storage_ptr_$",
                        "typeString": "function (struct v25TellorStorage.TellorStorageStruct storage pointer,address)"
                      }
                    },
                    "id": 6345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1324:29:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6346,
                  "nodeType": "ExpressionStatement",
                  "src": "1324:29:11"
                }
              ]
            },
            "documentation": "@dev Gets the 5 miners who mined the value for the specified requestId/_timestamp\n@dev Only needs to be in library\n@param _newDeity the new Deity in the contract",
            "id": 6348,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "changeDeity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6338,
                  "name": "_newDeity",
                  "nodeType": "VariableDeclaration",
                  "scope": 6348,
                  "src": "1286:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6337,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1286:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1285:19:11"
            },
            "returnParameters": {
              "id": 6340,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1314:0:11"
            },
            "scope": 6380,
            "src": "1265:95:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6359,
              "nodeType": "Block",
              "src": "1616:61:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6356,
                        "name": "_tellorContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6350,
                        "src": "1654:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 6353,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5816,
                        "src": "1626:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$4718_storage",
                          "typeString": "struct v25TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 6355,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "changeTellorContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1894,
                      "src": "1626:27:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TellorStorageStruct_$4718_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$4718_storage_ptr_$",
                        "typeString": "function (struct v25TellorStorage.TellorStorageStruct storage pointer,address)"
                      }
                    },
                    "id": 6357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1626:44:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6358,
                  "nodeType": "ExpressionStatement",
                  "src": "1626:44:11"
                }
              ]
            },
            "documentation": "@dev  allows for the deity to make fast upgrades.  Deity should be 0 address if decentralized\n@param _tellorContract the address of the new v25Tellor Contract",
            "id": 6360,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "changeTellorContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6351,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6350,
                  "name": "_tellorContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 6360,
                  "src": "1582:23:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6349,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1582:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1581:25:11"
            },
            "returnParameters": {
              "id": 6352,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1616:0:11"
            },
            "scope": 6380,
            "src": "1552:125:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6378,
              "nodeType": "Block",
              "src": "1839:727:11",
              "statements": [
                {
                  "assignments": [
                    6364
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6364,
                      "name": "addr",
                      "nodeType": "VariableDeclaration",
                      "scope": 6378,
                      "src": "1849:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 6363,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1849:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6371,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 6365,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5816,
                        "src": "1864:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$4718_storage",
                          "typeString": "struct v25TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 6366,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addressVars",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4668,
                      "src": "1864:18:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                        "typeString": "mapping(bytes32 => address)"
                      }
                    },
                    "id": 6370,
                    "indexExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "74656c6c6f72436f6e7472616374",
                          "id": 6368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1893:16:11",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_d48fd09afdab521f4f69bd2af8177f60fb0709ce0f1b3d5b8a2e233a20453848",
                            "typeString": "literal_string \"tellorContract\""
                          },
                          "value": "tellorContract"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_d48fd09afdab521f4f69bd2af8177f60fb0709ce0f1b3d5b8a2e233a20453848",
                            "typeString": "literal_string \"tellorContract\""
                          }
                        ],
                        "id": 6367,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19629,
                        "src": "1883:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 6369,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1883:27:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1864:47:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1849:62:11"
                },
                {
                  "assignments": [
                    6373
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6373,
                      "name": "_calldata",
                      "nodeType": "VariableDeclaration",
                      "scope": 6378,
                      "src": "1921:22:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 6372,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1921:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6376,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 6374,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19635,
                      "src": "1946:3:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 6375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "data",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1946:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1921:33:11"
                },
                {
                  "externalReferences": [
                    {
                      "_calldata": {
                        "declaration": 6373,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2056:9:11",
                        "valueSize": 1
                      }
                    },
                    {
                      "_calldata": {
                        "declaration": 6373,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2032:9:11",
                        "valueSize": 1
                      }
                    },
                    {
                      "addr": {
                        "declaration": 6364,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2022:4:11",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 6377,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let result := delegatecall(not(0), addr, add(_calldata, 0x20), mload(_calldata), 0, 0)\n    let size := returndatasize()\n    let ptr := mload(0x40)\n    returndatacopy(ptr, 0, size)\n    switch result\n    case 0 { revert(ptr, size) }\n    default { return(ptr, size) }\n}",
                  "src": "1964:596:11"
                }
              ]
            },
            "documentation": "@dev This is the fallback function that allows contracts to call the tellor contract at the address stored",
            "id": 6379,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6361,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1819:2:11"
            },
            "returnParameters": {
              "id": 6362,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1839:0:11"
            },
            "scope": 6380,
            "src": "1811:755:11",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 6381,
        "src": "345:2223:11"
      }
    ],
    "src": "0:2569:11"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.2",
  "updatedAt": "2020-12-11T14:39:53.229Z",
  "devdoc": {
    "details": "This is the Master contract with all tellor getter functions and delegate call to v25Tellor. The logic for the functions on this contract is saved on the v25TellorGettersLibrary, v25TellorTransfer, v25TellorGettersLibrary, and v25TellorStake",
    "methods": {
      "allowance(address,address)": {
        "params": {
          "_spender": "address",
          "_user": "address"
        },
        "return": "Returns the remaining allowance of tokens granted to the _spender from the _user"
      },
      "allowedToTrade(address,uint256)": {
        "details": "This function returns whether or not a given user is allowed to trade a given amount",
        "params": {
          "_amount": "uint of amount",
          "_user": "address"
        },
        "return": "true if the user is alloed to trade the amount specified"
      },
      "balanceOf(address)": {
        "details": "Gets balance of owner specified",
        "params": {
          "_user": "is the owner address used to look up the balance"
        },
        "return": "Returns the balance associated with the passed in _user"
      },
      "balanceOfAt(address,uint256)": {
        "details": "Queries the balance of _user at a specific _blockNumber",
        "params": {
          "_blockNumber": "The block number when the balance is queried",
          "_user": "The address from which the balance will be retrieved"
        },
        "return": "The balance at _blockNumber"
      },
      "changeDeity(address)": {
        "details": "Gets the 5 miners who mined the value for the specified requestId/_timestampOnly needs to be in library",
        "params": {
          "_newDeity": "the new Deity in the contract"
        }
      },
      "changeTellorContract(address)": {
        "details": "allows for the deity to make fast upgrades.  Deity should be 0 address if decentralized",
        "params": {
          "_tellorContract": "the address of the new v25Tellor Contract"
        }
      },
      "constructor": {
        "details": "The constructor sets the original `tellorStorageOwner` of the contract to the sender account, the tellor contract to the v25Tellor master address and owner to the v25Tellor master owner address",
        "params": {
          "_tellorContract": "is the address for the tellor contract"
        }
      },
      "didMine(bytes32,address)": {
        "details": "This function tells you if a given challenge has been completed by a given miner",
        "params": {
          "_challenge": "the challenge to search for",
          "_miner": "address that you want to know if they solved the challenge"
        },
        "return": "true if the _miner address provided solved the"
      },
      "didVote(uint256,address)": {
        "details": "Checks if an address voted in a given dispute",
        "params": {
          "_address": "to look up",
          "_disputeId": "to look up"
        },
        "return": "bool of whether or not party voted"
      },
      "getAddressVars(bytes32)": {
        "details": "allows v25Tellor to read data from the addressVars mapping",
        "params": {
          "_data": "is the keccak256(\"variable_name\") of the variable that is being accessed. These are examples of how the variables are saved within other functions: addressVars[keccak256(\"_owner\")] addressVars[keccak256(\"tellorContract\")]"
        },
        "return": "address of the requested variable "
      },
      "getAllDisputeVars(uint256)": {
        "details": "Gets all dispute variables",
        "params": {
          "_disputeId": "to look up"
        },
        "return": "bytes32 hash of disputebool executed where true if it has been voted onbool disputeVotePassedbool isPropFork true if the dispute is a proposed forkaddress of reportedMineraddress of reportingPartyaddress of proposedForkAddressuint of requestIduint of timestampuint of valueuint of minExecutionDateuint of numberOfVotesuint of blocknumberuint of minerSlotuint of quorumuint of feeint count of the current tally"
      },
      "getCurrentVariables()": {
        "details": "Getter function for variables for the requestId being currently mined(currentRequestId)",
        "return": "current challenge, curretnRequestId, level of difficulty, api/query string, and granularity(number of decimals requested), total tip for the request"
      },
      "getDisputeIdByDisputeHash(bytes32)": {
        "details": "Checks if a given hash of miner,requestId has been disputed",
        "params": {
          "_hash": "is the sha256(abi.encodePacked(_miners[2],_requestId));"
        },
        "return": "uint disputeId"
      },
      "getDisputeUintVars(uint256,bytes32)": {
        "details": "Checks for uint variables in the disputeUintVars mapping based on the disuputeId",
        "params": {
          "_data": "the variable to pull from the mapping. _data = keccak256(\"variable_name\") where variable_name is the variables/strings used to save the data in the mapping. The variables names are commented out under the disputeUintVars under the Dispute struct",
          "_disputeId": "is the dispute id;"
        },
        "return": "uint value for the bytes32 data submitted"
      },
      "getLastNewValue()": {
        "details": "Gets the a value for the latest timestamp available",
        "return": "value for timestamp of last proof of work submitedtrue if the is a timestamp for the lastNewValue"
      },
      "getLastNewValueById(uint256)": {
        "details": "Gets the a value for the latest timestamp available",
        "params": {
          "_requestId": "being requested"
        },
        "return": "value for timestamp of last proof of work submited and if true if it exist or 0 and false if it doesn't"
      },
      "getMinedBlockNum(uint256,uint256)": {
        "details": "Gets blocknumber for mined timestamp",
        "params": {
          "_requestId": "to look up",
          "_timestamp": "is the timestamp to look up blocknumber"
        },
        "return": "uint of the blocknumber which the dispute was mined"
      },
      "getMinersByRequestIdAndTimestamp(uint256,uint256)": {
        "details": "Gets the 5 miners who mined the value for the specified requestId/_timestamp",
        "params": {
          "_requestId": "to look up",
          "_timestamp": "is the timestamp to look up miners for"
        },
        "return": "the 5 miners' addresses"
      },
      "getNewValueCountbyRequestId(uint256)": {
        "details": "Counts the number of values that have been submited for the request if called for the currentRequest being mined it can tell you how many miners have submitted a value for that request so far",
        "params": {
          "_requestId": "the requestId to look up"
        },
        "return": "uint count of the number of values received for the requestId"
      },
      "getRequestIdByQueryHash(bytes32)": {
        "details": "Getter function for requestId based on the queryHash",
        "params": {
          "_request": "is the hash(of string api and granularity) to check if a request already exists"
        },
        "return": "uint requestId"
      },
      "getRequestIdByRequestQIndex(uint256)": {
        "details": "Getter function for the specified requestQ index",
        "params": {
          "_index": "to look up in the requestQ array"
        },
        "return": "uint of reqeuestId"
      },
      "getRequestIdByTimestamp(uint256)": {
        "details": "Getter function for requestId based on timestamp",
        "params": {
          "_timestamp": "to check requestId"
        },
        "return": "uint of reqeuestId"
      },
      "getRequestQ()": {
        "details": "Getter function for the requestQ array",
        "return": "the requestQ arrray"
      },
      "getRequestUintVars(uint256,bytes32)": {
        "details": "Allowes access to the uint variables saved in the apiUintVars under the requestDetails struct for the requestId specified",
        "params": {
          "_data": "the variable to pull from the mapping. _data = keccak256(\"variable_name\") where variable_name is the variables/strings used to save the data in the mapping. The variables names are commented out under the apiUintVars under the requestDetails struct",
          "_requestId": "to look up"
        },
        "return": "uint value of the apiUintVars specified in _data for the requestId specified"
      },
      "getRequestVars(uint256)": {
        "details": "Gets the API struct variables that are not mappings",
        "params": {
          "_requestId": "to look up"
        },
        "return": "string of api to querystring of symbol of api to querybytes32 hash of stringbytes32 of the granularity(decimal places) requesteduint of index in requestQ arrayuint of current payout/tip for this requestId"
      },
      "getStakerInfo(address)": {
        "details": "This function allows users to retireve all information about a staker",
        "params": {
          "_staker": "address of staker inquiring about"
        },
        "return": "uint current state of stakeruint startDate of staking"
      },
      "getSubmissionsByTimestamp(uint256,uint256)": {
        "details": "Gets the 5 miners who mined the value for the specified requestId/_timestamp",
        "params": {
          "_requestId": "to look up",
          "_timestamp": "is the timestampt to look up miners for"
        },
        "return": "address[5] array of 5 addresses ofminers that mined the requestId"
      },
      "getTimestampbyRequestIDandIndex(uint256,uint256)": {
        "details": "Gets the timestamp for the value based on their index",
        "params": {
          "_index": "is the value index to look up",
          "_requestID": "is the requestId to look up"
        },
        "return": "uint timestamp"
      },
      "getUintVar(bytes32)": {
        "details": "Getter for the variables saved under the TellorStorageStruct uintVars variable",
        "params": {
          "_data": "the variable to pull from the mapping. _data = keccak256(\"variable_name\") where variable_name is the variables/strings used to save the data in the mapping. The variables names are commented out under the uintVars under the TellorStorageStruct struct This is an example of how data is saved into the mapping within other functions: self.uintVars[keccak256(\"stakerCount\")]"
        },
        "return": "uint of specified variable"
      },
      "getVariablesOnDeck()": {
        "details": "Getter function for next requestId on queue/request with highest payout at time the function is called",
        "return": "onDeck/info on request with highest payout-- RequestId, Totaltips, and API query string"
      },
      "isInDispute(uint256,uint256)": {
        "details": "Gets the 5 miners who mined the value for the specified requestId/_timestamp",
        "params": {
          "_requestId": "to look up",
          "_timestamp": "is the timestamp to look up miners for"
        },
        "return": "bool true if requestId/timestamp is under dispute"
      },
      "retrieveData(uint256,uint256)": {
        "details": "Retreive value from oracle based on timestamp",
        "params": {
          "_requestId": "being requested",
          "_timestamp": "to retreive data/value from"
        },
        "return": "value for timestamp submitted"
      },
      "totalSupply()": {
        "details": "Getter for the total_supply of oracle tokens",
        "return": "uint total supply"
      }
    },
    "title": "v25Tellor Master"
  },
  "userdoc": {
    "methods": {}
  }
}