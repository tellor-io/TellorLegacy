{
  "contractName": "v2TellorMaster",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tellorContract",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_newTellor",
          "type": "address"
        }
      ],
      "name": "NewTellorAddress",
      "type": "event"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "allowedToTrade",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_blockNumber",
          "type": "uint256"
        }
      ],
      "name": "balanceOfAt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_challenge",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_miner",
          "type": "address"
        }
      ],
      "name": "didMine",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_disputeId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "didVote",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_data",
          "type": "bytes32"
        }
      ],
      "name": "getAddressVars",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_disputeId",
          "type": "uint256"
        }
      ],
      "name": "getAllDisputeVars",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[9]",
          "name": "",
          "type": "uint256[9]"
        },
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCurrentVariables",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        }
      ],
      "name": "getDisputeIdByDisputeHash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_disputeId",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_data",
          "type": "bytes32"
        }
      ],
      "name": "getDisputeUintVars",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getLastNewValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_requestId",
          "type": "uint256"
        }
      ],
      "name": "getLastNewValueById",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getMinedBlockNum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getMinersByRequestIdAndTimestamp",
      "outputs": [
        {
          "internalType": "address[5]",
          "name": "",
          "type": "address[5]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_requestId",
          "type": "uint256"
        }
      ],
      "name": "getNewValueCountbyRequestId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_request",
          "type": "bytes32"
        }
      ],
      "name": "getRequestIdByQueryHash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getRequestIdByRequestQIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getRequestIdByTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getRequestQ",
      "outputs": [
        {
          "internalType": "uint256[51]",
          "name": "",
          "type": "uint256[51]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_data",
          "type": "bytes32"
        }
      ],
      "name": "getRequestUintVars",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_requestId",
          "type": "uint256"
        }
      ],
      "name": "getRequestVars",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_staker",
          "type": "address"
        }
      ],
      "name": "getStakerInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getSubmissionsByTimestamp",
      "outputs": [
        {
          "internalType": "uint256[5]",
          "name": "",
          "type": "uint256[5]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_requestID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getTimestampbyRequestIDandIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_data",
          "type": "bytes32"
        }
      ],
      "name": "getUintVar",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getVariablesOnDeck",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "isInDispute",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "retrieveData",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_newDeity",
          "type": "address"
        }
      ],
      "name": "changeDeity",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_tellorContract",
          "type": "address"
        }
      ],
      "name": "changeTellorContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tellorContract\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_newTellor\",\"type\":\"address\"}],\"name\":\"NewTellorAddress\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"allowedToTrade\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"balanceOfAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newDeity\",\"type\":\"address\"}],\"name\":\"changeDeity\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tellorContract\",\"type\":\"address\"}],\"name\":\"changeTellorContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_challenge\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_miner\",\"type\":\"address\"}],\"name\":\"didMine\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"didVote\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_data\",\"type\":\"bytes32\"}],\"name\":\"getAddressVars\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeId\",\"type\":\"uint256\"}],\"name\":\"getAllDisputeVars\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[9]\",\"name\":\"\",\"type\":\"uint256[9]\"},{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCurrentVariables\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"}],\"name\":\"getDisputeIdByDisputeHash\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_data\",\"type\":\"bytes32\"}],\"name\":\"getDisputeUintVars\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLastNewValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"}],\"name\":\"getLastNewValueById\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getMinedBlockNum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getMinersByRequestIdAndTimestamp\",\"outputs\":[{\"internalType\":\"address[5]\",\"name\":\"\",\"type\":\"address[5]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"}],\"name\":\"getNewValueCountbyRequestId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_request\",\"type\":\"bytes32\"}],\"name\":\"getRequestIdByQueryHash\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getRequestIdByRequestQIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getRequestIdByTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRequestQ\",\"outputs\":[{\"internalType\":\"uint256[51]\",\"name\":\"\",\"type\":\"uint256[51]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_data\",\"type\":\"bytes32\"}],\"name\":\"getRequestUintVars\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"}],\"name\":\"getRequestVars\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"getStakerInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getSubmissionsByTimestamp\",\"outputs\":[{\"internalType\":\"uint256[5]\",\"name\":\"\",\"type\":\"uint256[5]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getTimestampbyRequestIDandIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_data\",\"type\":\"bytes32\"}],\"name\":\"getUintVar\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getVariablesOnDeck\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"isInDispute\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"retrieveData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the Master contract with all tellor getter functions and delegate call to Tellor. The logic for the functions on this contract is saved on the TellorGettersLibrary, TellorTransfer, TellorGettersLibrary, and TellorStake\",\"methods\":{\"allowance(address,address)\":{\"params\":{\"_spender\":\"address\",\"_user\":\"address\"},\"return\":\"Returns the remaining allowance of tokens granted to the _spender from the _user\"},\"allowedToTrade(address,uint256)\":{\"details\":\"This function returns whether or not a given user is allowed to trade a given amount\",\"params\":{\"_amount\":\"uint of amount\",\"_user\":\"address\"},\"return\":\"true if the user is alloed to trade the amount specified\"},\"balanceOf(address)\":{\"details\":\"Gets balance of owner specified\",\"params\":{\"_user\":\"is the owner address used to look up the balance\"},\"return\":\"Returns the balance associated with the passed in _user\"},\"balanceOfAt(address,uint256)\":{\"details\":\"Queries the balance of _user at a specific _blockNumber\",\"params\":{\"_blockNumber\":\"The block number when the balance is queried\",\"_user\":\"The address from which the balance will be retrieved\"},\"return\":\"The balance at _blockNumber\"},\"changeDeity(address)\":{\"details\":\"Gets the 5 miners who mined the value for the specified requestId/_timestampOnly needs to be in library\",\"params\":{\"_newDeity\":\"the new Deity in the contract\"}},\"changeTellorContract(address)\":{\"details\":\"allows for the deity to make fast upgrades.  Deity should be 0 address if decentralized\",\"params\":{\"_tellorContract\":\"the address of the new Tellor Contract\"}},\"constructor\":{\"details\":\"The constructor sets the original `tellorStorageOwner` of the contract to the sender account, the tellor contract to the Tellor master address and owner to the Tellor master owner address\",\"params\":{\"_tellorContract\":\"is the address for the tellor contract\"}},\"didMine(bytes32,address)\":{\"details\":\"This function tells you if a given challenge has been completed by a given miner\",\"params\":{\"_challenge\":\"the challenge to search for\",\"_miner\":\"address that you want to know if they solved the challenge\"},\"return\":\"true if the _miner address provided solved the\"},\"didVote(uint256,address)\":{\"details\":\"Checks if an address voted in a given dispute\",\"params\":{\"_address\":\"to look up\",\"_disputeId\":\"to look up\"},\"return\":\"bool of whether or not party voted\"},\"getAddressVars(bytes32)\":{\"details\":\"allows Tellor to read data from the addressVars mapping\",\"params\":{\"_data\":\"is the keccak256(\\\"variable_name\\\") of the variable that is being accessed. These are examples of how the variables are saved within other functions: addressVars[keccak256(\\\"_owner\\\")] addressVars[keccak256(\\\"tellorContract\\\")]\"},\"return\":\"address of the requested variable \"},\"getAllDisputeVars(uint256)\":{\"details\":\"Gets all dispute variables\",\"params\":{\"_disputeId\":\"to look up\"},\"return\":\"bytes32 hash of disputebool executed where true if it has been voted onbool disputeVotePassedbool isPropFork true if the dispute is a proposed forkaddress of reportedMineraddress of reportingPartyaddress of proposedForkAddressuint of requestIduint of timestampuint of valueuint of minExecutionDateuint of numberOfVotesuint of blocknumberuint of minerSlotuint of quorumuint of feeint count of the current tally\"},\"getCurrentVariables()\":{\"details\":\"Getter function for variables for the requestId being currently mined(currentRequestId)\",\"return\":\"current challenge, curretnRequestId, level of difficulty, api/query string, and granularity(number of decimals requested), total tip for the request\"},\"getDisputeIdByDisputeHash(bytes32)\":{\"details\":\"Checks if a given hash of miner,requestId has been disputed\",\"params\":{\"_hash\":\"is the sha256(abi.encodePacked(_miners[2],_requestId));\"},\"return\":\"uint disputeId\"},\"getDisputeUintVars(uint256,bytes32)\":{\"details\":\"Checks for uint variables in the disputeUintVars mapping based on the disuputeId\",\"params\":{\"_data\":\"the variable to pull from the mapping. _data = keccak256(\\\"variable_name\\\") where variable_name is the variables/strings used to save the data in the mapping. The variables names are commented out under the disputeUintVars under the Dispute struct\",\"_disputeId\":\"is the dispute id;\"},\"return\":\"uint value for the bytes32 data submitted\"},\"getLastNewValue()\":{\"details\":\"Gets the a value for the latest timestamp available\",\"return\":\"value for timestamp of last proof of work submitedtrue if the is a timestamp for the lastNewValue\"},\"getLastNewValueById(uint256)\":{\"details\":\"Gets the a value for the latest timestamp available\",\"params\":{\"_requestId\":\"being requested\"},\"return\":\"value for timestamp of last proof of work submited and if true if it exist or 0 and false if it doesn't\"},\"getMinedBlockNum(uint256,uint256)\":{\"details\":\"Gets blocknumber for mined timestamp\",\"params\":{\"_requestId\":\"to look up\",\"_timestamp\":\"is the timestamp to look up blocknumber\"},\"return\":\"uint of the blocknumber which the dispute was mined\"},\"getMinersByRequestIdAndTimestamp(uint256,uint256)\":{\"details\":\"Gets the 5 miners who mined the value for the specified requestId/_timestamp\",\"params\":{\"_requestId\":\"to look up\",\"_timestamp\":\"is the timestamp to look up miners for\"},\"return\":\"the 5 miners' addresses\"},\"getNewValueCountbyRequestId(uint256)\":{\"details\":\"Counts the number of values that have been submited for the request if called for the currentRequest being mined it can tell you how many miners have submitted a value for that request so far\",\"params\":{\"_requestId\":\"the requestId to look up\"},\"return\":\"uint count of the number of values received for the requestId\"},\"getRequestIdByQueryHash(bytes32)\":{\"details\":\"Getter function for requestId based on the queryHash\",\"params\":{\"_request\":\"is the hash(of string api and granularity) to check if a request already exists\"},\"return\":\"uint requestId\"},\"getRequestIdByRequestQIndex(uint256)\":{\"details\":\"Getter function for the specified requestQ index\",\"params\":{\"_index\":\"to look up in the requestQ array\"},\"return\":\"uint of reqeuestId\"},\"getRequestIdByTimestamp(uint256)\":{\"details\":\"Getter function for requestId based on timestamp\",\"params\":{\"_timestamp\":\"to check requestId\"},\"return\":\"uint of reqeuestId\"},\"getRequestQ()\":{\"details\":\"Getter function for the requestQ array\",\"return\":\"the requestQ arrray\"},\"getRequestUintVars(uint256,bytes32)\":{\"details\":\"Allowes access to the uint variables saved in the apiUintVars under the requestDetails struct for the requestId specified\",\"params\":{\"_data\":\"the variable to pull from the mapping. _data = keccak256(\\\"variable_name\\\") where variable_name is the variables/strings used to save the data in the mapping. The variables names are commented out under the apiUintVars under the requestDetails struct\",\"_requestId\":\"to look up\"},\"return\":\"uint value of the apiUintVars specified in _data for the requestId specified\"},\"getRequestVars(uint256)\":{\"details\":\"Gets the API struct variables that are not mappings\",\"params\":{\"_requestId\":\"to look up\"},\"return\":\"string of api to querystring of symbol of api to querybytes32 hash of stringbytes32 of the granularity(decimal places) requesteduint of index in requestQ arrayuint of current payout/tip for this requestId\"},\"getStakerInfo(address)\":{\"details\":\"This function allows users to retireve all information about a staker\",\"params\":{\"_staker\":\"address of staker inquiring about\"},\"return\":\"uint current state of stakeruint startDate of staking\"},\"getSubmissionsByTimestamp(uint256,uint256)\":{\"details\":\"Gets the 5 miners who mined the value for the specified requestId/_timestamp\",\"params\":{\"_requestId\":\"to look up\",\"_timestamp\":\"is the timestampt to look up miners for\"},\"return\":\"address[5] array of 5 addresses ofminers that mined the requestId\"},\"getTimestampbyRequestIDandIndex(uint256,uint256)\":{\"details\":\"Gets the timestamp for the value based on their index\",\"params\":{\"_index\":\"is the value index to look up\",\"_requestID\":\"is the requestId to look up\"},\"return\":\"uint timestamp\"},\"getUintVar(bytes32)\":{\"details\":\"Getter for the variables saved under the TellorStorageStruct uintVars variable\",\"params\":{\"_data\":\"the variable to pull from the mapping. _data = keccak256(\\\"variable_name\\\") where variable_name is the variables/strings used to save the data in the mapping. The variables names are commented out under the uintVars under the TellorStorageStruct struct This is an example of how data is saved into the mapping within other functions: self.uintVars[keccak256(\\\"stakerCount\\\")]\"},\"return\":\"uint of specified variable\"},\"getVariablesOnDeck()\":{\"details\":\"Getter function for next requestId on queue/request with highest payout at time the function is called\",\"return\":\"onDeck/info on request with highest payout-- RequestId, Totaltips, and API query string\"},\"isInDispute(uint256,uint256)\":{\"details\":\"Gets the 5 miners who mined the value for the specified requestId/_timestamp\",\"params\":{\"_requestId\":\"to look up\",\"_timestamp\":\"is the timestamp to look up miners for\"},\"return\":\"bool true if requestId/timestamp is under dispute\"},\"retrieveData(uint256,uint256)\":{\"details\":\"Retreive value from oracle based on timestamp\",\"params\":{\"_requestId\":\"being requested\",\"_timestamp\":\"to retreive data/value from\"},\"return\":\"value for timestamp submitted\"},\"totalSupply()\":{\"details\":\"Getter for the total_supply of oracle tokens\",\"return\":\"uint total supply\"}},\"title\":\"Tellor Master\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/jgcarv/Dev/Tellor/TellorLegacy/contracts/v2/v2TellorMaster.sol\":\"v2TellorMaster\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/jgcarv/Dev/Tellor/TellorLegacy/contracts/v2/libraries/v2SafeMath.sol\":{\"keccak256\":\"0xa76229b794cab9e163ad972fcfaba806692f3f1aa3b8e572d884b7f2a96d02b0\",\"urls\":[\"bzz-raw://8c69563525925c39fa709bab82c06b1cf56679d865f30a8d30f148bc1a0030db\",\"dweb:/ipfs/QmbSrVnJ2JQr4vH9reEmsTeTqDqHma1RgHpDupGJS5LxZx\"]},\"/home/jgcarv/Dev/Tellor/TellorLegacy/contracts/v2/libraries/v2TellorDispute.sol\":{\"keccak256\":\"0x7c6b569d6eed903604b5ca1ab0e5e525d6488d06c2c388738c0c726d2cf01789\",\"urls\":[\"bzz-raw://5a38efe9d435e42bfb3871caaaa83585059a80c928b7db614c6c28466bee47b0\",\"dweb:/ipfs/QmP8qhDvgsTqDdhSobBqcyArLDB6oYE7bnCTF3yjGhrLWS\"]},\"/home/jgcarv/Dev/Tellor/TellorLegacy/contracts/v2/libraries/v2TellorGettersLibrary.sol\":{\"keccak256\":\"0x3e91c0a5f1fe56c94d4721a1ae9d23feaba0959fc88f8f3d5e57683a3e2b44b4\",\"urls\":[\"bzz-raw://d7d2fbedcc36e7283be63605fe01fd07a605bf239703c9825a5156d91b6a64be\",\"dweb:/ipfs/QmWyMzE4bMPNfwc5xZ6zm9XSWqb5kSUvePt7JV91HkJ9vj\"]},\"/home/jgcarv/Dev/Tellor/TellorLegacy/contracts/v2/libraries/v2TellorStake.sol\":{\"keccak256\":\"0x958f4d3096989b7e88d1f37e37c25cbbd8b5502aa87a2ac82c346d44aa9f5e1a\",\"urls\":[\"bzz-raw://ed1460cb417f7fc73075824ddb892385f7f4065a139064b9e6cc5f3c92d21316\",\"dweb:/ipfs/QmRExJoUUAxZN7M8jFKVFQPwZDhWJUV6XPdtve4e19EwWg\"]},\"/home/jgcarv/Dev/Tellor/TellorLegacy/contracts/v2/libraries/v2TellorStorage.sol\":{\"keccak256\":\"0x23bbe2f8c14a11bbcf8710a356945cb5346f2700c6c0af4e6edb266b2a90f646\",\"urls\":[\"bzz-raw://d72ae22a2b87c454af4bd9ff28dbcc6bc975a4e257b01cd56fb81e60f68a0cb1\",\"dweb:/ipfs/QmYag6QNWdqrfPTXHn62SQVtUrk5sPZGqVPvX16L3SBFhh\"]},\"/home/jgcarv/Dev/Tellor/TellorLegacy/contracts/v2/libraries/v2TellorTransfer.sol\":{\"keccak256\":\"0x7f218d459f768c2c9117d2c733e24eedd154836742d4547125eddd83838406a5\",\"urls\":[\"bzz-raw://6de314a35d336d73529a19bd5d6c95266a0a0b3cf3dcd975689debb289e04650\",\"dweb:/ipfs/QmWBGZwTw5p8qLTMQkeE75iKE4394DAovXavsE3ffuTs8T\"]},\"/home/jgcarv/Dev/Tellor/TellorLegacy/contracts/v2/libraries/v2Utilities.sol\":{\"keccak256\":\"0x46e2c69c0b570f99314e3be0821262313614cf033d67de928c922985053f3fb5\",\"urls\":[\"bzz-raw://495a4dbe7fbd663ea8f2b8680e9eb9549f5dbc13a43e2bcb98707b231630846e\",\"dweb:/ipfs/QmekX7z5rWxFtFMcYuWY5zS9EPWh9J5LXSQPzajWDo9obZ\"]},\"/home/jgcarv/Dev/Tellor/TellorLegacy/contracts/v2/v2TellorGetters.sol\":{\"keccak256\":\"0xbad456ec53017a805e63cf4675e1252a30eae4395c0742e252f59235edfcdc66\",\"urls\":[\"bzz-raw://c6accc8a77a7ceff3a5cf0197e150c4774ff4cdc7ad5a841d8a40318a9131bc0\",\"dweb:/ipfs/QmUw6yGo6vJ8KFvcmsYabTcPJr2fyLCgDyshYFFWo22h7T\"]},\"/home/jgcarv/Dev/Tellor/TellorLegacy/contracts/v2/v2TellorMaster.sol\":{\"keccak256\":\"0x7d81966180502ae41cb7b59478ae8ecb85168a66ae85b6963decf6cd6f6625ce\",\"urls\":[\"bzz-raw://1b97f8e0508b191988ba1f58f8a0c58cb4585a8ccef9eec3a449b40c441ad159\",\"dweb:/ipfs/QmaGNVqDW6Mq43pf5WJ7zQLEpwceMyNwbPagx7WaowDkCP\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051620031a2380380620031a28339818101604052602081101561003557600080fd5b8101908080519060200190929190505050600073__v2TellorStake_________________________63d57867ed90916040518263ffffffff1660e01b81526004018082815260200191505060006040518083038186803b15801561009857600080fd5b505af41580156100ac573d6000803e3d6000fd5b50505050336000603f01600060405180807f5f6f776e6572000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550336000603f01600060405180807f5f6465697479000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806000603f01600060405180807f74656c6c6f72436f6e7472616374000000000000000000000000000000000000815250600e0190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fc2d1449eb0b6547aa426e09d9942a77fa4fc8cd3296305b3163e22452e0bcb8d81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150612ee080620002c26000396000f3fe6080604052600436106101e35760003560e01c8063733bdef011610102578063af0b132711610095578063dd62ed3e11610064578063dd62ed3e14610e7f578063e0ae93c114610f04578063e1eee6d614610f5d578063fc7cf0a014611099576101e3565b8063af0b132714610c45578063b541302914610d84578063c775b54214610dd7578063da37994114610e30576101e3565b8063999cf26c116100d1578063999cf26c14610a5b578063a22e407a14610ace578063a7c438bc14610b81578063ae0a827914610bf4576101e3565b8063733bdef0146108e457806377fbb663146109505780637f6fd5d9146109a957806393fa491514610a02576101e3565b806346eee1c41161017a5780636173c0b8116101495780636173c0b81461073c57806363bb82ad1461078b57806369026d63146107fe57806370a082311461087f576101e3565b806346eee1c4146105de57806347abd7f11461062d5780634ee2cd7e1461067e578063612c8f7f146106ed576101e3565b806319e8e03b116101b657806319e8e03b1461043a5780631db842f0146104d85780633180f8df146105275780633df0777b14610581576101e3565b80630f0b424d146102c457806311c9851214610313578063133bee5e1461039457806318160ddd1461040f575b600080603f01600060405180807f74656c6c6f72436f6e7472616374000000000000000000000000000000000000815250600e0190506040518091039020815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060606000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050905060008082516020840185600019f43d604051816000823e82600081146102c0578282f35b8282fd5b3480156102d057600080fd5b506102fd600480360360208110156102e757600080fd5b81019080803590602001909291905050506110cf565b6040518082815260200191505060405180910390f35b34801561031f57600080fd5b506103566004803603604081101561033657600080fd5b8101908080359060200190929190803590602001909291905050506110ec565b6040518082600560200280838360005b83811015610381578082015181840152602081019050610366565b5050505090500191505060405180910390f35b3480156103a057600080fd5b506103cd600480360360208110156103b757600080fd5b8101908080359060200190929190505050611112565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561041b57600080fd5b5061042461112f565b6040518082815260200191505060405180910390f35b34801561044657600080fd5b5061044f611140565b6040518084815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561049b578082015181840152602081019050610480565b50505050905090810190601f1680156104c85780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b3480156104e457600080fd5b50610511600480360360208110156104fb57600080fd5b810190808035906020019092919050505061115a565b6040518082815260200191505060405180910390f35b34801561053357600080fd5b506105606004803603602081101561054a57600080fd5b8101908080359060200190929190505050611177565b60405180838152602001821515151581526020019250505060405180910390f35b34801561058d57600080fd5b506105c4600480360360408110156105a457600080fd5b810190808035906020019092919080359060200190929190505050611197565b604051808215151515815260200191505060405180910390f35b3480156105ea57600080fd5b506106176004803603602081101561060157600080fd5b81019080803590602001909291905050506111b7565b6040518082815260200191505060405180910390f35b34801561063957600080fd5b5061067c6004803603602081101561065057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111d4565b005b34801561068a57600080fd5b506106d7600480360360408110156106a157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506111eb565b6040518082815260200191505060405180910390f35b3480156106f957600080fd5b506107266004803603602081101561071057600080fd5b81019080803590602001909291905050506112bd565b6040518082815260200191505060405180910390f35b34801561074857600080fd5b506107756004803603602081101561075f57600080fd5b81019080803590602001909291905050506112da565b6040518082815260200191505060405180910390f35b34801561079757600080fd5b506107e4600480360360408110156107ae57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112f7565b604051808215151515815260200191505060405180910390f35b34801561080a57600080fd5b506108416004803603604081101561082157600080fd5b8101908080359060200190929190803590602001909291905050506113c9565b6040518082600560200280838360005b8381101561086c578082015181840152602081019050610851565b5050505090500191505060405180910390f35b34801561088b57600080fd5b506108ce600480360360208110156108a257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113ef565b6040518082815260200191505060405180910390f35b3480156108f057600080fd5b506109336004803603602081101561090757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114b8565b604051808381526020018281526020019250505060405180910390f35b34801561095c57600080fd5b506109936004803603604081101561097357600080fd5b8101908080359060200190929190803590602001909291905050506114d8565b6040518082815260200191505060405180910390f35b3480156109b557600080fd5b506109ec600480360360408110156109cc57600080fd5b8101908080359060200190929190803590602001909291905050506114f8565b6040518082815260200191505060405180910390f35b348015610a0e57600080fd5b50610a4560048036036040811015610a2557600080fd5b810190808035906020019092919080359060200190929190505050611518565b6040518082815260200191505060405180910390f35b348015610a6757600080fd5b50610ab460048036036040811015610a7e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611538565b604051808215151515815260200191505060405180910390f35b348015610ada57600080fd5b50610ae361160a565b6040518087815260200186815260200185815260200180602001848152602001838152602001828103825285818151815260200191508051906020019080838360005b83811015610b41578082015181840152602081019050610b26565b50505050905090810190601f168015610b6e5780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b348015610b8d57600080fd5b50610bda60048036036040811015610ba457600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611632565b604051808215151515815260200191505060405180910390f35b348015610c0057600080fd5b50610c4360048036036020811015610c1757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611652565b005b348015610c5157600080fd5b50610c7e60048036036020811015610c6857600080fd5b8101908080359060200190929190505050611669565b604051808a81526020018915151515815260200188151515158152602001871515151581526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183600960200280838360005b83811015610d63578082015181840152602081019050610d48565b50505050905001828152602001995050505050505050505060405180910390f35b348015610d9057600080fd5b50610d996116b1565b6040518082603360200280838360005b83811015610dc4578082015181840152602081019050610da9565b5050505090500191505060405180910390f35b348015610de357600080fd5b50610e1a60048036036040811015610dfa57600080fd5b8101908080359060200190929190803590602001909291905050506116c8565b6040518082815260200191505060405180910390f35b348015610e3c57600080fd5b50610e6960048036036020811015610e5357600080fd5b81019080803590602001909291905050506116e8565b6040518082815260200191505060405180910390f35b348015610e8b57600080fd5b50610eee60048036036040811015610ea257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611705565b6040518082815260200191505060405180910390f35b348015610f1057600080fd5b50610f4760048036036040811015610f2757600080fd5b810190808035906020019092919080359060200190929190505050611803565b6040518082815260200191505060405180910390f35b348015610f6957600080fd5b50610f9660048036036020811015610f8057600080fd5b8101908080359060200190929190505050611823565b604051808060200180602001878152602001868152602001858152602001848152602001838103835289818151815260200191508051906020019080838360005b83811015610ff2578082015181840152602081019050610fd7565b50505050905090810190601f16801561101f5780820380516001836020036101000a031916815260200191505b50838103825288818151815260200191508051906020019080838360005b8381101561105857808201518184015260208101905061103d565b50505050905090810190601f1680156110855780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b3480156110a557600080fd5b506110ae611855565b60405180838152602001821515151581526020019250505060405180910390f35b60006110e582600061186a90919063ffffffff16565b9050919050565b6110f4612e21565b61110a8383600061188a9092919063ffffffff16565b905092915050565b600061112882600061190090919063ffffffff16565b9050919050565b600061113b6000611940565b905090565b600080606061114f6000611994565b925092509250909192565b6000611170826000611ac890919063ffffffff16565b9050919050565b60008061118e836000611ae890919063ffffffff16565b91509150915091565b60006111af83836000611b609092919063ffffffff16565b905092915050565b60006111cd826000611ba290919063ffffffff16565b9050919050565b6111e8816000611bc890919063ffffffff16565b50565b60008073__v2TellorTransfer______________________6395b91ea0909185856040518463ffffffff1660e01b8152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060206040518083038186803b15801561127a57600080fd5b505af415801561128e573d6000803e3d6000fd5b505050506040513d60208110156112a457600080fd5b8101908080519060200190929190505050905092915050565b60006112d3826000611d6090919063ffffffff16565b9050919050565b60006112f0826000611d8090919063ffffffff16565b9050919050565b60008073__v2TellorGettersLibrary________________6362bd6a96909185856040518463ffffffff1660e01b8152600401808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060206040518083038186803b15801561138657600080fd5b505af415801561139a573d6000803e3d6000fd5b505050506040513d60208110156113b057600080fd5b8101908080519060200190929190505050905092915050565b6113d1612e43565b6113e783836000611e179092919063ffffffff16565b905092915050565b60008073__v2TellorTransfer______________________634b4112349091846040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b15801561147657600080fd5b505af415801561148a573d6000803e3d6000fd5b505050506040513d60208110156114a057600080fd5b81019080805190602001909291905050509050919050565b6000806114cf836000611ec390919063ffffffff16565b91509150915091565b60006114f083836000611f5b9092919063ffffffff16565b905092915050565b600061151083836000611f949092919063ffffffff16565b905092915050565b600061153083836000611fc99092919063ffffffff16565b905092915050565b60008073__v2TellorTransfer______________________63db23ad08909185856040518463ffffffff1660e01b8152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060206040518083038186803b1580156115c757600080fd5b505af41580156115db573d6000803e3d6000fd5b505050506040513d60208110156115f157600080fd5b8101908080519060200190929190505050905092915050565b6000806000606060008061161e6000611ffe565b955095509550955095509550909192939495565b600061164a838360006123089092919063ffffffff16565b905092915050565b61166681600061237690919063ffffffff16565b50565b600080600080600080600061167c612e65565b60006116928a600061257190919063ffffffff16565b9850985098509850985098509850985098509193959799909294969850565b6116b9612e88565b6116c36000612947565b905090565b60006116e0838360006129969092919063ffffffff16565b905092915050565b60006116fe8260006129cb90919063ffffffff16565b9050919050565b60008073__v2TellorTransfer______________________63bb2d5246909185856040518463ffffffff1660e01b8152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060206040518083038186803b1580156117c057600080fd5b505af41580156117d4573d6000803e3d6000fd5b505050506040513d60208110156117ea57600080fd5b8101908080519060200190929190505050905092915050565b600061181b838360006129eb9092919063ffffffff16565b905092915050565b606080600080600080611840876000612a2090919063ffffffff16565b95509550955095509550955091939550919395565b6000806118626000612c7f565b915091509091565b600082604201600083815260200190815260200160002054905092915050565b611892612e21565b83604801600084815260200190815260200160002060090160008381526020019081526020016000206005806020026040519081016040528092919082600580156118f2576020028201915b8154815260200190600101908083116118de575b505050505090509392505050565b600082603f01600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b600081604001600060405180807f746f74616c5f737570706c790000000000000000000000000000000000000000815250600c01905060405180910390208152602001908152602001600020549050919050565b600080606060006119a485612d41565b905080856048016000838152602001908152602001600020600401600060405180807f746f74616c54697000000000000000000000000000000000000000000000000081525060080190506040518091039020815260200190815260200160002054866048016000848152602001908152602001600020600001808054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611ab35780601f10611a8857610100808354040283529160200191611ab3565b820191906000526020600020905b815481529060010190602001808311611a9657829003601f168201915b50505050509050935093509350509193909250565b600082604901600083815260200190815260200160002054905092915050565b600080600084604801600085815260200190815260200160002090506000816003018054905014611b4d57611b41858583600301600185600301805490500381548110611b3157fe5b9060005260206000200154611fc9565b60019250925050611b59565b60008081915092509250505b9250929050565b6000836048016000848152602001908152602001600020600701600083815260200190815260200160002060009054906101000a900460ff1690509392505050565b600082604801600083815260200190815260200160002060030180549050905092915050565b3373ffffffffffffffffffffffffffffffffffffffff1682603f01600060405180807f5f6465697479000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611cd3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f53656e646572206973206e6f742064656974790000000000000000000000000081525060200191505060405180910390fd5b8082603f01600060405180807f5f6465697479000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600082604001600083815260200190815260200160002054905092915050565b60006032821115611df9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f526571756573745120696e6465782069732061626f766520353000000000000081525060200191505060405180910390fd5b82604301600083815260200190815260200160002054905092915050565b611e1f612e43565b8360480160008481526020019081526020016000206008016000838152602001908152602001600020600580602002604051908101604052809291908260058015611eb5576020028201915b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611e6b575b505050505090509392505050565b6000808360470160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001548460470160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154915091509250929050565b60008360480160008481526020019081526020016000206003018281548110611f8057fe5b906000526020600020015490509392505050565b600083604401600084815260200190815260200160002060050160008381526020019081526020016000205490509392505050565b600083604801600084815260200190815260200160002060060160008381526020019081526020016000205490509392505050565b60008060006060600080866000015487604001600060405180807f63757272656e74526571756573744964000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000205488604001600060405180807f646966666963756c747900000000000000000000000000000000000000000000815250600a01905060405180910390208152602001908152602001600020548960480160008b604001600060405180807f63757272656e74526571756573744964000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000205481526020019081526020016000206000018a60480160008c604001600060405180807f63757272656e7452657175657374496400000000000000000000000000000000815250601001905060405180910390208152602001908152602001600020548152602001908152602001600020600401600060405180807f6772616e756c6172697479000000000000000000000000000000000000000000815250600b01905060405180910390208152602001908152602001600020548b60480160008d604001600060405180807f63757272656e7452657175657374496400000000000000000000000000000000815250601001905060405180910390208152602001908152602001600020548152602001908152602001600020600401600060405180807f746f74616c54697000000000000000000000000000000000000000000000000081525060080190506040518091039020815260200190815260200160002054828054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156122ec5780601f106122c1576101008083540402835291602001916122ec565b820191906000526020600020905b8154815290600101906020018083116122cf57829003601f168201915b5050505050925095509550955095509550955091939550919395565b600083604401600084815260200190815260200160002060060160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1690509392505050565b3373ffffffffffffffffffffffffffffffffffffffff1682603f01600060405180807f5f6465697479000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612481576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f53656e646572206973206e6f742064656974790000000000000000000000000081525060200191505060405180910390fd5b8082603f01600060405180807f74656c6c6f72436f6e7472616374000000000000000000000000000000000000815250600e0190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fc2d1449eb0b6547aa426e09d9942a77fa4fc8cd3296305b3163e22452e0bcb8d81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15050565b6000806000806000806000612584612e65565b6000808b60440160008c8152602001908152602001600020905080600001548160020160009054906101000a900460ff168260020160019054906101000a900460ff168360020160029054906101000a900460ff168460020160039054906101000a900473ffffffffffffffffffffffffffffffffffffffff168560030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168660040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660405180610120016040528089600501600060405180807f726571756573744964000000000000000000000000000000000000000000000081525060090190506040518091039020815260200190815260200160002054815260200189600501600060405180807f74696d657374616d70000000000000000000000000000000000000000000000081525060090190506040518091039020815260200190815260200160002054815260200189600501600060405180807f76616c756500000000000000000000000000000000000000000000000000000081525060050190506040518091039020815260200190815260200160002054815260200189600501600060405180807f6d696e457865637574696f6e446174650000000000000000000000000000000081525060100190506040518091039020815260200190815260200160002054815260200189600501600060405180807f6e756d6265724f66566f74657300000000000000000000000000000000000000815250600d0190506040518091039020815260200190815260200160002054815260200189600501600060405180807f626c6f636b4e756d626572000000000000000000000000000000000000000000815250600b0190506040518091039020815260200190815260200160002054815260200189600501600060405180807f6d696e6572536c6f74000000000000000000000000000000000000000000000081525060090190506040518091039020815260200190815260200160002054815260200189600501600060405180807f71756f72756d000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002054815260200189600501600060405180807f6665650000000000000000000000000000000000000000000000000000000000815250600301905060405180910390208152602001908152602001600020548152508860010154995099509950995099509950995099509950509295985092959850929598565b61294f612e88565b8160010160338060200260405190810160405280929190826033801561298a576020028201915b815481526020019060010190808311612976575b50505050509050919050565b600083604801600084815260200190815260200160002060050160008381526020019081526020016000205490509392505050565b600082604a01600083815260200190815260200160002054905092915050565b600083604801600084815260200190815260200160002060040160008381526020019081526020016000205490509392505050565b606080600080600080600088604801600089815260200190815260200160002090508060000181600101826002015483600401600060405180807f6772616e756c6172697479000000000000000000000000000000000000000000815250600b019050604051809103902081526020019081526020016000205484600401600060405180807f7265717565737451506f736974696f6e000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000205485600401600060405180807f746f74616c54697000000000000000000000000000000000000000000000000081525060080190506040518091039020815260200190815260200160002054858054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612bc55780601f10612b9a57610100808354040283529160200191612bc5565b820191906000526020600020905b815481529060010190602001808311612ba857829003601f168201915b50505050509550848054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612c615780601f10612c3657610100808354040283529160200191612c61565b820191906000526020600020905b815481529060010190602001808311612c4457829003601f168201915b50505050509450965096509650965096509650509295509295509295565b600080612d368384604201600086604001600060405180807f74696d654f664c6173744e657756616c756500000000000000000000000000008152506012019050604051809103902081526020019081526020016000205481526020019081526020016000205485604001600060405180807f74696d654f664c6173744e657756616c7565000000000000000000000000000081525060120190506040518091039020815260200190815260200160002054611fc9565b600191509150915091565b6000806000612d8e84600101603380602002604051908101604052809291908260338015612d84576020028201915b815481526020019060010190808311612d70575b5050505050612db5565b80925081935050508360430160008281526020019081526020016000205492505050919050565b60008060019050828160338110612dc857fe5b602002015191506000600290505b6033811015612e1b5782848260338110612dec57fe5b60200201511115612e0e57838160338110612e0357fe5b602002015192508091505b8080600101915050612dd6565b50915091565b6040518060a00160405280600590602082028038833980820191505090505090565b6040518060a00160405280600590602082028038833980820191505090505090565b604051806101200160405280600990602082028038833980820191505090505090565b60405180610660016040528060339060208202803883398082019150509050509056fea265627a7a7231582098de40756ef48664d6f299b4155d823ae52256a8d4723c6c220d7eaf70dc3cdf64736f6c63430005100032",
  "deployedBytecode": "0x6080604052600436106101e35760003560e01c8063733bdef011610102578063af0b132711610095578063dd62ed3e11610064578063dd62ed3e14610e7f578063e0ae93c114610f04578063e1eee6d614610f5d578063fc7cf0a014611099576101e3565b8063af0b132714610c45578063b541302914610d84578063c775b54214610dd7578063da37994114610e30576101e3565b8063999cf26c116100d1578063999cf26c14610a5b578063a22e407a14610ace578063a7c438bc14610b81578063ae0a827914610bf4576101e3565b8063733bdef0146108e457806377fbb663146109505780637f6fd5d9146109a957806393fa491514610a02576101e3565b806346eee1c41161017a5780636173c0b8116101495780636173c0b81461073c57806363bb82ad1461078b57806369026d63146107fe57806370a082311461087f576101e3565b806346eee1c4146105de57806347abd7f11461062d5780634ee2cd7e1461067e578063612c8f7f146106ed576101e3565b806319e8e03b116101b657806319e8e03b1461043a5780631db842f0146104d85780633180f8df146105275780633df0777b14610581576101e3565b80630f0b424d146102c457806311c9851214610313578063133bee5e1461039457806318160ddd1461040f575b600080603f01600060405180807f74656c6c6f72436f6e7472616374000000000000000000000000000000000000815250600e0190506040518091039020815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060606000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050905060008082516020840185600019f43d604051816000823e82600081146102c0578282f35b8282fd5b3480156102d057600080fd5b506102fd600480360360208110156102e757600080fd5b81019080803590602001909291905050506110cf565b6040518082815260200191505060405180910390f35b34801561031f57600080fd5b506103566004803603604081101561033657600080fd5b8101908080359060200190929190803590602001909291905050506110ec565b6040518082600560200280838360005b83811015610381578082015181840152602081019050610366565b5050505090500191505060405180910390f35b3480156103a057600080fd5b506103cd600480360360208110156103b757600080fd5b8101908080359060200190929190505050611112565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561041b57600080fd5b5061042461112f565b6040518082815260200191505060405180910390f35b34801561044657600080fd5b5061044f611140565b6040518084815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561049b578082015181840152602081019050610480565b50505050905090810190601f1680156104c85780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b3480156104e457600080fd5b50610511600480360360208110156104fb57600080fd5b810190808035906020019092919050505061115a565b6040518082815260200191505060405180910390f35b34801561053357600080fd5b506105606004803603602081101561054a57600080fd5b8101908080359060200190929190505050611177565b60405180838152602001821515151581526020019250505060405180910390f35b34801561058d57600080fd5b506105c4600480360360408110156105a457600080fd5b810190808035906020019092919080359060200190929190505050611197565b604051808215151515815260200191505060405180910390f35b3480156105ea57600080fd5b506106176004803603602081101561060157600080fd5b81019080803590602001909291905050506111b7565b6040518082815260200191505060405180910390f35b34801561063957600080fd5b5061067c6004803603602081101561065057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111d4565b005b34801561068a57600080fd5b506106d7600480360360408110156106a157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506111eb565b6040518082815260200191505060405180910390f35b3480156106f957600080fd5b506107266004803603602081101561071057600080fd5b81019080803590602001909291905050506112bd565b6040518082815260200191505060405180910390f35b34801561074857600080fd5b506107756004803603602081101561075f57600080fd5b81019080803590602001909291905050506112da565b6040518082815260200191505060405180910390f35b34801561079757600080fd5b506107e4600480360360408110156107ae57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112f7565b604051808215151515815260200191505060405180910390f35b34801561080a57600080fd5b506108416004803603604081101561082157600080fd5b8101908080359060200190929190803590602001909291905050506113c9565b6040518082600560200280838360005b8381101561086c578082015181840152602081019050610851565b5050505090500191505060405180910390f35b34801561088b57600080fd5b506108ce600480360360208110156108a257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113ef565b6040518082815260200191505060405180910390f35b3480156108f057600080fd5b506109336004803603602081101561090757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114b8565b604051808381526020018281526020019250505060405180910390f35b34801561095c57600080fd5b506109936004803603604081101561097357600080fd5b8101908080359060200190929190803590602001909291905050506114d8565b6040518082815260200191505060405180910390f35b3480156109b557600080fd5b506109ec600480360360408110156109cc57600080fd5b8101908080359060200190929190803590602001909291905050506114f8565b6040518082815260200191505060405180910390f35b348015610a0e57600080fd5b50610a4560048036036040811015610a2557600080fd5b810190808035906020019092919080359060200190929190505050611518565b6040518082815260200191505060405180910390f35b348015610a6757600080fd5b50610ab460048036036040811015610a7e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611538565b604051808215151515815260200191505060405180910390f35b348015610ada57600080fd5b50610ae361160a565b6040518087815260200186815260200185815260200180602001848152602001838152602001828103825285818151815260200191508051906020019080838360005b83811015610b41578082015181840152602081019050610b26565b50505050905090810190601f168015610b6e5780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b348015610b8d57600080fd5b50610bda60048036036040811015610ba457600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611632565b604051808215151515815260200191505060405180910390f35b348015610c0057600080fd5b50610c4360048036036020811015610c1757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611652565b005b348015610c5157600080fd5b50610c7e60048036036020811015610c6857600080fd5b8101908080359060200190929190505050611669565b604051808a81526020018915151515815260200188151515158152602001871515151581526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183600960200280838360005b83811015610d63578082015181840152602081019050610d48565b50505050905001828152602001995050505050505050505060405180910390f35b348015610d9057600080fd5b50610d996116b1565b6040518082603360200280838360005b83811015610dc4578082015181840152602081019050610da9565b5050505090500191505060405180910390f35b348015610de357600080fd5b50610e1a60048036036040811015610dfa57600080fd5b8101908080359060200190929190803590602001909291905050506116c8565b6040518082815260200191505060405180910390f35b348015610e3c57600080fd5b50610e6960048036036020811015610e5357600080fd5b81019080803590602001909291905050506116e8565b6040518082815260200191505060405180910390f35b348015610e8b57600080fd5b50610eee60048036036040811015610ea257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611705565b6040518082815260200191505060405180910390f35b348015610f1057600080fd5b50610f4760048036036040811015610f2757600080fd5b810190808035906020019092919080359060200190929190505050611803565b6040518082815260200191505060405180910390f35b348015610f6957600080fd5b50610f9660048036036020811015610f8057600080fd5b8101908080359060200190929190505050611823565b604051808060200180602001878152602001868152602001858152602001848152602001838103835289818151815260200191508051906020019080838360005b83811015610ff2578082015181840152602081019050610fd7565b50505050905090810190601f16801561101f5780820380516001836020036101000a031916815260200191505b50838103825288818151815260200191508051906020019080838360005b8381101561105857808201518184015260208101905061103d565b50505050905090810190601f1680156110855780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b3480156110a557600080fd5b506110ae611855565b60405180838152602001821515151581526020019250505060405180910390f35b60006110e582600061186a90919063ffffffff16565b9050919050565b6110f4612e21565b61110a8383600061188a9092919063ffffffff16565b905092915050565b600061112882600061190090919063ffffffff16565b9050919050565b600061113b6000611940565b905090565b600080606061114f6000611994565b925092509250909192565b6000611170826000611ac890919063ffffffff16565b9050919050565b60008061118e836000611ae890919063ffffffff16565b91509150915091565b60006111af83836000611b609092919063ffffffff16565b905092915050565b60006111cd826000611ba290919063ffffffff16565b9050919050565b6111e8816000611bc890919063ffffffff16565b50565b60008073__v2TellorTransfer______________________6395b91ea0909185856040518463ffffffff1660e01b8152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060206040518083038186803b15801561127a57600080fd5b505af415801561128e573d6000803e3d6000fd5b505050506040513d60208110156112a457600080fd5b8101908080519060200190929190505050905092915050565b60006112d3826000611d6090919063ffffffff16565b9050919050565b60006112f0826000611d8090919063ffffffff16565b9050919050565b60008073__v2TellorGettersLibrary________________6362bd6a96909185856040518463ffffffff1660e01b8152600401808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060206040518083038186803b15801561138657600080fd5b505af415801561139a573d6000803e3d6000fd5b505050506040513d60208110156113b057600080fd5b8101908080519060200190929190505050905092915050565b6113d1612e43565b6113e783836000611e179092919063ffffffff16565b905092915050565b60008073__v2TellorTransfer______________________634b4112349091846040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b15801561147657600080fd5b505af415801561148a573d6000803e3d6000fd5b505050506040513d60208110156114a057600080fd5b81019080805190602001909291905050509050919050565b6000806114cf836000611ec390919063ffffffff16565b91509150915091565b60006114f083836000611f5b9092919063ffffffff16565b905092915050565b600061151083836000611f949092919063ffffffff16565b905092915050565b600061153083836000611fc99092919063ffffffff16565b905092915050565b60008073__v2TellorTransfer______________________63db23ad08909185856040518463ffffffff1660e01b8152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060206040518083038186803b1580156115c757600080fd5b505af41580156115db573d6000803e3d6000fd5b505050506040513d60208110156115f157600080fd5b8101908080519060200190929190505050905092915050565b6000806000606060008061161e6000611ffe565b955095509550955095509550909192939495565b600061164a838360006123089092919063ffffffff16565b905092915050565b61166681600061237690919063ffffffff16565b50565b600080600080600080600061167c612e65565b60006116928a600061257190919063ffffffff16565b9850985098509850985098509850985098509193959799909294969850565b6116b9612e88565b6116c36000612947565b905090565b60006116e0838360006129969092919063ffffffff16565b905092915050565b60006116fe8260006129cb90919063ffffffff16565b9050919050565b60008073__v2TellorTransfer______________________63bb2d5246909185856040518463ffffffff1660e01b8152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060206040518083038186803b1580156117c057600080fd5b505af41580156117d4573d6000803e3d6000fd5b505050506040513d60208110156117ea57600080fd5b8101908080519060200190929190505050905092915050565b600061181b838360006129eb9092919063ffffffff16565b905092915050565b606080600080600080611840876000612a2090919063ffffffff16565b95509550955095509550955091939550919395565b6000806118626000612c7f565b915091509091565b600082604201600083815260200190815260200160002054905092915050565b611892612e21565b83604801600084815260200190815260200160002060090160008381526020019081526020016000206005806020026040519081016040528092919082600580156118f2576020028201915b8154815260200190600101908083116118de575b505050505090509392505050565b600082603f01600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b600081604001600060405180807f746f74616c5f737570706c790000000000000000000000000000000000000000815250600c01905060405180910390208152602001908152602001600020549050919050565b600080606060006119a485612d41565b905080856048016000838152602001908152602001600020600401600060405180807f746f74616c54697000000000000000000000000000000000000000000000000081525060080190506040518091039020815260200190815260200160002054866048016000848152602001908152602001600020600001808054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611ab35780601f10611a8857610100808354040283529160200191611ab3565b820191906000526020600020905b815481529060010190602001808311611a9657829003601f168201915b50505050509050935093509350509193909250565b600082604901600083815260200190815260200160002054905092915050565b600080600084604801600085815260200190815260200160002090506000816003018054905014611b4d57611b41858583600301600185600301805490500381548110611b3157fe5b9060005260206000200154611fc9565b60019250925050611b59565b60008081915092509250505b9250929050565b6000836048016000848152602001908152602001600020600701600083815260200190815260200160002060009054906101000a900460ff1690509392505050565b600082604801600083815260200190815260200160002060030180549050905092915050565b3373ffffffffffffffffffffffffffffffffffffffff1682603f01600060405180807f5f6465697479000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611cd3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f53656e646572206973206e6f742064656974790000000000000000000000000081525060200191505060405180910390fd5b8082603f01600060405180807f5f6465697479000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600082604001600083815260200190815260200160002054905092915050565b60006032821115611df9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f526571756573745120696e6465782069732061626f766520353000000000000081525060200191505060405180910390fd5b82604301600083815260200190815260200160002054905092915050565b611e1f612e43565b8360480160008481526020019081526020016000206008016000838152602001908152602001600020600580602002604051908101604052809291908260058015611eb5576020028201915b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611e6b575b505050505090509392505050565b6000808360470160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001548460470160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154915091509250929050565b60008360480160008481526020019081526020016000206003018281548110611f8057fe5b906000526020600020015490509392505050565b600083604401600084815260200190815260200160002060050160008381526020019081526020016000205490509392505050565b600083604801600084815260200190815260200160002060060160008381526020019081526020016000205490509392505050565b60008060006060600080866000015487604001600060405180807f63757272656e74526571756573744964000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000205488604001600060405180807f646966666963756c747900000000000000000000000000000000000000000000815250600a01905060405180910390208152602001908152602001600020548960480160008b604001600060405180807f63757272656e74526571756573744964000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000205481526020019081526020016000206000018a60480160008c604001600060405180807f63757272656e7452657175657374496400000000000000000000000000000000815250601001905060405180910390208152602001908152602001600020548152602001908152602001600020600401600060405180807f6772616e756c6172697479000000000000000000000000000000000000000000815250600b01905060405180910390208152602001908152602001600020548b60480160008d604001600060405180807f63757272656e7452657175657374496400000000000000000000000000000000815250601001905060405180910390208152602001908152602001600020548152602001908152602001600020600401600060405180807f746f74616c54697000000000000000000000000000000000000000000000000081525060080190506040518091039020815260200190815260200160002054828054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156122ec5780601f106122c1576101008083540402835291602001916122ec565b820191906000526020600020905b8154815290600101906020018083116122cf57829003601f168201915b5050505050925095509550955095509550955091939550919395565b600083604401600084815260200190815260200160002060060160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1690509392505050565b3373ffffffffffffffffffffffffffffffffffffffff1682603f01600060405180807f5f6465697479000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612481576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f53656e646572206973206e6f742064656974790000000000000000000000000081525060200191505060405180910390fd5b8082603f01600060405180807f74656c6c6f72436f6e7472616374000000000000000000000000000000000000815250600e0190506040518091039020815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fc2d1449eb0b6547aa426e09d9942a77fa4fc8cd3296305b3163e22452e0bcb8d81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15050565b6000806000806000806000612584612e65565b6000808b60440160008c8152602001908152602001600020905080600001548160020160009054906101000a900460ff168260020160019054906101000a900460ff168360020160029054906101000a900460ff168460020160039054906101000a900473ffffffffffffffffffffffffffffffffffffffff168560030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168660040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660405180610120016040528089600501600060405180807f726571756573744964000000000000000000000000000000000000000000000081525060090190506040518091039020815260200190815260200160002054815260200189600501600060405180807f74696d657374616d70000000000000000000000000000000000000000000000081525060090190506040518091039020815260200190815260200160002054815260200189600501600060405180807f76616c756500000000000000000000000000000000000000000000000000000081525060050190506040518091039020815260200190815260200160002054815260200189600501600060405180807f6d696e457865637574696f6e446174650000000000000000000000000000000081525060100190506040518091039020815260200190815260200160002054815260200189600501600060405180807f6e756d6265724f66566f74657300000000000000000000000000000000000000815250600d0190506040518091039020815260200190815260200160002054815260200189600501600060405180807f626c6f636b4e756d626572000000000000000000000000000000000000000000815250600b0190506040518091039020815260200190815260200160002054815260200189600501600060405180807f6d696e6572536c6f74000000000000000000000000000000000000000000000081525060090190506040518091039020815260200190815260200160002054815260200189600501600060405180807f71756f72756d000000000000000000000000000000000000000000000000000081525060060190506040518091039020815260200190815260200160002054815260200189600501600060405180807f6665650000000000000000000000000000000000000000000000000000000000815250600301905060405180910390208152602001908152602001600020548152508860010154995099509950995099509950995099509950509295985092959850929598565b61294f612e88565b8160010160338060200260405190810160405280929190826033801561298a576020028201915b815481526020019060010190808311612976575b50505050509050919050565b600083604801600084815260200190815260200160002060050160008381526020019081526020016000205490509392505050565b600082604a01600083815260200190815260200160002054905092915050565b600083604801600084815260200190815260200160002060040160008381526020019081526020016000205490509392505050565b606080600080600080600088604801600089815260200190815260200160002090508060000181600101826002015483600401600060405180807f6772616e756c6172697479000000000000000000000000000000000000000000815250600b019050604051809103902081526020019081526020016000205484600401600060405180807f7265717565737451506f736974696f6e000000000000000000000000000000008152506010019050604051809103902081526020019081526020016000205485600401600060405180807f746f74616c54697000000000000000000000000000000000000000000000000081525060080190506040518091039020815260200190815260200160002054858054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612bc55780601f10612b9a57610100808354040283529160200191612bc5565b820191906000526020600020905b815481529060010190602001808311612ba857829003601f168201915b50505050509550848054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612c615780601f10612c3657610100808354040283529160200191612c61565b820191906000526020600020905b815481529060010190602001808311612c4457829003601f168201915b50505050509450965096509650965096509650509295509295509295565b600080612d368384604201600086604001600060405180807f74696d654f664c6173744e657756616c756500000000000000000000000000008152506012019050604051809103902081526020019081526020016000205481526020019081526020016000205485604001600060405180807f74696d654f664c6173744e657756616c7565000000000000000000000000000081525060120190506040518091039020815260200190815260200160002054611fc9565b600191509150915091565b6000806000612d8e84600101603380602002604051908101604052809291908260338015612d84576020028201915b815481526020019060010190808311612d70575b5050505050612db5565b80925081935050508360430160008281526020019081526020016000205492505050919050565b60008060019050828160338110612dc857fe5b602002015191506000600290505b6033811015612e1b5782848260338110612dec57fe5b60200201511115612e0e57838160338110612e0357fe5b602002015192508091505b8080600101915050612dd6565b50915091565b6040518060a00160405280600590602082028038833980820191505090505090565b6040518060a00160405280600590602082028038833980820191505090505090565b604051806101200160405280600990602082028038833980820191505090505090565b60405180610660016040528060339060208202803883398082019150509050509056fea265627a7a7231582098de40756ef48664d6f299b4155d823ae52256a8d4723c6c220d7eaf70dc3cdf64736f6c63430005100032",
  "sourceMap": "326:2209:33:-;;;712:321;8:9:-1;5:2;;;30:1;27;20:12;5:2;712:321:33;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;712:321:33;;;;;;;;;;;;;;;;766:6;:11;;;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;766:13:33;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;766:13:33;;;;831:10;789:6;:18;;:39;808:19;;;;;;;;;;;;;;;;;;;789:39;;;;;;;;;;;;:52;;;;;;;;;;;;;;;;;;893:10;851:6;:18;;:39;870:19;;;;;;;;;;;;;;;;;;;851:39;;;;;;;;;;;;:52;;;;;;;;;;;;;;;;;;963:15;913:6;:18;;:47;932:27;;;;;;;;;;;;;;;;;;;913:47;;;;;;;;;;;;:65;;;;;;;;;;;;;;;;;;993:33;1010:15;993:33;;;;;;;;;;;;;;;;;;;;;;712:321;326:2209;;;;;;",
  "deployedSourceMap": "326:2209:33:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1816:12;1831:6;:18;;:47;1850:27;;;;;;;;;;;;;;;;;;;1831:47;;;;;;;;;;;;;;;;;;;;;1816:62;;1888:22;1913:8;;1888:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1888:33:33;;;;;;;;2038:1;2035;2023:9;2017:16;2010:4;1999:9;1995:20;1989:4;1985:1;1981:6;1968:72;2065:14;2109:4;2103:11;2150:4;2147:1;2142:3;2127:28;2348:6;2376:1;2371:64;;;;2494:4;2489:3;2482:17;2371:64;2412:4;2407:3;2400:17;8542:151:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8542:151:32;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8542:151:32;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;11263:197;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11263:197:32;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11263:197:32;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11263:197:32;;;;;;;;;;;;;;;;3413:123;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3413:123:32;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3413:123:32;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;13834:99;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13834:99:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;12786:137;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12786:137:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12786:137:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8909:147;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8909:147:32;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8909:147:32;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6539:149;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6539:149:32;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6539:149:32;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13194:156;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13194:156:32;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13194:156:32;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7908:159;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7908:159:32;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7908:159:32;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1235:95:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1235:95:33;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1235:95:33;;;;;;;;;;;;;;;;;;;:::i;:::-;;2080:153:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2080:153:32;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2080:153:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;12436:113;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12436:113:32;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12436:113:32;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8234:151;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8234:151:32;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8234:151:32;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2538:140;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2538:140:32;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2538:140:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7336:211;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7336:211:32;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7336:211:32;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;7336:211:32;;;;;;;;;;;;;;;;1694:113;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1694:113:32;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1694:113:32;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10841:134;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10841:134:32;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10841:134:32;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;11678:191;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11678:191:32;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11678:191:32;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5810:163;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5810:163:32;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5810:163:32;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;13564:161;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13564:161:32;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13564:161:32;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1346:146;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1346:146:32;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1346:146:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4814:166;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4814:166:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4814:166:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2873:144;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2873:144:32;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2873:144:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1519:125:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1519:125:33;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1519:125:33;;;;;;;;;;;;;;;;;;;:::i;:::-;;4294:237:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4294:237:32;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4294:237:32;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4294:237:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9161:108;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9161:108:32;;;:::i;:::-;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;9161:108:32;;;;;;;;;;;;;;;;6922:169;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6922:169:32;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6922:169:32;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5176:145;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5176:145:32;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5176:145:32;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;954:141;;8:9:-1;5:2;;;30:1;27;20:12;5:2;954:141:32;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;954:141:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9835:163;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9835:163:32;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9835:163:32;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10411:190;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10411:190:32;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10411:190:32;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10411:190:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10411:190:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6184:113;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6184:113:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8542:151;8618:7;8644:42;8675:10;8644:6;:30;;:42;;;;:::i;:::-;8637:49;;8542:151;;;:::o;11263:197::-;11361:17;;:::i;:::-;11397:56;11430:10;11442;11397:6;:32;;:56;;;;;:::i;:::-;11390:63;;11263:197;;;;:::o;3413:123::-;3475:7;3501:28;3523:5;3501:6;:21;;:28;;;;:::i;:::-;3494:35;;3413:123;;;:::o;13834:99::-;13880:7;13906:20;:6;:18;:20::i;:::-;13899:27;;13834:99;:::o;12786:137::-;12839:7;12848;12857:13;12889:27;:6;:25;:27::i;:::-;12882:34;;;;;;12786:137;;;:::o;8909:147::-;8983:7;9009:40;9040:8;9009:6;:30;;:40;;;;:::i;:::-;9002:47;;8909:147;;;:::o;6539:149::-;6611:7;6620:4;6643:38;6670:10;6643:6;:26;;:38;;;;:::i;:::-;6636:45;;;;6539:149;;;:::o;13194:156::-;13278:4;13301:42;13320:10;13332;13301:6;:18;;:42;;;;;:::i;:::-;13294:49;;13194:156;;;;:::o;7908:159::-;7988:7;8014:46;8049:10;8014:6;:34;;:46;;;;:::i;:::-;8007:53;;7908:159;;;:::o;1235:95:33:-;1294:29;1313:9;1294:6;:18;;:29;;;;:::i;:::-;1235:95;:::o;2080:153:32:-;2161:7;2187:6;:18;;;;2206:5;2213:12;2187:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2187:39:32;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2187:39:32;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2187:39:32;;;;;;;;;;;;;;;;2180:46;;2080:153;;;;:::o;12436:113::-;12492:7;12518:24;12536:5;12518:6;:17;;:24;;;;:::i;:::-;12511:31;;12436:113;;;:::o;8234:151::-;8310:7;8336:42;8371:6;8336;:34;;:42;;;;:::i;:::-;8329:49;;8234:151;;;:::o;2538:140::-;2614:4;2637:6;:14;;;;2652:10;2664:6;2637:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2637:34:32;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2637:34:32;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2637:34:32;;;;;;;;;;;;;;;;2630:41;;2538:140;;;;:::o;7336:211::-;7441:17;;:::i;:::-;7477:63;7517:10;7529;7477:6;:39;;:63;;;;;:::i;:::-;7470:70;;7336:211;;;;:::o;1694:113::-;1751:7;1777:6;:16;;;;1794:5;1777:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1777:23:32;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1777:23:32;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1777:23:32;;;;;;;;;;;;;;;;1770:30;;1694:113;;;:::o;10841:134::-;10904:7;10913;10939:29;10960:7;10939:6;:20;;:29;;;;:::i;:::-;10932:36;;;;10841:134;;;:::o;11678:191::-;11778:7;11804:58;11843:10;11855:6;11804;:38;;:58;;;;;:::i;:::-;11797:65;;11678:191;;;;:::o;5810:163::-;5896:7;5922:44;5948:10;5960:5;5922:6;:25;;:44;;;;;:::i;:::-;5915:51;;5810:163;;;;:::o;13564:161::-;13649:7;13675:43;13695:10;13707;13675:6;:19;;:43;;;;;:::i;:::-;13668:50;;13564:161;;;;:::o;1346:146::-;1425:4;1448:6;:21;;;;1470:5;1477:7;1448:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1448:37:32;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1448:37:32;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1448:37:32;;;;;;;;;;;;;;;;1441:44;;1346:146;;;;:::o;4814:166::-;4868:7;4877;4886;4895:13;4910:7;4919;4945:28;:6;:26;:28::i;:::-;4938:35;;;;;;;;;;;;4814:166;;;;;;:::o;2873:144::-;2951:4;2974:36;2989:10;3001:8;2974:6;:14;;:36;;;;;:::i;:::-;2967:43;;2873:144;;;;:::o;1519:125:33:-;1593:44;1621:15;1593:6;:27;;:44;;;;:::i;:::-;1519:125;:::o;4294:237:32:-;4386:7;4395:4;4401;4407;4413:7;4422;4431;4440:17;;:::i;:::-;4459:6;4488:36;4513:10;4488:6;:24;;:36;;;;:::i;:::-;4481:43;;;;;;;;;;;;;;;;;;4294:237;;;;;;;;;;;:::o;9161:108::-;9205:18;;:::i;:::-;9242:20;:6;:18;:20::i;:::-;9235:27;;9161:108;:::o;6922:169::-;7011:7;7037:47;7061:10;7073;7037:6;:23;;:47;;;;;:::i;:::-;7030:54;;6922:169;;;;:::o;5176:145::-;5249:7;5275:39;5308:5;5275:6;:32;;:39;;;;:::i;:::-;5268:46;;5176:145;;;:::o;954:141::-;1029:7;1055:6;:16;;;;1072:5;1079:8;1055:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1055:33:32;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1055:33:32;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1055:33:32;;;;;;;;;;;;;;;;1048:40;;954:141;;;;:::o;9835:163::-;9921:7;9947:44;9973:10;9985:5;9947:6;:25;;:44;;;;;:::i;:::-;9940:51;;9835:163;;;;:::o;10411:190::-;10478:13;10493;10508:7;10517;10526;10535;10561:33;10583:10;10561:6;:21;;:33;;;;:::i;:::-;10554:40;;;;;;;;;;;;10411:190;;;;;;;:::o;6184:113::-;6234:7;6243:4;6266:24;:6;:22;:24::i;:::-;6259:31;;;;6184:113;;:::o;10591:196:25:-;10717:7;10743:4;:25;;:37;10769:10;10743:37;;;;;;;;;;;;10736:44;;10591:196;;;;:::o;14052:280::-;14224:17;;:::i;:::-;14264:4;:19;;:31;14284:10;14264:31;;;;;;;;;;;:49;;:61;14314:10;14264:61;;;;;;;;;;;14257:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14052:280;;;;;:::o;2917:168::-;3029:7;3055:4;:16;;:23;3072:5;3055:23;;;;;;;;;;;;;;;;;;;;;3048:30;;2917:168;;;;:::o;17791:167::-;17885:7;17911:4;:13;;:40;17925:25;;;;;;;;;;;;;;;;;;;17911:40;;;;;;;;;;;;17904:47;;17791:167;;;:::o;15782:389::-;15883:7;15892;15901:13;15926:20;15949:21;15965:4;15949:15;:21::i;:::-;15926:44;;16001:12;16027:4;:19;;:33;16047:12;16027:33;;;;;;;;;;;:45;;:68;16073:21;;;;;;;;;;;;;;;;;;;16027:68;;;;;;;;;;;;16109:4;:19;;:33;16129:12;16109:33;;;;;;;;;;;:45;;15980:184;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15782:389;;;;;:::o;10999:196::-;11125:7;11151:4;:25;;:37;11177:10;11151:37;;;;;;;;;;;;11144:44;;10999:196;;;;:::o;7945:466::-;8067:7;8076:4;8092:40;8135:4;:19;;:31;8155:10;8135:31;;;;;;;;;;;8092:74;;8217:1;8180:8;:26;;:33;;;;:38;8176:229;;8242:97;8255:4;8261:10;8273:8;:26;;8336:1;8300:8;:26;;:33;;;;:37;8273:65;;;;;;;;;;;;;;;;8242:12;:97::i;:::-;8341:4;8234:112;;;;;;;8176:229;8385:1;8388:5;8377:17;;;;;;;;7945:466;;;;;;:::o;16975:217::-;17109:4;17132;:19;;:31;17152:10;17132:31;;;;;;;;;;;:41;;:53;17174:10;17132:53;;;;;;;;;;;;;;;;;;;;;17125:60;;16975:217;;;;;:::o;9791:219::-;9921:7;9947:4;:19;;:31;9967:10;9947:31;;;;;;;;;;;:49;;:56;;;;9940:63;;9791:219;;;;:::o;814:258::-;972:10;931:51;;:4;:16;;:37;948:19;;;;;;;;;;;;;;;;;;;931:37;;;;;;;;;;;;;;;;;;;;;:51;;;923:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1056:9;1016:4;:16;;:37;1033:19;;;;;;;;;;;;;;;;;;;1016:37;;;;;;;;;;;;:49;;;;;;;;;;;;;;;;;;814:258;;:::o;15384:161::-;15492:7;15518:4;:13;;:20;15532:5;15518:20;;;;;;;;;;;;15511:27;;15384:161;;;;:::o;10177:257::-;10303:7;10340:2;10330:6;:12;;10322:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10390:4;:29;;:37;10420:6;10390:37;;;;;;;;;;;;10383:44;;10177:257;;;;:::o;9147:283::-;9326:17;;:::i;:::-;9366:4;:19;;:31;9386:10;9366:31;;;;;;;;;;;:45;;:57;9412:10;9366:57;;;;;;;;;;;9359:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9147:283;;;;;:::o;13527:237::-;13640:7;13649;13676:4;:18;;:27;13695:7;13676:27;;;;;;;;;;;;;;;:41;;;13719:4;:18;;:27;13738:7;13719:27;;;;;;;;;;;;;;;:37;;;13668:89;;;;13527:237;;;;;:::o;14549:268::-;14723:7;14753:4;:19;;:31;14773:10;14753:31;;;;;;;;;;;:49;;14803:6;14753:57;;;;;;;;;;;;;;;;14746:64;;14549:268;;;;;:::o;6861:249::-;7021:7;7051:4;:17;;:29;7069:10;7051:29;;;;;;;;;;;:45;;:52;7097:5;7051:52;;;;;;;;;;;;7044:59;;6861:249;;;;;:::o;17431:251::-;17590:7;17620:4;:19;;:31;17640:10;17620:31;;;;;;;;;;;:43;;:55;17664:10;17620:55;;;;;;;;;;;;17613:62;;17431:251;;;;;:::o;5295:691::-;5421:7;5430;5439;5448:13;5463:7;5472;5516:4;:21;;;5551:4;:13;;:44;5565:29;;;;;;;;;;;;;;;;;;;5551:44;;;;;;;;;;;;5609:4;:13;;:38;5623:23;;;;;;;;;;;;;;;;;;;5609:38;;;;;;;;;;;;5661:4;:19;;:65;5681:4;:13;;:44;5695:29;;;;;;;;;;;;;;;;;;;5681:44;;;;;;;;;;;;5661:65;;;;;;;;;;;:77;;5752:4;:19;;:65;5772:4;:13;;:44;5786:29;;;;;;;;;;;;;;;;;;;5772:44;;;;;;;;;;;;5752:65;;;;;;;;;;;:77;;:103;5830:24;;;;;;;;;;;;;;;;;;;5752:103;;;;;;;;;;;;5869:4;:19;;:65;5889:4;:13;;:44;5903:29;;;;;;;;;;;;;;;;;;;5889:44;;;;;;;;;;;;5869:65;;;;;;;;;;;:77;;:100;5947:21;;;;;;;;;;;;;;;;;;;5869:100;;;;;;;;;;;;5495:484;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5295:691;;;;;;;:::o;2335:203::-;2463:4;2486;:17;;:29;2504:10;2486:29;;;;;;;;;;;:35;;:45;2522:8;2486:45;;;;;;;;;;;;;;;;;;;;;;;;;2479:52;;2335:203;;;;;:::o;1270:335::-;1443:10;1402:51;;:4;:16;;:37;1419:19;;;;;;;;;;;;;;;;;;;1402:37;;;;;;;;;;;;;;;;;;;;;:51;;;1394:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1535:15;1487:4;:16;;:45;1504:27;;;;;;;;;;;;;;;;;;;1487:45;;;;;;;;;;;;:63;;;;;;;;;;;;;;;;;;1565:33;1582:15;1565:33;;;;;;;;;;;;;;;;;;;;;;1270:335;;:::o;3843:1169::-;3987:7;3996:4;4002;4008;4014:7;4023;4032;4041:17;;:::i;:::-;4060:6;4082:36;4121:4;:17;;:29;4139:10;4121:29;;;;;;;;;;;4082:68;;4181:4;:9;;;4204:4;:13;;;;;;;;;;;;4231:4;:22;;;;;;;;;;;;4267:4;:15;;;;;;;;;;;;4296:4;:18;;;;;;;;;;;;4328:4;:19;;;;;;;;;;;;4361:4;:24;;;;;;;;;;;;4160:845;;;;;;;;4417:4;:20;;:44;4438:22;;;;;;;;;;;;;;;;;;;4417:44;;;;;;;;;;;;4160:845;;;;4479:4;:20;;:44;4500:22;;;;;;;;;;;;;;;;;;;4479:44;;;;;;;;;;;;4160:845;;;;4541:4;:20;;:40;4562:18;;;;;;;;;;;;;;;;;;;4541:40;;;;;;;;;;;;4160:845;;;;4599:4;:20;;:51;4620:29;;;;;;;;;;;;;;;;;;;4599:51;;;;;;;;;;;;4160:845;;;;4668:4;:20;;:48;4689:26;;;;;;;;;;;;;;;;;;;4668:48;;;;;;;;;;;;4160:845;;;;4734:4;:20;;:46;4755:24;;;;;;;;;;;;;;;;;;;4734:46;;;;;;;;;;;;4160:845;;;;4798:4;:20;;:44;4819:22;;;;;;;;;;;;;;;;;;;4798:44;;;;;;;;;;;;4160:845;;;;4860:4;:20;;:41;4881:19;;;;;;;;;;;;;;;;;;;4860:41;;;;;;;;;;;;4160:845;;;;4919:4;:20;;:38;4940:16;;;;;;;;;;;;;;;;;;;4919:38;;;;;;;;;;;;4160:845;;;4985:4;:10;;;4160:845;;;;;;;;;;;;;;;;;;;3843:1169;;;;;;;;;;;:::o;11300:151::-;11394:18;;:::i;:::-;11431:4;:13;;11424:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11300:151;;;:::o;8645:257::-;8808:7;8838:4;:19;;:31;8858:10;8838:31;;;;;;;;;;;:45;;:57;8884:10;8838:57;;;;;;;;;;;;8831:64;;8645:257;;;;;:::o;6182:190::-;6305:7;6331:4;:27;;:34;6359:5;6331:34;;;;;;;;;;;;6324:41;;6182:190;;;;:::o;12017:247::-;12177:7;12207:4;:19;;:31;12227:10;12207:31;;;;;;;;;;;:43;;:50;12251:5;12207:50;;;;;;;;;;;;12200:57;;12017:247;;;;;:::o;12677:610::-;12818:13;12833;12848:7;12857;12866;12875;12898:40;12941:4;:19;;:31;12961:10;12941:31;;;;;;;;;;;12898:74;;13003:8;:20;;13037:8;:19;;13070:8;:18;;;13102:8;:20;;:46;13123:24;;;;;;;;;;;;;;;;;;;13102:46;;;;;;;;;;;;13162:8;:20;;:51;13183:29;;;;;;;;;;;;;;;;;;;13162:51;;;;;;;;;;;;13227:8;:20;;:43;13248:21;;;;;;;;;;;;;;;;;;;13227:43;;;;;;;;;;;;12982:298;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12677:610;;;;;;;;:::o;7321:382::-;7419:7;7428:4;7465:203;7495:4;7517;:25;;:73;7543:4;:13;;:46;7557:31;;;;;;;;;;;;;;;;;;;7543:46;;;;;;;;;;;;7517:73;;;;;;;;;;;;7608:4;:13;;:46;7622:31;;;;;;;;;;;;;;;;;;;7608:46;;;;;;;;;;;;7465:12;:203::i;:::-;7682:4;7444:252;;;;7321:382;;;:::o;16413:291::-;16511:18;16541:12;16563:14;16604:33;16623:4;:13;;16604:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:18;:33::i;:::-;16587:50;;;;;;;;16660:4;:29;;:37;16690:6;16660:37;;;;;;;;;;;;16647:50;;16413:291;;;;;:::o;863:324:30:-;927:11;940:16;979:1;968:12;;996:4;1001:8;996:14;;;;;;;;;;;990:20;;1025:9;1037:1;1025:13;;1020:161;1044:11;1040:1;:15;1020:161;;;1090:3;1080:4;1085:1;1080:7;;;;;;;;;;;:13;1076:95;;;1119:4;1124:1;1119:7;;;;;;;;;;;1113:13;;1155:1;1144:12;;1076:95;1057:3;;;;;;;1020:161;;;;863:324;;;:::o;326:2209:33:-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;326:2209:33;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;326:2209:33;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;326:2209:33;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;326:2209:33;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./v2TellorGetters.sol\";\n\n/**\n* @title Tellor Master\n* @dev This is the Master contract with all tellor getter functions and delegate call to Tellor.\n* The logic for the functions on this contract is saved on the TellorGettersLibrary, TellorTransfer,\n* TellorGettersLibrary, and TellorStake\n*/\ncontract v2TellorMaster is v2TellorGetters {\n    event NewTellorAddress(address _newTellor);\n\n    /**\n    * @dev The constructor sets the original `tellorStorageOwner` of the contract to the sender\n    * account, the tellor contract to the Tellor master address and owner to the Tellor master owner address\n    * @param _tellorContract is the address for the tellor contract\n    */\n    constructor(address _tellorContract) public {\n        tellor.init();\n        tellor.addressVars[keccak256(\"_owner\")] = msg.sender;\n        tellor.addressVars[keccak256(\"_deity\")] = msg.sender;\n        tellor.addressVars[keccak256(\"tellorContract\")] = _tellorContract;\n        emit NewTellorAddress(_tellorContract);\n    }\n\n    /**\n    * @dev Gets the 5 miners who mined the value for the specified requestId/_timestamp\n    * @dev Only needs to be in library\n    * @param _newDeity the new Deity in the contract\n    */\n\n    function changeDeity(address _newDeity) external {\n        tellor.changeDeity(_newDeity);\n    }\n\n    /**\n    * @dev  allows for the deity to make fast upgrades.  Deity should be 0 address if decentralized\n    * @param _tellorContract the address of the new Tellor Contract\n    */\n    function changeTellorContract(address _tellorContract) external {\n        tellor.changeTellorContract(_tellorContract);\n    }\n\n    /**\n    * @dev This is the fallback function that allows contracts to call the tellor contract at the address stored\n    */\n    function() external payable {\n        address addr = tellor.addressVars[keccak256(\"tellorContract\")];\n        bytes memory _calldata = msg.data;\n        assembly {\n            let result := delegatecall(not(0), addr, add(_calldata, 0x20), mload(_calldata), 0, 0)\n            let size := returndatasize\n            let ptr := mload(0x40)\n            returndatacopy(ptr, 0, size)\n            // revert instead of invalid() bc if the underlying call failed with invalid() it already wasted gas.\n            // if the call returned error data, forward it\n            switch result\n                case 0 {\n                    revert(ptr, size)\n                }\n                default {\n                    return(ptr, size)\n                }\n        }\n    }\n}\n",
  "sourcePath": "/home/jgcarv/Dev/Tellor/TellorLegacy/contracts/v2/v2TellorMaster.sol",
  "ast": {
    "absolutePath": "/home/jgcarv/Dev/Tellor/TellorLegacy/contracts/v2/v2TellorMaster.sol",
    "exportedSymbols": {
      "v2TellorMaster": [
        18953
      ]
    },
    "id": 18954,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 18855,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:33"
      },
      {
        "absolutePath": "/home/jgcarv/Dev/Tellor/TellorLegacy/contracts/v2/v2TellorGetters.sol",
        "file": "./v2TellorGetters.sol",
        "id": 18856,
        "nodeType": "ImportDirective",
        "scope": 18954,
        "sourceUnit": 18854,
        "src": "25:31:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 18857,
              "name": "v2TellorGetters",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 18853,
              "src": "353:15:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_v2TellorGetters_$18853",
                "typeString": "contract v2TellorGetters"
              }
            },
            "id": 18858,
            "nodeType": "InheritanceSpecifier",
            "src": "353:15:33"
          }
        ],
        "contractDependencies": [
          18853
        ],
        "contractKind": "contract",
        "documentation": "@title Tellor Master\n@dev This is the Master contract with all tellor getter functions and delegate call to Tellor.\nThe logic for the functions on this contract is saved on the TellorGettersLibrary, TellorTransfer,\nTellorGettersLibrary, and TellorStake",
        "fullyImplemented": true,
        "id": 18953,
        "linearizedBaseContracts": [
          18953,
          18853
        ],
        "name": "v2TellorMaster",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 18862,
            "name": "NewTellorAddress",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 18861,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18860,
                  "indexed": false,
                  "name": "_newTellor",
                  "nodeType": "VariableDeclaration",
                  "scope": 18862,
                  "src": "398:18:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18859,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "398:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "397:20:33"
            },
            "src": "375:43:33"
          },
          {
            "body": {
              "id": 18908,
              "nodeType": "Block",
              "src": "756:277:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 18867,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18384,
                        "src": "766:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$17268_storage",
                          "typeString": "struct v2TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 18869,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "init",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16738,
                      "src": "766:11:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$17268_storage_ptr_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$17268_storage_ptr_$",
                        "typeString": "function (struct v2TellorStorage.TellorStorageStruct storage pointer)"
                      }
                    },
                    "id": 18870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "766:13:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18871,
                  "nodeType": "ExpressionStatement",
                  "src": "766:13:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 18881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 18872,
                          "name": "tellor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18384,
                          "src": "789:6:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TellorStorageStruct_$17268_storage",
                            "typeString": "struct v2TellorStorage.TellorStorageStruct storage ref"
                          }
                        },
                        "id": 18877,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addressVars",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17218,
                        "src": "789:18:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 18878,
                      "indexExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "5f6f776e6572",
                            "id": 18875,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "818:8:33",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9dbc393ddc18fd27b1d9b1b129059925688d2f2d5818a5ec3ebb750b7c286ea6",
                              "typeString": "literal_string \"_owner\""
                            },
                            "value": "_owner"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9dbc393ddc18fd27b1d9b1b129059925688d2f2d5818a5ec3ebb750b7c286ea6",
                              "typeString": "literal_string \"_owner\""
                            }
                          ],
                          "id": 18874,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18962,
                          "src": "808:9:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 18876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "808:19:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "789:39:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 18879,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18968,
                        "src": "831:3:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 18880,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "831:10:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "789:52:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 18882,
                  "nodeType": "ExpressionStatement",
                  "src": "789:52:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 18892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 18883,
                          "name": "tellor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18384,
                          "src": "851:6:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TellorStorageStruct_$17268_storage",
                            "typeString": "struct v2TellorStorage.TellorStorageStruct storage ref"
                          }
                        },
                        "id": 18888,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addressVars",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17218,
                        "src": "851:18:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 18889,
                      "indexExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "5f6465697479",
                            "id": 18886,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "880:8:33",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c72fb71df90ec89e61e8dea6fee5142880a8a329caaae9ff4931955d88f59990",
                              "typeString": "literal_string \"_deity\""
                            },
                            "value": "_deity"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c72fb71df90ec89e61e8dea6fee5142880a8a329caaae9ff4931955d88f59990",
                              "typeString": "literal_string \"_deity\""
                            }
                          ],
                          "id": 18885,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18962,
                          "src": "870:9:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 18887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "870:19:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "851:39:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 18890,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18968,
                        "src": "893:3:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 18891,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "893:10:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "851:52:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 18893,
                  "nodeType": "ExpressionStatement",
                  "src": "851:52:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 18902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 18894,
                          "name": "tellor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18384,
                          "src": "913:6:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TellorStorageStruct_$17268_storage",
                            "typeString": "struct v2TellorStorage.TellorStorageStruct storage ref"
                          }
                        },
                        "id": 18899,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addressVars",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17218,
                        "src": "913:18:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 18900,
                      "indexExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "74656c6c6f72436f6e7472616374",
                            "id": 18897,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "942:16:33",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_d48fd09afdab521f4f69bd2af8177f60fb0709ce0f1b3d5b8a2e233a20453848",
                              "typeString": "literal_string \"tellorContract\""
                            },
                            "value": "tellorContract"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_d48fd09afdab521f4f69bd2af8177f60fb0709ce0f1b3d5b8a2e233a20453848",
                              "typeString": "literal_string \"tellorContract\""
                            }
                          ],
                          "id": 18896,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18962,
                          "src": "932:9:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 18898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "932:27:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "913:47:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 18901,
                      "name": "_tellorContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18864,
                      "src": "963:15:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "913:65:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 18903,
                  "nodeType": "ExpressionStatement",
                  "src": "913:65:33"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 18905,
                        "name": "_tellorContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18864,
                        "src": "1010:15:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 18904,
                      "name": "NewTellorAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18862,
                      "src": "993:16:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 18906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "993:33:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18907,
                  "nodeType": "EmitStatement",
                  "src": "988:38:33"
                }
              ]
            },
            "documentation": "@dev The constructor sets the original `tellorStorageOwner` of the contract to the sender\naccount, the tellor contract to the Tellor master address and owner to the Tellor master owner address\n@param _tellorContract is the address for the tellor contract",
            "id": 18909,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18864,
                  "name": "_tellorContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 18909,
                  "src": "724:23:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18863,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "724:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "723:25:33"
            },
            "returnParameters": {
              "id": 18866,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "756:0:33"
            },
            "scope": 18953,
            "src": "712:321:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 18920,
              "nodeType": "Block",
              "src": "1284:46:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 18917,
                        "name": "_newDeity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18911,
                        "src": "1313:9:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 18914,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18384,
                        "src": "1294:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$17268_storage",
                          "typeString": "struct v2TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 18916,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "changeDeity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13480,
                      "src": "1294:18:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TellorStorageStruct_$17268_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$17268_storage_ptr_$",
                        "typeString": "function (struct v2TellorStorage.TellorStorageStruct storage pointer,address)"
                      }
                    },
                    "id": 18918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1294:29:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18919,
                  "nodeType": "ExpressionStatement",
                  "src": "1294:29:33"
                }
              ]
            },
            "documentation": "@dev Gets the 5 miners who mined the value for the specified requestId/_timestamp\n@dev Only needs to be in library\n@param _newDeity the new Deity in the contract",
            "id": 18921,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "changeDeity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18912,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18911,
                  "name": "_newDeity",
                  "nodeType": "VariableDeclaration",
                  "scope": 18921,
                  "src": "1256:17:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18910,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1256:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1255:19:33"
            },
            "returnParameters": {
              "id": 18913,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1284:0:33"
            },
            "scope": 18953,
            "src": "1235:95:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 18932,
              "nodeType": "Block",
              "src": "1583:61:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 18929,
                        "name": "_tellorContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18923,
                        "src": "1621:15:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 18926,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18384,
                        "src": "1593:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$17268_storage",
                          "typeString": "struct v2TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 18928,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "changeTellorContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13515,
                      "src": "1593:27:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TellorStorageStruct_$17268_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$17268_storage_ptr_$",
                        "typeString": "function (struct v2TellorStorage.TellorStorageStruct storage pointer,address)"
                      }
                    },
                    "id": 18930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1593:44:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18931,
                  "nodeType": "ExpressionStatement",
                  "src": "1593:44:33"
                }
              ]
            },
            "documentation": "@dev  allows for the deity to make fast upgrades.  Deity should be 0 address if decentralized\n@param _tellorContract the address of the new Tellor Contract",
            "id": 18933,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "changeTellorContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18924,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18923,
                  "name": "_tellorContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 18933,
                  "src": "1549:23:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18922,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1549:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1548:25:33"
            },
            "returnParameters": {
              "id": 18925,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1583:0:33"
            },
            "scope": 18953,
            "src": "1519:125:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 18951,
              "nodeType": "Block",
              "src": "1806:727:33",
              "statements": [
                {
                  "assignments": [
                    18937
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 18937,
                      "name": "addr",
                      "nodeType": "VariableDeclaration",
                      "scope": 18951,
                      "src": "1816:12:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 18936,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1816:7:33",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 18944,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 18938,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18384,
                        "src": "1831:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$17268_storage",
                          "typeString": "struct v2TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 18939,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addressVars",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17218,
                      "src": "1831:18:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                        "typeString": "mapping(bytes32 => address)"
                      }
                    },
                    "id": 18943,
                    "indexExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "74656c6c6f72436f6e7472616374",
                          "id": 18941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1860:16:33",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_d48fd09afdab521f4f69bd2af8177f60fb0709ce0f1b3d5b8a2e233a20453848",
                            "typeString": "literal_string \"tellorContract\""
                          },
                          "value": "tellorContract"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_d48fd09afdab521f4f69bd2af8177f60fb0709ce0f1b3d5b8a2e233a20453848",
                            "typeString": "literal_string \"tellorContract\""
                          }
                        ],
                        "id": 18940,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18962,
                        "src": "1850:9:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 18942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1850:27:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1831:47:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1816:62:33"
                },
                {
                  "assignments": [
                    18946
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 18946,
                      "name": "_calldata",
                      "nodeType": "VariableDeclaration",
                      "scope": 18951,
                      "src": "1888:22:33",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 18945,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1888:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 18949,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 18947,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18968,
                      "src": "1913:3:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 18948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "data",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1913:8:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1888:33:33"
                },
                {
                  "externalReferences": [
                    {
                      "_calldata": {
                        "declaration": 18946,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2023:9:33",
                        "valueSize": 1
                      }
                    },
                    {
                      "_calldata": {
                        "declaration": 18946,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1999:9:33",
                        "valueSize": 1
                      }
                    },
                    {
                      "addr": {
                        "declaration": 18937,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1989:4:33",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 18950,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let result := delegatecall(not(0), addr, add(_calldata, 0x20), mload(_calldata), 0, 0)\n    let size := returndatasize()\n    let ptr := mload(0x40)\n    returndatacopy(ptr, 0, size)\n    switch result\n    case 0 { revert(ptr, size) }\n    default { return(ptr, size) }\n}",
                  "src": "1931:596:33"
                }
              ]
            },
            "documentation": "@dev This is the fallback function that allows contracts to call the tellor contract at the address stored",
            "id": 18952,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18934,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1786:2:33"
            },
            "returnParameters": {
              "id": 18935,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1806:0:33"
            },
            "scope": 18953,
            "src": "1778:755:33",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 18954,
        "src": "326:2209:33"
      }
    ],
    "src": "0:2536:33"
  },
  "legacyAST": {
    "absolutePath": "/home/jgcarv/Dev/Tellor/TellorLegacy/contracts/v2/v2TellorMaster.sol",
    "exportedSymbols": {
      "v2TellorMaster": [
        18953
      ]
    },
    "id": 18954,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 18855,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:33"
      },
      {
        "absolutePath": "/home/jgcarv/Dev/Tellor/TellorLegacy/contracts/v2/v2TellorGetters.sol",
        "file": "./v2TellorGetters.sol",
        "id": 18856,
        "nodeType": "ImportDirective",
        "scope": 18954,
        "sourceUnit": 18854,
        "src": "25:31:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 18857,
              "name": "v2TellorGetters",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 18853,
              "src": "353:15:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_v2TellorGetters_$18853",
                "typeString": "contract v2TellorGetters"
              }
            },
            "id": 18858,
            "nodeType": "InheritanceSpecifier",
            "src": "353:15:33"
          }
        ],
        "contractDependencies": [
          18853
        ],
        "contractKind": "contract",
        "documentation": "@title Tellor Master\n@dev This is the Master contract with all tellor getter functions and delegate call to Tellor.\nThe logic for the functions on this contract is saved on the TellorGettersLibrary, TellorTransfer,\nTellorGettersLibrary, and TellorStake",
        "fullyImplemented": true,
        "id": 18953,
        "linearizedBaseContracts": [
          18953,
          18853
        ],
        "name": "v2TellorMaster",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 18862,
            "name": "NewTellorAddress",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 18861,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18860,
                  "indexed": false,
                  "name": "_newTellor",
                  "nodeType": "VariableDeclaration",
                  "scope": 18862,
                  "src": "398:18:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18859,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "398:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "397:20:33"
            },
            "src": "375:43:33"
          },
          {
            "body": {
              "id": 18908,
              "nodeType": "Block",
              "src": "756:277:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 18867,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18384,
                        "src": "766:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$17268_storage",
                          "typeString": "struct v2TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 18869,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "init",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16738,
                      "src": "766:11:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$17268_storage_ptr_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$17268_storage_ptr_$",
                        "typeString": "function (struct v2TellorStorage.TellorStorageStruct storage pointer)"
                      }
                    },
                    "id": 18870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "766:13:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18871,
                  "nodeType": "ExpressionStatement",
                  "src": "766:13:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 18881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 18872,
                          "name": "tellor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18384,
                          "src": "789:6:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TellorStorageStruct_$17268_storage",
                            "typeString": "struct v2TellorStorage.TellorStorageStruct storage ref"
                          }
                        },
                        "id": 18877,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addressVars",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17218,
                        "src": "789:18:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 18878,
                      "indexExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "5f6f776e6572",
                            "id": 18875,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "818:8:33",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9dbc393ddc18fd27b1d9b1b129059925688d2f2d5818a5ec3ebb750b7c286ea6",
                              "typeString": "literal_string \"_owner\""
                            },
                            "value": "_owner"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9dbc393ddc18fd27b1d9b1b129059925688d2f2d5818a5ec3ebb750b7c286ea6",
                              "typeString": "literal_string \"_owner\""
                            }
                          ],
                          "id": 18874,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18962,
                          "src": "808:9:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 18876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "808:19:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "789:39:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 18879,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18968,
                        "src": "831:3:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 18880,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "831:10:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "789:52:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 18882,
                  "nodeType": "ExpressionStatement",
                  "src": "789:52:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 18892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 18883,
                          "name": "tellor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18384,
                          "src": "851:6:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TellorStorageStruct_$17268_storage",
                            "typeString": "struct v2TellorStorage.TellorStorageStruct storage ref"
                          }
                        },
                        "id": 18888,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addressVars",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17218,
                        "src": "851:18:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 18889,
                      "indexExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "5f6465697479",
                            "id": 18886,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "880:8:33",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c72fb71df90ec89e61e8dea6fee5142880a8a329caaae9ff4931955d88f59990",
                              "typeString": "literal_string \"_deity\""
                            },
                            "value": "_deity"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c72fb71df90ec89e61e8dea6fee5142880a8a329caaae9ff4931955d88f59990",
                              "typeString": "literal_string \"_deity\""
                            }
                          ],
                          "id": 18885,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18962,
                          "src": "870:9:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 18887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "870:19:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "851:39:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 18890,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18968,
                        "src": "893:3:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 18891,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "893:10:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "851:52:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 18893,
                  "nodeType": "ExpressionStatement",
                  "src": "851:52:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 18902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 18894,
                          "name": "tellor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18384,
                          "src": "913:6:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TellorStorageStruct_$17268_storage",
                            "typeString": "struct v2TellorStorage.TellorStorageStruct storage ref"
                          }
                        },
                        "id": 18899,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addressVars",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17218,
                        "src": "913:18:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 18900,
                      "indexExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "74656c6c6f72436f6e7472616374",
                            "id": 18897,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "942:16:33",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_d48fd09afdab521f4f69bd2af8177f60fb0709ce0f1b3d5b8a2e233a20453848",
                              "typeString": "literal_string \"tellorContract\""
                            },
                            "value": "tellorContract"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_d48fd09afdab521f4f69bd2af8177f60fb0709ce0f1b3d5b8a2e233a20453848",
                              "typeString": "literal_string \"tellorContract\""
                            }
                          ],
                          "id": 18896,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18962,
                          "src": "932:9:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 18898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "932:27:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "913:47:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 18901,
                      "name": "_tellorContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18864,
                      "src": "963:15:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "913:65:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 18903,
                  "nodeType": "ExpressionStatement",
                  "src": "913:65:33"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 18905,
                        "name": "_tellorContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18864,
                        "src": "1010:15:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 18904,
                      "name": "NewTellorAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18862,
                      "src": "993:16:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 18906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "993:33:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18907,
                  "nodeType": "EmitStatement",
                  "src": "988:38:33"
                }
              ]
            },
            "documentation": "@dev The constructor sets the original `tellorStorageOwner` of the contract to the sender\naccount, the tellor contract to the Tellor master address and owner to the Tellor master owner address\n@param _tellorContract is the address for the tellor contract",
            "id": 18909,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18864,
                  "name": "_tellorContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 18909,
                  "src": "724:23:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18863,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "724:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "723:25:33"
            },
            "returnParameters": {
              "id": 18866,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "756:0:33"
            },
            "scope": 18953,
            "src": "712:321:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 18920,
              "nodeType": "Block",
              "src": "1284:46:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 18917,
                        "name": "_newDeity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18911,
                        "src": "1313:9:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 18914,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18384,
                        "src": "1294:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$17268_storage",
                          "typeString": "struct v2TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 18916,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "changeDeity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13480,
                      "src": "1294:18:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TellorStorageStruct_$17268_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$17268_storage_ptr_$",
                        "typeString": "function (struct v2TellorStorage.TellorStorageStruct storage pointer,address)"
                      }
                    },
                    "id": 18918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1294:29:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18919,
                  "nodeType": "ExpressionStatement",
                  "src": "1294:29:33"
                }
              ]
            },
            "documentation": "@dev Gets the 5 miners who mined the value for the specified requestId/_timestamp\n@dev Only needs to be in library\n@param _newDeity the new Deity in the contract",
            "id": 18921,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "changeDeity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18912,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18911,
                  "name": "_newDeity",
                  "nodeType": "VariableDeclaration",
                  "scope": 18921,
                  "src": "1256:17:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18910,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1256:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1255:19:33"
            },
            "returnParameters": {
              "id": 18913,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1284:0:33"
            },
            "scope": 18953,
            "src": "1235:95:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 18932,
              "nodeType": "Block",
              "src": "1583:61:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 18929,
                        "name": "_tellorContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18923,
                        "src": "1621:15:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 18926,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18384,
                        "src": "1593:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$17268_storage",
                          "typeString": "struct v2TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 18928,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "changeTellorContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13515,
                      "src": "1593:27:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TellorStorageStruct_$17268_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$17268_storage_ptr_$",
                        "typeString": "function (struct v2TellorStorage.TellorStorageStruct storage pointer,address)"
                      }
                    },
                    "id": 18930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1593:44:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18931,
                  "nodeType": "ExpressionStatement",
                  "src": "1593:44:33"
                }
              ]
            },
            "documentation": "@dev  allows for the deity to make fast upgrades.  Deity should be 0 address if decentralized\n@param _tellorContract the address of the new Tellor Contract",
            "id": 18933,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "changeTellorContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18924,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18923,
                  "name": "_tellorContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 18933,
                  "src": "1549:23:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18922,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1549:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1548:25:33"
            },
            "returnParameters": {
              "id": 18925,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1583:0:33"
            },
            "scope": 18953,
            "src": "1519:125:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 18951,
              "nodeType": "Block",
              "src": "1806:727:33",
              "statements": [
                {
                  "assignments": [
                    18937
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 18937,
                      "name": "addr",
                      "nodeType": "VariableDeclaration",
                      "scope": 18951,
                      "src": "1816:12:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 18936,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1816:7:33",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 18944,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 18938,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18384,
                        "src": "1831:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$17268_storage",
                          "typeString": "struct v2TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 18939,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addressVars",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17218,
                      "src": "1831:18:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                        "typeString": "mapping(bytes32 => address)"
                      }
                    },
                    "id": 18943,
                    "indexExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "74656c6c6f72436f6e7472616374",
                          "id": 18941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1860:16:33",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_d48fd09afdab521f4f69bd2af8177f60fb0709ce0f1b3d5b8a2e233a20453848",
                            "typeString": "literal_string \"tellorContract\""
                          },
                          "value": "tellorContract"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_d48fd09afdab521f4f69bd2af8177f60fb0709ce0f1b3d5b8a2e233a20453848",
                            "typeString": "literal_string \"tellorContract\""
                          }
                        ],
                        "id": 18940,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18962,
                        "src": "1850:9:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 18942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1850:27:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1831:47:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1816:62:33"
                },
                {
                  "assignments": [
                    18946
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 18946,
                      "name": "_calldata",
                      "nodeType": "VariableDeclaration",
                      "scope": 18951,
                      "src": "1888:22:33",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 18945,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1888:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 18949,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 18947,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18968,
                      "src": "1913:3:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 18948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "data",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1913:8:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1888:33:33"
                },
                {
                  "externalReferences": [
                    {
                      "_calldata": {
                        "declaration": 18946,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2023:9:33",
                        "valueSize": 1
                      }
                    },
                    {
                      "_calldata": {
                        "declaration": 18946,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1999:9:33",
                        "valueSize": 1
                      }
                    },
                    {
                      "addr": {
                        "declaration": 18937,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1989:4:33",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 18950,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let result := delegatecall(not(0), addr, add(_calldata, 0x20), mload(_calldata), 0, 0)\n    let size := returndatasize()\n    let ptr := mload(0x40)\n    returndatacopy(ptr, 0, size)\n    switch result\n    case 0 { revert(ptr, size) }\n    default { return(ptr, size) }\n}",
                  "src": "1931:596:33"
                }
              ]
            },
            "documentation": "@dev This is the fallback function that allows contracts to call the tellor contract at the address stored",
            "id": 18952,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18934,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1786:2:33"
            },
            "returnParameters": {
              "id": 18935,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1806:0:33"
            },
            "scope": 18953,
            "src": "1778:755:33",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 18954,
        "src": "326:2209:33"
      }
    ],
    "src": "0:2536:33"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.5",
  "updatedAt": "2020-10-07T17:43:11.887Z",
  "devdoc": {
    "details": "This is the Master contract with all tellor getter functions and delegate call to Tellor. The logic for the functions on this contract is saved on the TellorGettersLibrary, TellorTransfer, TellorGettersLibrary, and TellorStake",
    "methods": {
      "allowance(address,address)": {
        "params": {
          "_spender": "address",
          "_user": "address"
        },
        "return": "Returns the remaining allowance of tokens granted to the _spender from the _user"
      },
      "allowedToTrade(address,uint256)": {
        "details": "This function returns whether or not a given user is allowed to trade a given amount",
        "params": {
          "_amount": "uint of amount",
          "_user": "address"
        },
        "return": "true if the user is alloed to trade the amount specified"
      },
      "balanceOf(address)": {
        "details": "Gets balance of owner specified",
        "params": {
          "_user": "is the owner address used to look up the balance"
        },
        "return": "Returns the balance associated with the passed in _user"
      },
      "balanceOfAt(address,uint256)": {
        "details": "Queries the balance of _user at a specific _blockNumber",
        "params": {
          "_blockNumber": "The block number when the balance is queried",
          "_user": "The address from which the balance will be retrieved"
        },
        "return": "The balance at _blockNumber"
      },
      "changeDeity(address)": {
        "details": "Gets the 5 miners who mined the value for the specified requestId/_timestampOnly needs to be in library",
        "params": {
          "_newDeity": "the new Deity in the contract"
        }
      },
      "changeTellorContract(address)": {
        "details": "allows for the deity to make fast upgrades.  Deity should be 0 address if decentralized",
        "params": {
          "_tellorContract": "the address of the new Tellor Contract"
        }
      },
      "constructor": {
        "details": "The constructor sets the original `tellorStorageOwner` of the contract to the sender account, the tellor contract to the Tellor master address and owner to the Tellor master owner address",
        "params": {
          "_tellorContract": "is the address for the tellor contract"
        }
      },
      "didMine(bytes32,address)": {
        "details": "This function tells you if a given challenge has been completed by a given miner",
        "params": {
          "_challenge": "the challenge to search for",
          "_miner": "address that you want to know if they solved the challenge"
        },
        "return": "true if the _miner address provided solved the"
      },
      "didVote(uint256,address)": {
        "details": "Checks if an address voted in a given dispute",
        "params": {
          "_address": "to look up",
          "_disputeId": "to look up"
        },
        "return": "bool of whether or not party voted"
      },
      "getAddressVars(bytes32)": {
        "details": "allows Tellor to read data from the addressVars mapping",
        "params": {
          "_data": "is the keccak256(\"variable_name\") of the variable that is being accessed. These are examples of how the variables are saved within other functions: addressVars[keccak256(\"_owner\")] addressVars[keccak256(\"tellorContract\")]"
        },
        "return": "address of the requested variable "
      },
      "getAllDisputeVars(uint256)": {
        "details": "Gets all dispute variables",
        "params": {
          "_disputeId": "to look up"
        },
        "return": "bytes32 hash of disputebool executed where true if it has been voted onbool disputeVotePassedbool isPropFork true if the dispute is a proposed forkaddress of reportedMineraddress of reportingPartyaddress of proposedForkAddressuint of requestIduint of timestampuint of valueuint of minExecutionDateuint of numberOfVotesuint of blocknumberuint of minerSlotuint of quorumuint of feeint count of the current tally"
      },
      "getCurrentVariables()": {
        "details": "Getter function for variables for the requestId being currently mined(currentRequestId)",
        "return": "current challenge, curretnRequestId, level of difficulty, api/query string, and granularity(number of decimals requested), total tip for the request"
      },
      "getDisputeIdByDisputeHash(bytes32)": {
        "details": "Checks if a given hash of miner,requestId has been disputed",
        "params": {
          "_hash": "is the sha256(abi.encodePacked(_miners[2],_requestId));"
        },
        "return": "uint disputeId"
      },
      "getDisputeUintVars(uint256,bytes32)": {
        "details": "Checks for uint variables in the disputeUintVars mapping based on the disuputeId",
        "params": {
          "_data": "the variable to pull from the mapping. _data = keccak256(\"variable_name\") where variable_name is the variables/strings used to save the data in the mapping. The variables names are commented out under the disputeUintVars under the Dispute struct",
          "_disputeId": "is the dispute id;"
        },
        "return": "uint value for the bytes32 data submitted"
      },
      "getLastNewValue()": {
        "details": "Gets the a value for the latest timestamp available",
        "return": "value for timestamp of last proof of work submitedtrue if the is a timestamp for the lastNewValue"
      },
      "getLastNewValueById(uint256)": {
        "details": "Gets the a value for the latest timestamp available",
        "params": {
          "_requestId": "being requested"
        },
        "return": "value for timestamp of last proof of work submited and if true if it exist or 0 and false if it doesn't"
      },
      "getMinedBlockNum(uint256,uint256)": {
        "details": "Gets blocknumber for mined timestamp",
        "params": {
          "_requestId": "to look up",
          "_timestamp": "is the timestamp to look up blocknumber"
        },
        "return": "uint of the blocknumber which the dispute was mined"
      },
      "getMinersByRequestIdAndTimestamp(uint256,uint256)": {
        "details": "Gets the 5 miners who mined the value for the specified requestId/_timestamp",
        "params": {
          "_requestId": "to look up",
          "_timestamp": "is the timestamp to look up miners for"
        },
        "return": "the 5 miners' addresses"
      },
      "getNewValueCountbyRequestId(uint256)": {
        "details": "Counts the number of values that have been submited for the request if called for the currentRequest being mined it can tell you how many miners have submitted a value for that request so far",
        "params": {
          "_requestId": "the requestId to look up"
        },
        "return": "uint count of the number of values received for the requestId"
      },
      "getRequestIdByQueryHash(bytes32)": {
        "details": "Getter function for requestId based on the queryHash",
        "params": {
          "_request": "is the hash(of string api and granularity) to check if a request already exists"
        },
        "return": "uint requestId"
      },
      "getRequestIdByRequestQIndex(uint256)": {
        "details": "Getter function for the specified requestQ index",
        "params": {
          "_index": "to look up in the requestQ array"
        },
        "return": "uint of reqeuestId"
      },
      "getRequestIdByTimestamp(uint256)": {
        "details": "Getter function for requestId based on timestamp",
        "params": {
          "_timestamp": "to check requestId"
        },
        "return": "uint of reqeuestId"
      },
      "getRequestQ()": {
        "details": "Getter function for the requestQ array",
        "return": "the requestQ arrray"
      },
      "getRequestUintVars(uint256,bytes32)": {
        "details": "Allowes access to the uint variables saved in the apiUintVars under the requestDetails struct for the requestId specified",
        "params": {
          "_data": "the variable to pull from the mapping. _data = keccak256(\"variable_name\") where variable_name is the variables/strings used to save the data in the mapping. The variables names are commented out under the apiUintVars under the requestDetails struct",
          "_requestId": "to look up"
        },
        "return": "uint value of the apiUintVars specified in _data for the requestId specified"
      },
      "getRequestVars(uint256)": {
        "details": "Gets the API struct variables that are not mappings",
        "params": {
          "_requestId": "to look up"
        },
        "return": "string of api to querystring of symbol of api to querybytes32 hash of stringbytes32 of the granularity(decimal places) requesteduint of index in requestQ arrayuint of current payout/tip for this requestId"
      },
      "getStakerInfo(address)": {
        "details": "This function allows users to retireve all information about a staker",
        "params": {
          "_staker": "address of staker inquiring about"
        },
        "return": "uint current state of stakeruint startDate of staking"
      },
      "getSubmissionsByTimestamp(uint256,uint256)": {
        "details": "Gets the 5 miners who mined the value for the specified requestId/_timestamp",
        "params": {
          "_requestId": "to look up",
          "_timestamp": "is the timestampt to look up miners for"
        },
        "return": "address[5] array of 5 addresses ofminers that mined the requestId"
      },
      "getTimestampbyRequestIDandIndex(uint256,uint256)": {
        "details": "Gets the timestamp for the value based on their index",
        "params": {
          "_index": "is the value index to look up",
          "_requestID": "is the requestId to look up"
        },
        "return": "uint timestamp"
      },
      "getUintVar(bytes32)": {
        "details": "Getter for the variables saved under the TellorStorageStruct uintVars variable",
        "params": {
          "_data": "the variable to pull from the mapping. _data = keccak256(\"variable_name\") where variable_name is the variables/strings used to save the data in the mapping. The variables names are commented out under the uintVars under the TellorStorageStruct struct This is an example of how data is saved into the mapping within other functions: self.uintVars[keccak256(\"stakerCount\")]"
        },
        "return": "uint of specified variable"
      },
      "getVariablesOnDeck()": {
        "details": "Getter function for next requestId on queue/request with highest payout at time the function is called",
        "return": "onDeck/info on request with highest payout-- RequestId, Totaltips, and API query string"
      },
      "isInDispute(uint256,uint256)": {
        "details": "Gets the 5 miners who mined the value for the specified requestId/_timestamp",
        "params": {
          "_requestId": "to look up",
          "_timestamp": "is the timestamp to look up miners for"
        },
        "return": "bool true if requestId/timestamp is under dispute"
      },
      "retrieveData(uint256,uint256)": {
        "details": "Retreive value from oracle based on timestamp",
        "params": {
          "_requestId": "being requested",
          "_timestamp": "to retreive data/value from"
        },
        "return": "value for timestamp submitted"
      },
      "totalSupply()": {
        "details": "Getter for the total_supply of oracle tokens",
        "return": "uint total supply"
      }
    },
    "title": "Tellor Master"
  },
  "userdoc": {
    "methods": {}
  }
}